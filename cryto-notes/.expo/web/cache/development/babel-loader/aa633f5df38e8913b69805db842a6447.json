{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { signin } from \"../queries/auth.js\";\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from \"../state/mappers.js\";\nimport Divider from 'react-native-divider';\nimport { successToast, errorToast } from \"../components/Toaster.js\";\nimport LoadingButton from \"../components/buttons/LoadingButton.js\";\nimport ValidatingTextInput from \"../components/text-inputs/ValidatingTextInput.js\";\nimport PasswordTextInput from \"../components/text-inputs/PasswordTextInput.js\";\nimport Button from \"../components/buttons/Button.js\";\nimport FacebookSigninButton from \"../components/buttons/auth/FacebookSigninButton.js\";\nimport GoogleSigninButton from \"../components/buttons/auth/GoogleSigninButton.js\";\nimport colors from \"../config/colors.js\";\n\nvar LoginScreen = function LoginScreen(_ref) {\n  var setUser = _ref.setUser,\n      navigation = _ref.navigation;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      username = _useState2[0],\n      onChangeUsername = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      onChangePassword = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      failed = _useState6[0],\n      setFailed = _useState6[1];\n\n  var handleSignin = function handleSignin() {\n    return _regeneratorRuntime.async(function handleSignin$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(signin({\n              username: username,\n              password: password\n            }).then(function (result) {\n              successToast({\n                text1: \"Logined is as \" + username\n              });\n              setUser({\n                username: username,\n                cookie: result.cookie\n              });\n            }).catch(function (err) {\n              console.log(err);\n              if (err.response) errorToast({\n                text1: err.response.data\n              });else if (err.message) errorToast({\n                text1: err.message\n              });\n              setFailed(true);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(SafeAreaView, null, React.createElement(Text, {\n    style: styles.titleFont\n  }, \"Allin Chaskisqan Kay\"), React.createElement(Text, {\n    style: styles.translationFont\n  }, \"( Welcome )\"), React.createElement(ValidatingTextInput, {\n    styleTextInput: styles.inputFontSize,\n    styleContainer: styles.input,\n    onChangeText: onChangeUsername,\n    validate: false,\n    placeholder: \"username\",\n    autoCapitalize: \"none\",\n    value: username\n  }), React.createElement(PasswordTextInput, {\n    styleTextInput: styles.inputFontSize,\n    styleContainer: styles.input,\n    onChangeText: onChangePassword,\n    value: password\n  }), React.createElement(LoadingButton, {\n    title: \"Login\",\n    styleButton: styles.horizontalMargin,\n    onPress: handleSignin\n  }), failed ? React.createElement(Button, {\n    onlyText: true,\n    styleText: styles.recoveryFont,\n    title: \"forgot Password?\",\n    onPress: function onPress() {\n      navigation.navigate('Recovery');\n    }\n  }) : React.createElement(React.Fragment, null), React.createElement(Divider, {\n    style: styles.horizontalMarginDivider,\n    orientation: 'center'\n  }, \"with\"), React.createElement(View, {\n    style: styles.row\n  }, React.createElement(FacebookSigninButton, null), React.createElement(GoogleSigninButton, null)), React.createElement(Divider, {\n    style: styles.horizontalMarginDivider,\n    orientation: 'center'\n  }, \"or\"), React.createElement(Button, {\n    onlyText: true,\n    styleText: styles.signUpBtn,\n    title: \"Create Account\",\n    onPress: function onPress() {\n      navigation.navigate('Signup');\n    }\n  }), React.createElement(View, {\n    style: {\n      alignText: 'center',\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'pink'\n    }\n  })));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 10,\n    marginTop: 15\n  },\n  input: {\n    alignSelf: 'center',\n    height: 40,\n    width: 200,\n    margin: 12,\n    borderRadius: 10,\n    borderWidth: 1,\n    padding: 10,\n    shadowOpacity: 100,\n    shadowRadius: 2,\n    shadowOffset: {\n      width: 200,\n      height: -9\n    }\n  },\n  inputFontSize: {\n    fontSize: 16\n  },\n  signUpBtn: {\n    fontSize: 17\n  },\n  recoveryFont: {\n    fontSize: 16\n  },\n  titleFont: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    color: colors.btnGreen,\n    marginLeft: 25,\n    marginTop: 30\n  },\n  translationFont: {\n    fontSize: 15,\n    color: '#808080',\n    alignSelf: 'flex-end',\n    marginRight: 30,\n    marginBottom: 25\n  },\n  horizontalMargin: {\n    marginBottom: 30,\n    marginTop: 10\n  },\n  horizontalMarginDivider: {\n    marginBottom: 20,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/screens/LoginScreen.js"],"names":["StatusBar","React","useEffect","useState","useCallback","signin","SafeAreaProvider","SafeAreaView","connect","mapStateToProps","mapDispatchToProps","Divider","successToast","errorToast","LoadingButton","ValidatingTextInput","PasswordTextInput","Button","FacebookSigninButton","GoogleSigninButton","colors","LoginScreen","setUser","navigation","username","onChangeUsername","password","onChangePassword","failed","setFailed","handleSignin","then","result","text1","cookie","catch","err","console","log","response","data","message","styles","container","titleFont","translationFont","inputFontSize","input","horizontalMargin","recoveryFont","navigate","horizontalMarginDivider","row","signUpBtn","alignText","justifyContent","alignItems","backgroundColor","StyleSheet","create","flex","flexDirection","marginBottom","marginTop","alignSelf","height","width","margin","borderRadius","borderWidth","padding","shadowOpacity","shadowRadius","shadowOffset","fontSize","fontWeight","color","btnGreen","marginLeft","marginRight"],"mappings":";;;;;;;AACA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,SAASC,MAAT;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,gCAA/C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,kBAA1B;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,SAASC,YAAT,EAAuBC,UAAvB;AACA,OAAOC,aAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,iBAAP;AACA,OAAOC,MAAP;AACA,OAAOC,oBAAP;AACA,OAAOC,kBAAP;AACA,OAAOC,MAAP;;AAGA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA6B;AAAA,MAA1BC,OAA0B,QAA1BA,OAA0B;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAC7C,kBAAqCpB,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOqB,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,mBAAqCtB,QAAQ,CAAC,EAAD,CAA7C;AAAA;AAAA,MAAOuB,QAAP;AAAA,MAAiBC,gBAAjB;;AACA,mBAA4BxB,QAAQ,CAAC,KAAD,CAApC;AAAA;AAAA,MAAOyB,MAAP;AAAA,MAAeC,SAAf;;AAEA,MAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACXzB,MAAM,CAAC;AACTmB,cAAAA,QAAQ,EAAEA,QADD;AAETE,cAAAA,QAAQ,EAAEA;AAFD,aAAD,CAAN,CAGHK,IAHG,CAGE,UAAAC,MAAM,EAAI;AACdpB,cAAAA,YAAY,CAAC;AAAEqB,gBAAAA,KAAK,qBAAmBT;AAA1B,eAAD,CAAZ;AACAF,cAAAA,OAAO,CAAC;AACJE,gBAAAA,QAAQ,EAAEA,QADN;AAEJU,gBAAAA,MAAM,EAAEF,MAAM,CAACE;AAFX,eAAD,CAAP;AAIH,aATK,EASHC,KATG,CASI,UAAAC,GAAG,EAAI;AACbC,cAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,kBAAGA,GAAG,CAACG,QAAP,EACI1B,UAAU,CAAC;AAAEoB,gBAAAA,KAAK,EAAEG,GAAG,CAACG,QAAJ,CAAaC;AAAtB,eAAD,CAAV,CADJ,KAEK,IAAGJ,GAAG,CAACK,OAAP,EACD5B,UAAU,CAAC;AAAEoB,gBAAAA,KAAK,EAAEG,GAAG,CAACK;AAAb,eAAD,CAAV;AACJZ,cAAAA,SAAS,CAAC,IAAD,CAAT;AACH,aAhBK,CADW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAoBA,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEa,MAAM,CAACC;AAApB,KACH,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAC;AAAjB,IADG,EAEH,oBAAC,YAAD,QACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE;AAApB,4BADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACG;AAApB,mBAFJ,EAGI,oBAAC,mBAAD;AACI,IAAA,cAAc,EAAEH,MAAM,CAACI,aAD3B;AAEI,IAAA,cAAc,EAAEJ,MAAM,CAACK,KAF3B;AAGI,IAAA,YAAY,EAAEtB,gBAHlB;AAII,IAAA,QAAQ,EAAE,KAJd;AAKI,IAAA,WAAW,EAAC,UALhB;AAMI,IAAA,cAAc,EAAC,MANnB;AAOI,IAAA,KAAK,EAAED;AAPX,IAHJ,EAWI,oBAAC,iBAAD;AACI,IAAA,cAAc,EAAEkB,MAAM,CAACI,aAD3B;AAEI,IAAA,cAAc,EAAEJ,MAAM,CAACK,KAF3B;AAGI,IAAA,YAAY,EAAEpB,gBAHlB;AAII,IAAA,KAAK,EAAED;AAJX,IAXJ,EAgBI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC,OAArB;AACI,IAAA,WAAW,EAAEgB,MAAM,CAACM,gBADxB;AAEI,IAAA,OAAO,EAAElB;AAFb,IAhBJ,EAmBMF,MAAM,GACJ,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,IAAlB;AACI,IAAA,SAAS,EAAEc,MAAM,CAACO,YADtB;AAEI,IAAA,KAAK,EAAC,kBAFV;AAGI,IAAA,OAAO,EAAE,mBAAI;AAAE1B,MAAAA,UAAU,CAAC2B,QAAX,CAAoB,UAApB;AAAiC;AAHpD,IADI,GAKE,yCAxBd,EAyBI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAER,MAAM,CAACS,uBAAvB;AACI,IAAA,WAAW,EAAE;AADjB,YAzBJ,EA2BI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACU;AAApB,KACI,oBAAC,oBAAD,OADJ,EAEI,oBAAC,kBAAD,OAFJ,CA3BJ,EA+BI,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEV,MAAM,CAACS,uBAAvB;AACI,IAAA,WAAW,EAAE;AADjB,UA/BJ,EAiCI,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE,IAAlB;AACI,IAAA,SAAS,EAAET,MAAM,CAACW,SADtB;AAEI,IAAA,KAAK,EAAC,gBAFV;AAGI,IAAA,OAAO,EAAE,mBAAI;AAAE9B,MAAAA,UAAU,CAAC2B,QAAX,CAAoB,QAApB;AAA+B;AAHlD,IAjCJ,EAsCI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AACTI,MAAAA,SAAS,EAAC,QADD;AAETC,MAAAA,cAAc,EAAC,QAFN;AAGTC,MAAAA,UAAU,EAAE,QAHH;AAITC,MAAAA,eAAe,EAAE;AAJR;AAAb,IAtCJ,CAFG,CAAP;AAiDH,CA1ED;;AA4EA,eAAejD,OAAO,CAACC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CW,WAA7C,CAAf;AAEA,IAAMqB,MAAM,GAAGgB,UAAU,CAACC,MAAX,CAAkB;AAC7BhB,EAAAA,SAAS,EAAE;AACPiB,IAAAA,IAAI,EAAE,CADC;AAEPH,IAAAA,eAAe,EAAE,MAFV;AAGPD,IAAAA,UAAU,EAAE;AAHL,GADkB;AAM7BJ,EAAAA,GAAG,EAAC;AACAS,IAAAA,aAAa,EAAE,KADf;AAEAN,IAAAA,cAAc,EAAE,cAFhB;AAGAO,IAAAA,YAAY,EAAE,EAHd;AAIAC,IAAAA,SAAS,EAAE;AAJX,GANyB;AAY7BhB,EAAAA,KAAK,EAAE;AACHiB,IAAAA,SAAS,EAAE,QADR;AAEHC,IAAAA,MAAM,EAAE,EAFL;AAGHC,IAAAA,KAAK,EAAG,GAHL;AAIHC,IAAAA,MAAM,EAAE,EAJL;AAKHC,IAAAA,YAAY,EAAE,EALX;AAMHC,IAAAA,WAAW,EAAE,CANV;AAOHC,IAAAA,OAAO,EAAE,EAPN;AAQHC,IAAAA,aAAa,EAAE,GARZ;AASHC,IAAAA,YAAY,EAAE,CATX;AAUHC,IAAAA,YAAY,EAAE;AACVP,MAAAA,KAAK,EAAE,GADG;AAEVD,MAAAA,MAAM,EAAE,CAAC;AAFC;AAVX,GAZsB;AA2B7BnB,EAAAA,aAAa,EAAE;AACX4B,IAAAA,QAAQ,EAAE;AADC,GA3Bc;AA8B7BrB,EAAAA,SAAS,EAAC;AACNqB,IAAAA,QAAQ,EAAE;AADJ,GA9BmB;AAiC7BzB,EAAAA,YAAY,EAAC;AACTyB,IAAAA,QAAQ,EAAE;AADD,GAjCgB;AAoC7B9B,EAAAA,SAAS,EAAE;AACP8B,IAAAA,QAAQ,EAAE,EADH;AAEPC,IAAAA,UAAU,EAAE,MAFL;AAGPC,IAAAA,KAAK,EAAExD,MAAM,CAACyD,QAHP;AAIPC,IAAAA,UAAU,EAAE,EAJL;AAKPf,IAAAA,SAAS,EAAE;AALJ,GApCkB;AA2C7BlB,EAAAA,eAAe,EAAE;AACb6B,IAAAA,QAAQ,EAAE,EADG;AAEbE,IAAAA,KAAK,EAAE,SAFM;AAGbZ,IAAAA,SAAS,EAAE,UAHE;AAIbe,IAAAA,WAAW,EAAE,EAJA;AAKbjB,IAAAA,YAAY,EAAE;AALD,GA3CY;AAkD7Bd,EAAAA,gBAAgB,EAAC;AACbc,IAAAA,YAAY,EAAE,EADD;AAEbC,IAAAA,SAAS,EAAE;AAFE,GAlDY;AAsD7BZ,EAAAA,uBAAuB,EAAC;AACpBW,IAAAA,YAAY,EAAE,EADM;AAEpBC,IAAAA,SAAS,EAAE;AAFS;AAtDK,CAAlB,CAAf","sourcesContent":["import { StyleSheet, Text,  View, TouchableOpacity, TextInput } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { signin } from '../queries/auth.js'\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport Divider from 'react-native-divider';\nimport { successToast, errorToast } from '../components/Toaster.js';\nimport LoadingButton from '../components/buttons/LoadingButton.js'\nimport ValidatingTextInput from '../components/text-inputs/ValidatingTextInput.js'\nimport PasswordTextInput from '../components/text-inputs/PasswordTextInput.js';\nimport Button from '../components/buttons/Button.js';\nimport FacebookSigninButton from '../components/buttons/auth/FacebookSigninButton.js';\nimport GoogleSigninButton from '../components/buttons/auth/GoogleSigninButton.js';\nimport colors from '../config/colors.js';\n\n\nconst LoginScreen = ({ setUser, navigation }) => {\n    const [username, onChangeUsername] = useState(\"\");\n    const [password, onChangePassword] = useState(\"\");\n    const [failed, setFailed] = useState(false);\n\n    const handleSignin = async () => {  \n        await signin({ \n            username: username,\n            password: password,\n        }).then(result => {\n            successToast({ text1: `Logined is as ${username}` });\n            setUser({\n                username: username, \n                cookie: result.cookie,\n            });\n        }).catch( err => {\n            console.log(err);\n            if(err.response)\n                errorToast({ text1: err.response.data });\n            else if(err.message)\n                errorToast({ text1: err.message });\n            setFailed(true);\n        } )\n    }\n\n    return <View style={styles.container}>\n        <StatusBar style=\"auto\"/>\n        <SafeAreaView>\n            <Text style={styles.titleFont}>Allin Chaskisqan Kay</Text>\n            <Text style={styles.translationFont}>( Welcome )</Text>\n            <ValidatingTextInput\n                styleTextInput={styles.inputFontSize}\n                styleContainer={styles.input}\n                onChangeText={onChangeUsername}\n                validate={false}\n                placeholder=\"username\"\n                autoCapitalize=\"none\"\n                value={username} />\n            <PasswordTextInput \n                styleTextInput={styles.inputFontSize}\n                styleContainer={styles.input}\n                onChangeText={onChangePassword}\n                value={password} />\n            <LoadingButton title=\"Login\"\n                styleButton={styles.horizontalMargin}\n                onPress={handleSignin} />\n            { failed?\n                <Button onlyText={true}\n                    styleText={styles.recoveryFont}\n                    title=\"forgot Password?\"\n                    onPress={()=>{ navigation.navigate('Recovery') }} />\n                    : <></> }\n            <Divider style={styles.horizontalMarginDivider}\n                orientation={'center'}>with</Divider>\n            <View style={styles.row}>\n                <FacebookSigninButton/>\n                <GoogleSigninButton/>\n            </View>\n            <Divider style={styles.horizontalMarginDivider}\n                orientation={'center'}>or</Divider>\n            <Button onlyText={true}\n                styleText={styles.signUpBtn}\n                title=\"Create Account\"\n                onPress={()=>{ navigation.navigate('Signup') }}\n            />\n            <View style={{\n                alignText:'center',\n                justifyContent:'center',\n                alignItems: 'center', \n                backgroundColor: 'pink',\n            }}>\n            </View>\n        </SafeAreaView>\n    </View>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n    },\n    row:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginBottom: 10,\n        marginTop: 15,\n    },\n    input: {\n        alignSelf: 'center',\n        height: 40,\n        width:  200,\n        margin: 12,\n        borderRadius: 10,\n        borderWidth: 1,\n        padding: 10,\n        shadowOpacity: 100,\n        shadowRadius: 2,\n        shadowOffset: {\n            width: 200,\n            height: -9,\n        },\n    },\n    inputFontSize: {\n        fontSize: 16,\n    },\n    signUpBtn:{\n        fontSize: 17,\n    },\n    recoveryFont:{\n        fontSize: 16,\n    },\n    titleFont: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        color: colors.btnGreen,\n        marginLeft: 25,\n        marginTop: 30,\n    },\n    translationFont: {\n        fontSize: 15,\n        color: '#808080', // gray\n        alignSelf: 'flex-end',\n        marginRight: 30,\n        marginBottom: 25,\n    },\n    horizontalMargin:{\n        marginBottom: 30,\n        marginTop: 10,\n    },\n    horizontalMarginDivider:{\n        marginBottom: 20,\n        marginTop: 10,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}