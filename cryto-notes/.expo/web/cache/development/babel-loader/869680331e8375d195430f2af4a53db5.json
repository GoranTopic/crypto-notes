{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport io from \"socket.io-client/dist/socket.io\";\nimport { mapStateToProps, mapDispatchToProps } from \"../state/mappers.js\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport UserDrawer from \"./UserDrawer.js\";\nimport ChatScreen from \"../screens/ChatScreen.js\";\nvar Stack = createNativeStackNavigator();\n\nvar RootStack = function RootStack(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"UserDrawer\",\n    component: UserDrawer,\n    options: {\n      headerShown: false\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"ChatScreen\",\n    component: ChatScreen,\n    options: {\n      headerShown: true\n    }\n  })));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootStack);","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/navigation/LoggedInRootStack.js"],"names":["React","useState","useEffect","connect","io","mapStateToProps","mapDispatchToProps","createDrawerNavigator","createNativeStackNavigator","UserDrawer","ChatScreen","Stack","RootStack","props","headerShown"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,EAAP,MAAe,iCAAf;AACA,SAASC,eAAT,EAA0BC,kBAA1B;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AAEA,IAAMC,KAAK,GAAGH,0BAA0B,EAAxC;;AAKA,IAAMI,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SACrB,0CACE,oBAAC,KAAD,CAAO,SAAP,QACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AACE,IAAA,SAAS,EAAEJ,UADb;AAEE,IAAA,OAAO,EAAE;AAAEK,MAAAA,WAAW,EAAE;AAAf;AAFX,IADF,EAIE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AACE,IAAA,SAAS,EAAEJ,UADb;AAKE,IAAA,OAAO,EAAE;AAAEI,MAAAA,WAAW,EAAE;AAAf;AALX,IAJF,CADF,CADqB;AAAA,CAAvB;;AAgBA,eAAeX,OAAO,CAACE,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CM,SAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport io from \"socket.io-client/dist/socket.io\"; \nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport UserDrawer from './UserDrawer.js';\nimport ChatScreen from '../screens/ChatScreen.js';\n\nconst Stack = createNativeStackNavigator();\n\n// render this stack if user is logged In\n/* this navigator defines the routes for a logged in user, \n * it provide the user logged in context information */\nconst RootStack = props => (\n\t\t<>\n\t\t\t\t<Stack.Navigator>\n\t\t\t\t\t\t<Stack.Screen name=\"UserDrawer\"\n\t\t\t\t\t\t\t\tcomponent={UserDrawer}\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }} />  \n\t\t\t\t\t\t<Stack.Screen name=\"ChatScreen\"\n\t\t\t\t\t\t\t\tcomponent={ChatScreen}\n\t\t\t\t\t\t\t\t//options={({ route }) => ({ \n\t\t\t\t\t\t\t\t//title: route.params.contact.userID \n\t\t\t\t\t\t\t\t//})} \n\t\t\t\t\t\t\t\toptions={{ headerShown: true }} /> \n\t\t\t\t</Stack.Navigator>  \n\t\t</>\n)\n \nexport default connect(mapStateToProps, mapDispatchToProps)(RootStack);\n\n"]},"metadata":{},"sourceType":"module"}