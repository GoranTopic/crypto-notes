{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from \"../state/mappers.js\";\nimport { successToast, errorToast } from \"../components/Toaster.js\";\nimport { signup } from \"../queries/auth\";\nimport LoadingButton from \"../components/buttons/LoadingButton.js\";\nimport ValidatingTextInput from \"../components/text-inputs/ValidatingTextInput.js\";\nimport PasswordTextInput from \"../components/text-inputs/PasswordTextInput.js\";\nimport Divider from 'react-native-divider';\nimport Button from \"../components/buttons/Button.js\";\nimport colors from \"../config/colors.js\";\n\nvar SignupScreen = function SignupScreen(_ref) {\n  var _errors$username, _errors$firstname, _errors$lastname, _errors$email, _errors$mobileNumber, _errors$password;\n\n  var signupUser = _ref.signupUser,\n      navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      errors = _useState2[0],\n      setErrors = _useState2[1];\n\n  var _useState3 = useState(\"tim4\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      username = _useState4[0],\n      setUsername = _useState4[1];\n\n  var _useState5 = useState(\"Timothy\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      firstname = _useState6[0],\n      setFirstname = _useState6[1];\n\n  var _useState7 = useState(\"Sanchez\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      lastname = _useState8[0],\n      setLastname = _useState8[1];\n\n  var _useState9 = useState(\"timothySanchez@email.com\"),\n      _useState10 = _slicedToArray(_useState9, 2),\n      email = _useState10[0],\n      setEmail = _useState10[1];\n\n  var _useState11 = useState(\"17863403679\"),\n      _useState12 = _slicedToArray(_useState11, 2),\n      phone = _useState12[0],\n      setPhone = _useState12[1];\n\n  var _useState13 = useState(\"SuperSecret1\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      password = _useState14[0],\n      setPassword = _useState14[1];\n\n  var _useState15 = useState(\"SuperSecret1\"),\n      _useState16 = _slicedToArray(_useState15, 2),\n      confirmPassword = _useState16[0],\n      setConfirmPassword = _useState16[1];\n\n  var parseErrors = function parseErrors(errors) {\n    var parsedErros = {};\n    errors.forEach(function (err) {\n      return parsedErros[err.param] = {\n        value: err.value,\n        msg: err.msg\n      };\n    });\n    setErrors(parsedErros);\n    return parsedErros;\n  };\n\n  var handleSubmitForm = function handleSubmitForm() {\n    var user;\n    return _regeneratorRuntime.async(function handleSubmitForm$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            user = {\n              username: username,\n              firstname: firstname,\n              lastname: lastname,\n              email: email,\n              mobileNumber: phone,\n              password: password\n            };\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(signup(user).then(function (result) {\n              successToast({\n                text1: \"Signed up as \" + user.username\n              });\n              signupUser(_objectSpread(_objectSpread({}, user), {}, {\n                cookie: result.cookie\n              }));\n            }).catch(function (err) {\n              console.log('got this error');\n              console.log(err);\n\n              if (err.response) {\n                if (err.response.data.errors) parseErrors(err.response.data.errors);\n              } else if (err.message) errorToast({\n                text1: err.message\n              });\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(ScrollView, {\n    style: styles.container\n  }, React.createElement(StatusBar, {\n    style: \"auto\"\n  }), React.createElement(SafeAreaView, null, React.createElement(Text, {\n    style: styles.titleFont\n  }, \"Join the Ayllu\"), React.createElement(Text, {\n    style: styles.translationFont\n  }, \"( Family )\"), React.createElement(ValidatingTextInput, {\n    styleTextInput: styles.input,\n    styleContainer: styles.inputContainer,\n    styleErrorText: styles.errorMsg,\n    onChangeText: setUsername,\n    matches: 'username',\n    placeholder: \"username\",\n    showError: errors.username ? true : false,\n    error: ((_errors$username = errors.username) == null ? void 0 : _errors$username.msg) || \"Invaild username\",\n    autoCapitalize: \"none\",\n    autoCorrect: false,\n    autoComplete: 'username',\n    blurOnSubmit: true,\n    value: username\n  }), React.createElement(ValidatingTextInput, {\n    styleTextInput: styles.input,\n    styleContainer: styles.inputContainer,\n    styleErrorText: styles.errorMsg,\n    onChangeText: setFirstname,\n    placeholder: \"firstname\",\n    showError: errors.firstname ? true : false,\n    error: ((_errors$firstname = errors.firstname) == null ? void 0 : _errors$firstname.msg) || \"Invaild firstname\",\n    autoComplete: 'name-given',\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    value: firstname\n  }), React.createElement(ValidatingTextInput, {\n    styleTextInput: styles.input,\n    styleContainer: styles.inputContainer,\n    styleErrorText: styles.errorMsg,\n    onChangeText: setLastname,\n    placeholder: \"lastname\",\n    showError: errors.lastname ? true : false,\n    error: ((_errors$lastname = errors.lastname) == null ? void 0 : _errors$lastname.msg) || \"Invaild lastname\",\n    autoComplete: 'name-family',\n    autoCorrect: false,\n    autoCapitalize: \"none\",\n    value: lastname\n  }), React.createElement(ValidatingTextInput, {\n    styleTextInput: styles.input,\n    styleContainer: styles.inputContainer,\n    styleErrorText: styles.errorMsg,\n    onChangeText: setEmail,\n    error: \"most be valid email\",\n    placeholder: \"email\",\n    showError: errors.email ? true : false,\n    error: ((_errors$email = errors.email) == null ? void 0 : _errors$email.msg) || \"Invaild email\",\n    keyboardType: \"email-address\",\n    autoComplete: 'email',\n    isEmail: true,\n    autoCapitalize: \"none\",\n    value: email\n  }), React.createElement(ValidatingTextInput, {\n    styleTextInput: styles.input,\n    styleContainer: styles.inputContainer,\n    styleErrorText: styles.errorMsg,\n    onChangeText: setPhone,\n    error: 'must be valid US number',\n    placeholder: \"phone number\",\n    showError: errors.mobileNumber ? true : false,\n    error: ((_errors$mobileNumber = errors.mobileNumber) == null ? void 0 : _errors$mobileNumber.msg) || \"Invaild phone number\",\n    isMobilePhone: 'en-US',\n    keyboardType: \"phone-pad\",\n    autoComplete: 'tel',\n    autoCapitalize: \"none\",\n    value: phone\n  }), React.createElement(PasswordTextInput, {\n    styleTextInput: styles.inputFontSize,\n    styleErrorContainer: styles.inputContainer,\n    styleContainer: styles.input,\n    onChangeText: setPassword,\n    autoComplete: 'password',\n    showError: errors.password ? true : false,\n    errorMsg: ((_errors$password = errors.password) == null ? void 0 : _errors$password.msg) || \"Invaild password\",\n    placeholder: \"Password\",\n    value: password\n  }), React.createElement(PasswordTextInput, {\n    styleTextInput: styles.inputFontSize,\n    styleErrorContainer: styles.inputContainer,\n    styleContainer: styles.input,\n    onChangeText: setConfirmPassword,\n    placeholder: \"Confirm Password\",\n    validate: function validate(text) {\n      return text === password;\n    },\n    errorMsg: 'Must match password',\n    value: confirmPassword\n  }), React.createElement(Divider, {\n    style: styles.horizontalMarginDivider,\n    orientation: 'center'\n  }), React.createElement(LoadingButton, {\n    title: \"Signup!\",\n    disable: true,\n    styleButton: styles.horizontalMargin,\n    onPress: handleSubmitForm\n  })));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupScreen);\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column',\n    backgroundColor: '#fff',\n    alignContent: 'center'\n  },\n  row: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginBottom: 10,\n    marginTop: 15\n  },\n  input: {\n    fontSize: 16,\n    width: 200,\n    margin: 12,\n    borderRadius: 10,\n    borderWidth: 1,\n    padding: 6\n  },\n  inputContainer: {\n    alignSelf: 'center'\n  },\n  errorMsg: {\n    marginLeft: '6%'\n  },\n  inputFontSize: {\n    fontSize: 16\n  },\n  signUpBtn: {\n    fontSize: 17\n  },\n  titleFont: {\n    fontSize: 25,\n    fontWeight: 'bold',\n    color: colors.btnGreen,\n    marginLeft: 10,\n    marginTop: 0,\n    textAlign: 'center'\n  },\n  translationFont: {\n    fontSize: 15,\n    color: '#808080',\n    alignSelf: 'flex-end',\n    marginRight: 95,\n    textAlign: 'center'\n  },\n  horizontalMargin: {\n    marginBottom: 30,\n    marginTop: 10\n  },\n  horizontalMarginDivider: {\n    marginBottom: 20,\n    marginTop: 10\n  }\n});","map":{"version":3,"sources":["/home/telix/crypto-note/cryto-note/src/screens/SignupScreen.js"],"names":["React","useState","StatusBar","SafeAreaProvider","SafeAreaView","connect","mapStateToProps","mapDispatchToProps","successToast","errorToast","signup","LoadingButton","ValidatingTextInput","PasswordTextInput","Divider","Button","colors","SignupScreen","signupUser","navigation","errors","setErrors","username","setUsername","firstname","setFirstname","lastname","setLastname","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","parseErrors","parsedErros","forEach","err","param","value","msg","handleSubmitForm","user","mobileNumber","then","result","text1","cookie","catch","console","log","response","data","message","styles","container","titleFont","translationFont","input","inputContainer","errorMsg","inputFontSize","text","horizontalMarginDivider","horizontalMargin","StyleSheet","create","flex","flexDirection","backgroundColor","alignContent","row","justifyContent","marginBottom","marginTop","fontSize","width","margin","borderRadius","borderWidth","padding","alignSelf","marginLeft","signUpBtn","fontWeight","color","btnGreen","textAlign","marginRight"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, ScrollView } from 'react-native';\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport { successToast, errorToast } from '../components/Toaster.js';\nimport { signup } from '../queries/auth';\nimport LoadingButton from '../components/buttons/LoadingButton.js'\nimport ValidatingTextInput from '../components/text-inputs/ValidatingTextInput.js'\nimport PasswordTextInput from '../components/text-inputs/PasswordTextInput.js';\nimport Divider from 'react-native-divider';\nimport Button from '../components/buttons/Button.js';\nimport colors from '../config/colors.js';\n\n\nconst SignupScreen = ({ signupUser, navigation }) => {\n    const [errors, setErrors] = useState([]);\n    const [username, setUsername] = useState(\"tim4\");\n    const [firstname, setFirstname] = useState(\"Timothy\");\n    const [lastname, setLastname] = useState(\"Sanchez\");\n    const [email, setEmail] = useState(\"timothySanchez@email.com\");\n    const [phone, setPhone] = useState(\"17863403679\");\n    const [password, setPassword] = useState(\"SuperSecret1\");\n    const [confirmPassword, setConfirmPassword] = useState(\"SuperSecret1\");\n\n    const parseErrors = errors => { // parse Errors\n        let parsedErros = {};\n        errors.forEach( err => parsedErros[err.param] = {\n            value: err.value,\n            msg: err.msg,\n        });\n        setErrors(parsedErros);\n        return parsedErros;\n    }\n\n    const handleSubmitForm = async () => {\n        let user = { username, firstname, lastname,\n            email, mobileNumber: phone, password };\n        await signup(user)\n            .then(result => {\n            successToast({ text1: `Signed up as ${user.username}` });\n            signupUser({\n                ...user,\n                cookie: result.cookie,\n            });\n        }).catch( err => {\n            console.log('got this error');\n            console.log(err);\n            if(err.response){\n                //errorToast({ text1: \"Failed to sign up\" });\n                if(err.response.data.errors)\n                    parseErrors(err.response.data.errors);\n            }else if(err.message)\n                errorToast({ text1: err.message });\n        })\n    }\n\n    return <ScrollView style={styles.container}>\n        <StatusBar style=\"auto\"/>\n        <SafeAreaView>\n            <Text style={styles.titleFont}>Join the Ayllu</Text>\n            <Text style={styles.translationFont}>( Family )</Text>\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setUsername}\n                matches={'username'}\n                placeholder=\"username\"\n                showError={ errors.username? true:false }\n                error={errors.username?.msg ||\n                        \"Invaild username\" }\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                autoComplete={'username'}\n                blurOnSubmit={true}\n                value={username}/>\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setFirstname}\n                placeholder=\"firstname\"\n                showError={ errors.firstname? true:false }\n                error={errors.firstname?.msg ||\n                        \"Invaild firstname\" }\n                autoComplete={'name-given'}\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                value={firstname}/>\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setLastname}\n                placeholder=\"lastname\"\n                showError={ errors.lastname? true:false }\n                error={errors.lastname?.msg || \"Invaild lastname\" }\n                autoComplete={'name-family'}\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                value={lastname} />\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setEmail}\n                error={\"most be valid email\"}\n                placeholder=\"email\"\n                showError={ errors.email? true:false }\n                error={errors.email?.msg || \"Invaild email\" }\n                keyboardType={\"email-address\"}\n                autoComplete={'email'}\n                isEmail\n                autoCapitalize=\"none\"\n                value={email} />\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setPhone}\n                error={'must be valid US number'}\n                placeholder=\"phone number\"\n                showError={ errors.mobileNumber? true:false }\n                error={errors.mobileNumber?.msg ||\n                        \"Invaild phone number\" }\n                isMobilePhone={'en-US'}\n                keyboardType={\"phone-pad\"}\n                autoComplete={'tel'}\n                autoCapitalize=\"none\"\n                value={phone} />\n            <PasswordTextInput\n                styleTextInput={styles.inputFontSize}\n                styleErrorContainer={styles.inputContainer}\n                styleContainer={styles.input}\n                onChangeText={setPassword}\n                autoComplete={'password'}\n                showError={ errors.password? true:false }\n                errorMsg={errors.password?.msg ||\n                        \"Invaild password\" }\n                placeholder=\"Password\"\n                value={password} />\n            <PasswordTextInput\n                styleTextInput={styles.inputFontSize}\n                styleErrorContainer={styles.inputContainer}\n                styleContainer={styles.input}\n                onChangeText={setConfirmPassword}\n                placeholder=\"Confirm Password\"\n                validate={text => text === password}\n                errorMsg={'Must match password'}\n                value={confirmPassword} />\n            <Divider style={styles.horizontalMarginDivider} orientation={'center'}/>\n            <LoadingButton title=\"Signup!\"\n                disable={true}\n                styleButton={styles.horizontalMargin}\n                onPress={handleSubmitForm} />\n        </SafeAreaView>\n    </ScrollView>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupScreen);\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        backgroundColor: '#fff',\n        //alignItems: 'center',\n        alignContent: 'center',\n        //justifyContent: 'space-evenly',\n    },\n    row:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginBottom: 10,\n        marginTop: 15,\n    },\n    input: {\n        fontSize: 16,\n        width:  200,\n        margin: 12,\n        borderRadius: 10,\n        borderWidth: 1,\n        padding: 6,\n    },\n    inputContainer: {\n        alignSelf: 'center',\n    },\n    errorMsg:{\n        //alignSelf: 'center',\n        marginLeft: '6%',\n    },\n    inputFontSize: {\n        fontSize: 16,\n    },\n    signUpBtn:{\n        fontSize: 17,\n    },\n    titleFont: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        color: colors.btnGreen, \n        marginLeft: 10,\n        marginTop: 0,\n        textAlign: 'center',\n    },\n    translationFont: {\n        fontSize: 15,\n        color: '#808080', // gray\n        alignSelf: 'flex-end',\n        marginRight: 95,\n        textAlign: 'center',\n    },\n    horizontalMargin:{\n        marginBottom: 30,\n        marginTop: 10,\n    },\n    horizontalMarginDivider:{\n        marginBottom: 20,\n        marginTop: 10,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}