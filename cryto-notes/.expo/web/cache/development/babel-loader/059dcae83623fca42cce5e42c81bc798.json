{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport setCookie from 'set-cookie-parser';\nimport axios from \"./axios-config.js\";\n\nvar checkCookie = function checkCookie(cookie) {\n  var username,\n      _args = arguments;\n  return _regeneratorRuntime.async(function checkCookie$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          username = _args.length > 1 && _args[1] !== undefined ? _args[1] : null;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get('/user/whoami', {}, {\n            withCredentials: false,\n            headers: {\n              Authorization: \"Bearer \" + cookie.value\n            }\n          }).then(function (res) {\n            if (username) return true;\n            if (res.data.username === username) return true;else return false;\n          }).catch(function (error) {\n            console.log(error);\n            if (error.response) console.log(error.response.data);\n            return null;\n          }));\n\n        case 3:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar signin = function signin(_ref) {\n  var username, password;\n  return _regeneratorRuntime.async(function signin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          username = _ref.username, password = _ref.password;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(axios.post('/auth/signin', {\n            \"username\": username,\n            \"password\": password\n          }, {\n            withCredentials: false\n          }).then(function (res) {\n            var cookie = setCookie.parse(res, {\n              decodeValues: true,\n              map: true\n            });\n            return {\n              data: res.data.status,\n              cookie: cookie[\"maki-cookie\"]\n            };\n          }).catch(function (error) {\n            throw error;\n          }));\n\n        case 3:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 4:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar signout = function signout() {\n  return _regeneratorRuntime.async(function signout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.post('/auth/signout').then(function (res) {\n            if (res.data.status === \"success\") return true;\n          }).catch(function (error) {\n            if (error.response) console.log(error.response.data);\n            return false;\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar signup = function signup(user) {\n  return _regeneratorRuntime.async(function signup$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(axios.post('/auth/signup', user, {\n            withCredentials: false,\n            headers: {\n              'content-type': 'application/json'\n            }\n          }).then(function (res) {\n            console.log(\"got response in sign up\");\n            console.log(res);\n            return res;\n          }).catch(function (error) {\n            console.log(\"got error in sign up\");\n            console.log(error);\n            throw error;\n          }));\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport { signin, signup, signout, checkCookie };","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/queries/auth.js"],"names":["setCookie","axios","checkCookie","cookie","username","get","withCredentials","headers","Authorization","value","then","res","data","catch","error","console","log","response","signin","password","post","parse","decodeValues","map","status","signout","signup","user"],"mappings":"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","sourcesContent":["import setCookie from 'set-cookie-parser';\nimport axios from './axios-config.js';\n\nconst checkCookie = async (cookie, username = null)  => \n    await axios.get('/user/whoami', { }, { \n        withCredentials: false,\n        headers: { Authorization: `Bearer ${cookie.value}` },\n    }).then( res => {\n        if(username) return true;\n        if(res.data.username === username) return true;\n        else return false;\n    }).catch( error => {\n        console.log(error);\n        if(error.response) \n            console.log(error.response.data); \n        return null;\n    })\n\nconst signin = async ({ username, password }) =>\n    await axios\n        .post( '/auth/signin', {  //send query without\n            \"username\": username, //auto seting the cookie value\n            \"password\": password,\n        }, { withCredentials: false })\n        .then( res => { // this only run with status 200\n            let cookie = setCookie.parse(res, {\n                decodeValues: true,  // default: true\n                map: true\n            });\n            return { \n                data: res.data.status, \n                cookie: cookie[\"maki-cookie\"],\n            };\n        })\n        .catch( error => { // handle error\n            throw error;\n            //return { suceess: false, msg: error.response.data};\n        })\n\nconst signout = async () =>\n    await axios\n        .post('/auth/signout')\n        .then( res => {\n            if(res.data.status === \"success\") return true;\n        })\n        .catch( error => {\n            if(error.response)\n                console.log(error.response.data);\n            return false;\n        })\n\n\nconst signup = async user =>\n    await axios\n        .post( '/auth/signup', user , {\n            withCredentials: false,\n            headers: {\n                //'content-type': 'multipart/form-data',\n                'content-type': 'application/json',\n            },\n        })\n        .then( res => { // this only run with status 200\n            console.log(\"got response in sign up\");\n            console.log(res);\n            return res;\n        })\n        .catch( error => { // handle error\n            console.log(\"got error in sign up\");\n            console.log(error);\n            throw error;\n            //return { suceess: false, msg: error.response.data};\n        })\n\nexport { signin, signup, signout, checkCookie }\n"]},"metadata":{},"sourceType":"module"}