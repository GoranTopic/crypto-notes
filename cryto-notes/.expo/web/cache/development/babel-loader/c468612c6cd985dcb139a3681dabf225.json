{"ast":null,"code":"import React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\nimport thunk from \"redux-thunk\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\nimport { createLogger } from \"redux-logger\";\n\nfunction HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Button, {\n    onPress: navigation.openDrawer,\n    title: \"Open navigation drawer\"\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.navigate('Notifications');\n    },\n    title: \"Go to notifications\"\n  }));\n}\n\nfunction NotificationsScreen(_ref2) {\n  var navigation = _ref2.navigation;\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }\n  }, React.createElement(Button, {\n    onPress: navigation.openDrawer,\n    title: \"Open navigation drawer\"\n  }), React.createElement(Button, {\n    onPress: function onPress() {\n      return navigation.goBack();\n    },\n    title: \"Go back home\"\n  }));\n}\n\nvar Drawer = createDrawerNavigator();\nvar RootStack = createStackNavigator();\nexport default function App() {\n  return React.createElement(NavigationContainer, null, React.createElement(RootStack.Navigator, null, React.createElement(Drawer.Navigator, {\n    initialRouteName: \"Home\"\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeScreen\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notifications\",\n    component: NotificationsScreen\n  }))));\n}","map":{"version":3,"sources":["/home/telix/crypto-note/cryto-note/App.js"],"names":["React","createDrawerNavigator","NavigationContainer","thunk","AsyncStorage","Provider","applyMiddleware","combineReducers","compose","createStore","createLogger","HomeScreen","navigation","flex","alignItems","justifyContent","openDrawer","navigate","NotificationsScreen","goBack","Drawer","RootStack","createStackNavigator","App"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,KAAP,MAAkB,aAAlB;SACSC,Y;AACT,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,eAA1B,EAA2CC,OAA3C,EAAoDC,WAApD,QAAuE,OAAvE;AAEA,SAASC,YAAT,QAA6B,cAA7B;;AAMA,SAASC,UAAT,OAAoC;AAAA,MAAdC,UAAc,QAAdA,UAAc;AAClC,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD;AAAb,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEH,UAAU,CAACI,UADtB;AAEE,IAAA,KAAK,EAAC;AAFR,IADF,EAKE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMJ,UAAU,CAACK,QAAX,CAAoB,eAApB,CAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAC;AAFR,IALF,CADF;AAYD;;AAED,SAASC,mBAAT,QAA6C;AAAA,MAAdN,UAAc,SAAdA,UAAc;AAC3C,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,UAAU,EAAE,QAAvB;AAAiCC,MAAAA,cAAc,EAAE;AAAjD;AAAb,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAEH,UAAU,CAACI,UADtB;AAEE,IAAA,KAAK,EAAC;AAFR,IADF,EAKE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE;AAAA,aAAMJ,UAAU,CAACO,MAAX,EAAN;AAAA,KADX;AAEE,IAAA,KAAK,EAAC;AAFR,IALF,CADF;AAYD;;AAED,IAAMC,MAAM,GAAGnB,qBAAqB,EAApC;AACA,IAAMoB,SAAS,GAAGC,oBAAoB,EAAtC;AAEA,eAAe,SAASC,GAAT,GAAe;AAC5B,SACE,oBAAC,mBAAD,QACE,oBAAC,SAAD,CAAW,SAAX,QACE,oBAAC,MAAD,CAAQ,SAAR;AAAkB,IAAA,gBAAgB,EAAC;AAAnC,KACE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,MAApB;AAA2B,IAAA,SAAS,EAAEZ;AAAtC,IADF,EAEE,oBAAC,MAAD,CAAQ,MAAR;AAAe,IAAA,IAAI,EAAC,eAApB;AAAoC,IAAA,SAAS,EAAEO;AAA/C,IAFF,CADF,CADF,CADF;AAUD","sourcesContent":["import React from 'react';\nimport { Button, View } from 'react-native';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport thunk from \"redux-thunk\";\nimport { AsyncStorage } from \"react-native\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\n//import { autoRehydrate, persistStore } from \"redux-persist\";\nimport { createLogger } from \"redux-logger\";\n\n//import MainTabs from \"./MainTabs\";\n//import { noteReducers } from \"./reducers\";\n\n\nfunction HomeScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button\n        onPress={navigation.openDrawer}\n        title=\"Open navigation drawer\"\n      />\n      <Button\n        onPress={() => navigation.navigate('Notifications')}\n        title=\"Go to notifications\"\n      />\n    </View>\n  );\n}\n\nfunction NotificationsScreen({ navigation }) {\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n      <Button\n        onPress={navigation.openDrawer}\n        title=\"Open navigation drawer\"\n      />\n      <Button\n        onPress={() => navigation.goBack()}\n        title=\"Go back home\"\n      />\n    </View>\n  );\n}\n\nconst Drawer = createDrawerNavigator();\nconst RootStack = createStackNavigator();\n\nexport default function App() {\n\t\treturn (\n\t\t\t\t<NavigationContainer>\n\t\t\t\t\t\t<RootStack.Navigator>\n\t\t\t\t\t\t\t\t<Drawer.Navigator initialRouteName=\"Home\">\n\t\t\t\t\t\t\t\t\t\t<Drawer.Screen name=\"Home\" component={HomeScreen} />\n\t\t\t\t\t\t\t\t\t\t<Drawer.Screen name=\"Notifications\" component={NotificationsScreen} />\n\t\t\t\t\t\t\t\t</Drawer.Navigator>\n\t\t\t\t\t\t</RootStack.Navigator>\n\t\t\t\t</NavigationContainer>\n\t\t);\n}\n"]},"metadata":{},"sourceType":"module"}