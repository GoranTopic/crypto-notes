{"ast":null,"code":"import React from'react';import{NavigationContainer}from'@react-navigation/native';import Toast from'react-native-toast-message';import{toastConfig}from\"../components/Toaster.js\";import{connect}from'react-redux';import{mapStateToProps,mapDispatchToProps}from\"../state/mappers.js\";import LoggedInRootStack from\"./LoggedInRootStack.js\";import SignInRootStack from\"./SignInRootStack.js\";var AppNavigator=function AppNavigator(_ref){var state=_ref.state;var isSignedIn=state.user.isSignedIn;return React.createElement(React.Fragment,null,React.createElement(NavigationContainer,null,isSignedIn?React.createElement(LoggedInRootStack,null):React.createElement(SignInRootStack,null),React.createElement(Toast,null)));};export default connect(mapStateToProps,mapDispatchToProps)(AppNavigator);","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/navigation/AppNavigator.js"],"names":["React","NavigationContainer","Toast","toastConfig","connect","mapStateToProps","mapDispatchToProps","LoggedInRootStack","SignInRootStack","AppNavigator","state","isSignedIn","user"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAmB,OAAnB,CACA,OAASC,mBAAT,KAAoC,0BAApC,CACA,MAAOC,CAAAA,KAAP,KAAkB,4BAAlB,CACA,OAASC,WAAT,gCACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,eAAT,CAA0BC,kBAA1B,2BACA,MAAOC,CAAAA,iBAAP,8BACA,MAAOC,CAAAA,eAAP,4BAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,MAAgB,IAAbC,CAAAA,KAAa,MAAbA,KAAa,CACnC,GAAQC,CAAAA,UAAR,CAAwBD,KAAK,CAACE,IAA9B,CAAQD,UAAR,CACA,MAAO,yCACL,oBAAC,mBAAD,MACIA,UAAU,CACV,oBAAC,iBAAD,MADU,CAEV,oBAAC,eAAD,MAHJ,CAKE,oBAAC,KAAD,MALF,CADK,CAAP,CASD,CAXD,CAaA,cAAeP,CAAAA,OAAO,CAACC,eAAD,CAAkBC,kBAAlB,CAAP,CAA6CG,YAA7C,CAAf","sourcesContent":["import React  from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Toast from 'react-native-toast-message'\nimport { toastConfig } from '../components/Toaster.js';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js'\nimport LoggedInRootStack from './LoggedInRootStack.js';\nimport SignInRootStack from './SignInRootStack.js';\n\nconst AppNavigator = ({ state }) =>  {  \t\n\t\tconst { isSignedIn }  = state.user; // get state of user\n\t\treturn <>\n\t\t\t\t<NavigationContainer>     \n\t\t\t\t\t\t{ isSignedIn?\n\t\t\t\t\t\t\t\t<LoggedInRootStack/> : // render if user is logged in\n\t\t\t\t\t\t\t\t<SignInRootStack/>  // render is not logged in\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Toast/>\n\t\t\t\t</NavigationContainer>\n\t\t</>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavigator);\n\n\n\n"]},"metadata":{},"sourceType":"module"}