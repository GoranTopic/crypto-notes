{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import{Surface}from'@react-native-community/art';import AnimatedCircle from\"../animated/AnimatedCircle\";import{color}from\"../const\";var RippleLoader=function(_React$PureComponent){_inherits(RippleLoader,_React$PureComponent);var _super=_createSuper(RippleLoader);function RippleLoader(){var _this;_classCallCheck(this,RippleLoader);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={scales:[new Animated.Value(0.1),new Animated.Value(0.1)],opacities:[new Animated.Value(1),new Animated.Value(1)]};_this.timers=[];_this._animation=function(i){var frequency=_this.props.frequency;Animated.parallel([Animated.timing(_this.state.scales[i],{toValue:1,duration:frequency,useNativeDriver:false}),Animated.timing(_this.state.opacities[i],{toValue:0,duration:frequency,delay:frequency/2,useNativeDriver:false})]).start(function(){if(!_this.unmounted){_this.state.scales[i].setValue(0.1);_this.state.opacities[i].setValue(1);_this._animation(i);}});};return _this;}_createClass(RippleLoader,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.state.scales.forEach(function(item,i){var id=setTimeout(function(){_this2._animation(i);},i*_this2.props.frequency*0.75);_this2.timers.push(id);});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unmounted=true;this.timers.forEach(function(id){clearTimeout(id);});}},{key:\"render\",value:function render(){var _this$props=this.props,color=_this$props.color,size=_this$props.size,strokeWidth=_this$props.strokeWidth;var _this$state=this.state,scales=_this$state.scales,opacities=_this$state.opacities;return React.createElement(Surface,{width:size+strokeWidth,height:size+strokeWidth},scales.map(function(item,i){return React.createElement(AnimatedCircle,{key:i,radius:size,stroke:color,strokeWidth:strokeWidth,scale:scales[i],opacity:opacities[i],x:(size+strokeWidth)/2,y:(size+strokeWidth)/2});}));}}]);return RippleLoader;}(React.PureComponent);RippleLoader.propTypes={color:PropTypes.string,size:PropTypes.number,strokeWidth:PropTypes.number,frequency:PropTypes.number};RippleLoader.defaultProps={color:color,size:40,strokeWidth:3,frequency:1600};export{RippleLoader as default};","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/node_modules/react-native-indicator/lib/loader/RippleLoader.js"],"names":["React","PropTypes","Surface","AnimatedCircle","color","RippleLoader","state","scales","Animated","Value","opacities","timers","_animation","i","frequency","props","parallel","timing","toValue","duration","useNativeDriver","delay","start","unmounted","setValue","forEach","item","id","setTimeout","push","clearTimeout","size","strokeWidth","map","PureComponent","propTypes","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class RippleLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.number,\n    strokeWidth: PropTypes.number,\n    frequency: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    size: 40,\n    strokeWidth: 3,\n    frequency: 1600,\n  };\n\n  state = {\n    scales: [new Animated.Value(0.1), new Animated.Value(0.1)],\n    opacities: [new Animated.Value(1), new Animated.Value(1)],\n  };\n  timers = [];\n\n  componentDidMount() {\n    this.state.scales.forEach((item, i) => {\n      const id = setTimeout(() => {\n        this._animation(i);\n      }, i * this.props.frequency * 0.75);\n      this.timers.push(id);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.timers.forEach((id) => {\n      clearTimeout(id);\n    });\n  }\n\n  _animation = (i) => {\n    const { frequency } = this.props;\n    Animated.parallel([\n      Animated.timing(this.state.scales[i], {\n        toValue: 1,\n        duration: frequency,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.state.opacities[i], {\n        toValue: 0,\n        duration: frequency,\n        delay: frequency / 2,\n        useNativeDriver: false,\n      }),\n    ]).start(() => {\n      if (!this.unmounted) {\n        this.state.scales[i].setValue(0.1);\n        this.state.opacities[i].setValue(1);\n        this._animation(i);\n      }\n    });\n  };\n\n  render() {\n    const { color, size, strokeWidth } = this.props;\n    const { scales, opacities } = this.state;\n    return (\n      <Surface width={size + strokeWidth} height={size + strokeWidth}>\n        {scales.map((item, i) => (\n          <AnimatedCircle\n            key={i}\n            radius={size}\n            stroke={color}\n            strokeWidth={strokeWidth}\n            scale={scales[i]}\n            opacity={opacities[i]}\n            x={(size + strokeWidth) / 2}\n            y={(size + strokeWidth) / 2}\n          />\n        ))}\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}