{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React from'react';var getLayoutValue=function getLayoutValue(key){return function(event){var _event$nativeEvent$la,_event$nativeEvent,_event$nativeEvent$la2;return(_event$nativeEvent$la=event==null?void 0:(_event$nativeEvent=event.nativeEvent)==null?void 0:(_event$nativeEvent$la2=_event$nativeEvent.layout)==null?void 0:_event$nativeEvent$la2[key])!=null?_event$nativeEvent$la:0;};};export function useViewDimensions(){var _ref=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{},_ref$heightOffset=_ref.heightOffset,heightOffset=_ref$heightOffset===void 0?0:_ref$heightOffset,_ref$widthOffset=_ref.widthOffset,widthOffset=_ref$widthOffset===void 0?0:_ref$widthOffset;var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),height=_React$useState2[0],setHeight=_React$useState2[1];var _React$useState3=React.useState(0),_React$useState4=_slicedToArray(_React$useState3,2),width=_React$useState4[0],setWidth=_React$useState4[1];var computeViewDimensions=React.useCallback(function(event){var h=getLayoutValue('height')(event);var w=getLayoutValue('width')(event);setHeight(h+heightOffset);setWidth(w+widthOffset);},[heightOffset,widthOffset]);return{computeViewDimensions:computeViewDimensions,height:height,width:width};}","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/node_modules/react-native-toast-message/lib/src/hooks/useViewDimensions.js"],"names":["React","getLayoutValue","key","event","nativeEvent","layout","useViewDimensions","heightOffset","widthOffset","useState","height","setHeight","width","setWidth","computeViewDimensions","useCallback","h","w"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,QAAS,UAACC,KAAD,mGAAWA,KAAX,kCAAWA,KAAK,CAAEC,WAAlB,uCAAW,mBAAoBC,MAA/B,eAAW,uBAA6BH,GAA7B,CAAX,8BAAgD,CAAhD,EAAT,EAAvB,CAIA,MAAO,SAASI,CAAAA,iBAAT,EAAuE,oEAAJ,EAAI,wBAA1CC,YAA0C,CAA1CA,YAA0C,4BAA3B,CAA2B,yCAAxBC,WAAwB,CAAxBA,WAAwB,2BAAV,CAAU,kBAC1E,oBAA4BR,KAAK,CAACS,QAAN,CAAe,CAAf,CAA5B,oDAAOC,MAAP,qBAAeC,SAAf,qBACA,qBAA0BX,KAAK,CAACS,QAAN,CAAe,CAAf,CAA1B,qDAAOG,KAAP,qBAAcC,QAAd,qBACA,GAAMC,CAAAA,qBAAqB,CAAGd,KAAK,CAACe,WAAN,CAAkB,SAACZ,KAAD,CAAW,CACvD,GAAMa,CAAAA,CAAC,CAAGf,cAAc,CAAC,QAAD,CAAd,CAAyBE,KAAzB,CAAV,CACA,GAAMc,CAAAA,CAAC,CAAGhB,cAAc,CAAC,OAAD,CAAd,CAAwBE,KAAxB,CAAV,CACAQ,SAAS,CAACK,CAAC,CAAGT,YAAL,CAAT,CACAM,QAAQ,CAACI,CAAC,CAAGT,WAAL,CAAR,CACH,CAL6B,CAK3B,CAACD,YAAD,CAAeC,WAAf,CAL2B,CAA9B,CAMA,MAAO,CACHM,qBAAqB,CAArBA,qBADG,CAEHJ,MAAM,CAANA,MAFG,CAGHE,KAAK,CAALA,KAHG,CAAP,CAKH","sourcesContent":["import React from 'react';\nconst getLayoutValue = (key) => (event) => event?.nativeEvent?.layout?.[key] ?? 0;\n/**\n * Retrieves View dimensions (height, width) from a LayoutChangeEvent and sets them on state\n */\nexport function useViewDimensions({ heightOffset = 0, widthOffset = 0 } = {}) {\n    const [height, setHeight] = React.useState(0);\n    const [width, setWidth] = React.useState(0);\n    const computeViewDimensions = React.useCallback((event) => {\n        const h = getLayoutValue('height')(event);\n        const w = getLayoutValue('width')(event);\n        setHeight(h + heightOffset);\n        setWidth(w + widthOffset);\n    }, [heightOffset, widthOffset]);\n    return {\n        computeViewDimensions,\n        height,\n        width\n    };\n}\n"]},"metadata":{},"sourceType":"module"}