{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import{useLogger}from\"../contexts\";import{usePanResponder,useSlideAnimation,useViewDimensions}from\"../hooks\";import{noop}from\"../utils/func\";import{bound}from\"../utils/number\";import{getTestId}from\"../utils/test-id\";import{styles}from\"./AnimatedContainer.styles\";export function dampingFor(gesture,position){var moveY=gesture.moveY;switch(position){case'bottom':{var _Dimensions$get=Dimensions.get('screen'),screenHeight=_Dimensions$get.height;return Math.abs(screenHeight-moveY);}case'top':return Math.abs(moveY);default:throw new Error(\"Toast position: \"+position+\" not implemented\");}}export function animatedValueFor(gesture,position,damping){var boundValue=function boundValue(val){return bound(val,0,2);};var dy=gesture.dy;switch(position){case'bottom':return boundValue(1-dy/damping);case'top':return boundValue(1+dy/damping);default:throw new Error(\"Toast position: \"+position+\" not implemented\");}}export function AnimatedContainer(_ref){var children=_ref.children,isVisible=_ref.isVisible,position=_ref.position,topOffset=_ref.topOffset,bottomOffset=_ref.bottomOffset,keyboardOffset=_ref.keyboardOffset,onHide=_ref.onHide,_ref$onRestorePositio=_ref.onRestorePosition,onRestorePosition=_ref$onRestorePositio===void 0?noop:_ref$onRestorePositio;var _useLogger=useLogger(),log=_useLogger.log;var _useViewDimensions=useViewDimensions(),computeViewDimensions=_useViewDimensions.computeViewDimensions,height=_useViewDimensions.height;var _useSlideAnimation=useSlideAnimation({position:position,height:height,topOffset:topOffset,bottomOffset:bottomOffset,keyboardOffset:keyboardOffset}),animatedValue=_useSlideAnimation.animatedValue,animate=_useSlideAnimation.animate,animationStyles=_useSlideAnimation.animationStyles;var onDismiss=React.useCallback(function(){log('Swipe, dismissing');animate(0);onHide();},[animate,log,onHide]);var onRestore=React.useCallback(function(){log('Swipe, restoring to original position');animate(1);onRestorePosition();},[animate,log,onRestorePosition]);var computeNewAnimatedValueForGesture=React.useCallback(function(gesture){var damping=dampingFor(gesture,position);var newAnimatedValue=animatedValueFor(gesture,position,damping);return newAnimatedValue;},[position]);var _usePanResponder=usePanResponder({animatedValue:animatedValue,computeNewAnimatedValueForGesture:computeNewAnimatedValueForGesture,onDismiss:onDismiss,onRestore:onRestore}),panResponder=_usePanResponder.panResponder;React.useLayoutEffect(function(){var newAnimationValue=isVisible?1:0;animate(newAnimationValue);},[animate,isVisible]);return React.createElement(Animated.View,_extends({testID:getTestId('AnimatedContainer'),onLayout:computeViewDimensions,style:[styles.base,styles[position],animationStyles],pointerEvents:\"box-none\"},panResponder.panHandlers),children);}","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/node_modules/react-native-toast-message/lib/src/components/AnimatedContainer.js"],"names":["React","useLogger","usePanResponder","useSlideAnimation","useViewDimensions","noop","bound","getTestId","styles","dampingFor","gesture","position","moveY","Dimensions","get","screenHeight","height","Math","abs","Error","animatedValueFor","damping","boundValue","val","dy","AnimatedContainer","children","isVisible","topOffset","bottomOffset","keyboardOffset","onHide","onRestorePosition","log","computeViewDimensions","animatedValue","animate","animationStyles","onDismiss","useCallback","onRestore","computeNewAnimatedValueForGesture","newAnimatedValue","panResponder","useLayoutEffect","newAnimationValue","base","panHandlers"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Animated, Dimensions } from 'react-native';\nimport { useLogger } from '../contexts';\nimport { usePanResponder, useSlideAnimation, useViewDimensions } from '../hooks';\nimport { noop } from '../utils/func';\nimport { bound } from '../utils/number';\nimport { getTestId } from '../utils/test-id';\nimport { styles } from './AnimatedContainer.styles';\n/**\n * Produces a positive damping value.\n *\n * To note: `moveY` becomes negative when going off-screen. By making sure the value\n * produced is always positive, we avoid issues like: https://github.com/calintamas/react-native-toast-message/issues/280\n */\nexport function dampingFor(gesture, position) {\n    const { moveY } = gesture;\n    switch (position) {\n        case 'bottom': {\n            const { height: screenHeight } = Dimensions.get('screen');\n            return Math.abs(screenHeight - moveY);\n        }\n        case 'top':\n            return Math.abs(moveY);\n        default:\n            throw new Error(`Toast position: ${position} not implemented`);\n    }\n}\nexport function animatedValueFor(gesture, position, damping) {\n    const boundValue = (val) => bound(val, 0, 2);\n    const { dy } = gesture;\n    switch (position) {\n        case 'bottom':\n            return boundValue(1 - dy / damping);\n        case 'top':\n            return boundValue(1 + dy / damping);\n        default:\n            throw new Error(`Toast position: ${position} not implemented`);\n    }\n}\nexport function AnimatedContainer({ children, isVisible, position, topOffset, bottomOffset, keyboardOffset, onHide, onRestorePosition = noop }) {\n    const { log } = useLogger();\n    const { computeViewDimensions, height } = useViewDimensions();\n    const { animatedValue, animate, animationStyles } = useSlideAnimation({\n        position,\n        height,\n        topOffset,\n        bottomOffset,\n        keyboardOffset\n    });\n    const onDismiss = React.useCallback(() => {\n        log('Swipe, dismissing');\n        animate(0);\n        onHide();\n    }, [animate, log, onHide]);\n    const onRestore = React.useCallback(() => {\n        log('Swipe, restoring to original position');\n        animate(1);\n        onRestorePosition();\n    }, [animate, log, onRestorePosition]);\n    const computeNewAnimatedValueForGesture = React.useCallback((gesture) => {\n        const damping = dampingFor(gesture, position);\n        const newAnimatedValue = animatedValueFor(gesture, position, damping);\n        return newAnimatedValue;\n    }, [position]);\n    const { panResponder } = usePanResponder({\n        animatedValue,\n        computeNewAnimatedValueForGesture,\n        onDismiss,\n        onRestore\n    });\n    React.useLayoutEffect(() => {\n        const newAnimationValue = isVisible ? 1 : 0;\n        animate(newAnimationValue);\n    }, [animate, isVisible]);\n    return (<Animated.View testID={getTestId('AnimatedContainer')} onLayout={computeViewDimensions} style={[styles.base, styles[position], animationStyles]} \n    // This container View is never the target of touch events but its subviews can be.\n    // By doing this, tapping buttons behind the Toast is allowed\n    pointerEvents='box-none' {...panResponder.panHandlers}>\n      {children}\n    </Animated.View>);\n}\n"]},"metadata":{},"sourceType":"module"}