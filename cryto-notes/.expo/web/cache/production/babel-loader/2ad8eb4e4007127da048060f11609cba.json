{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React from'react';import Keyboard from\"react-native-web/dist/exports/Keyboard\";import{isIOS}from\"../utils/platform\";export function useKeyboard(){var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),keyboardHeight=_React$useState2[0],setKeyboardHeight=_React$useState2[1];var _React$useState3=React.useState(false),_React$useState4=_slicedToArray(_React$useState3,2),isKeyboardVisible=_React$useState4[0],setIsKeyboardVisible=_React$useState4[1];var onShow=React.useCallback(function(event){var height=event.endCoordinates.height;setKeyboardHeight(height);setIsKeyboardVisible(true);},[]);var onHide=React.useCallback(function(){setKeyboardHeight(0);setIsKeyboardVisible(false);},[]);React.useEffect(function(){if(!isIOS()){return function(){};}var didShowListener=Keyboard.addListener('keyboardDidShow',onShow);var didHideListener=Keyboard.addListener('keyboardDidHide',onHide);return function(){didShowListener.remove();didHideListener.remove();};},[onHide,onShow]);return{keyboardHeight:keyboardHeight,isKeyboardVisible:isKeyboardVisible};}","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/node_modules/react-native-toast-message/lib/src/hooks/useKeyboard.js"],"names":["React","isIOS","useKeyboard","useState","keyboardHeight","setKeyboardHeight","isKeyboardVisible","setIsKeyboardVisible","onShow","useCallback","event","height","endCoordinates","onHide","useEffect","didShowListener","Keyboard","addListener","didHideListener","remove"],"mappings":"iEAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,6DAEA,OAASC,KAAT,yBACA,MAAO,SAASC,CAAAA,WAAT,EAAuB,CAC1B,oBAA4CF,KAAK,CAACG,QAAN,CAAe,CAAf,CAA5C,oDAAOC,cAAP,qBAAuBC,iBAAvB,qBACA,qBAAkDL,KAAK,CAACG,QAAN,CAAe,KAAf,CAAlD,qDAAOG,iBAAP,qBAA0BC,oBAA1B,qBACA,GAAMC,CAAAA,MAAM,CAAGR,KAAK,CAACS,WAAN,CAAkB,SAACC,KAAD,CAAW,CACxC,GAAQC,CAAAA,MAAR,CAAmBD,KAAK,CAACE,cAAzB,CAAQD,MAAR,CACAN,iBAAiB,CAACM,MAAD,CAAjB,CACAJ,oBAAoB,CAAC,IAAD,CAApB,CACH,CAJc,CAIZ,EAJY,CAAf,CAKA,GAAMM,CAAAA,MAAM,CAAGb,KAAK,CAACS,WAAN,CAAkB,UAAM,CACnCJ,iBAAiB,CAAC,CAAD,CAAjB,CACAE,oBAAoB,CAAC,KAAD,CAApB,CACH,CAHc,CAGZ,EAHY,CAAf,CAIAP,KAAK,CAACc,SAAN,CAAgB,UAAM,CAClB,GAAI,CAACb,KAAK,EAAV,CAAc,CACV,MAAO,WAAM,CAAG,CAAhB,CACH,CACD,GAAMc,CAAAA,eAAe,CAAGC,QAAQ,CAACC,WAAT,CAAqB,iBAArB,CAAwCT,MAAxC,CAAxB,CACA,GAAMU,CAAAA,eAAe,CAAGF,QAAQ,CAACC,WAAT,CAAqB,iBAArB,CAAwCJ,MAAxC,CAAxB,CACA,MAAO,WAAM,CACTE,eAAe,CAACI,MAAhB,GACAD,eAAe,CAACC,MAAhB,GACH,CAHD,CAIH,CAVD,CAUG,CAACN,MAAD,CAASL,MAAT,CAVH,EAWA,MAAO,CACHJ,cAAc,CAAdA,cADG,CAEHE,iBAAiB,CAAjBA,iBAFG,CAAP,CAIH","sourcesContent":["import React from 'react';\nimport { Keyboard } from 'react-native';\nimport { isIOS } from '../utils/platform';\nexport function useKeyboard() {\n    const [keyboardHeight, setKeyboardHeight] = React.useState(0);\n    const [isKeyboardVisible, setIsKeyboardVisible] = React.useState(false);\n    const onShow = React.useCallback((event) => {\n        const { height } = event.endCoordinates;\n        setKeyboardHeight(height);\n        setIsKeyboardVisible(true);\n    }, []);\n    const onHide = React.useCallback(() => {\n        setKeyboardHeight(0);\n        setIsKeyboardVisible(false);\n    }, []);\n    React.useEffect(() => {\n        if (!isIOS()) {\n            return () => { };\n        }\n        const didShowListener = Keyboard.addListener('keyboardDidShow', onShow);\n        const didHideListener = Keyboard.addListener('keyboardDidHide', onHide);\n        return () => {\n            didShowListener.remove();\n            didHideListener.remove();\n        };\n    }, [onHide, onShow]);\n    return {\n        keyboardHeight,\n        isKeyboardVisible\n    };\n}\n"]},"metadata":{},"sourceType":"module"}