{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import React from'react';import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import colors from\"../../config/colors.js\";export default function Button(props){var onPress=props.onPress,_props$title=props.title,title=_props$title===void 0?'button':_props$title,_props$style=props.style,style=_props$style===void 0?{}:_props$style,_props$styleButton=props.styleButton,styleButton=_props$styleButton===void 0?{}:_props$styleButton,_props$styleText=props.styleText,styleText=_props$styleText===void 0?{}:_props$styleText,onlyText=props.onlyText;var btnStyles=[styles.button,onlyText?styles.tranparentBtn:{},styleButton,style];var textStyles=[styles.text,onlyText?styles.onlyText:{},styleText];return React.createElement(TouchableOpacity,_extends({},props,{style:btnStyles,onPress:onPress}),React.createElement(Text,_extends({},props,{style:textStyles}),title));}var styles=StyleSheet.create({button:{alignItems:'center',justifyContent:'center',paddingVertical:10,paddingHorizontal:30,borderRadius:8,elevation:5,borderWidth:1,borderColor:colors.btnBorder,backgroundColor:colors.btnGreen},text:{fontSize:16,lineHeight:21,fontWeight:'normal',letterSpacing:0.25,color:'white'},onlyText:{color:colors.btnGreen,fontSize:14},tranparentBtn:{elevation:0,borderWidth:0,borderColor:'transparent',backgroundColor:'transparent',justifyContent:\"space-between\"}});","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/components/buttons/Button.js"],"names":["React","colors","Button","props","onPress","title","style","styleButton","styleText","onlyText","btnStyles","styles","button","tranparentBtn","textStyles","text","StyleSheet","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","borderWidth","borderColor","btnBorder","backgroundColor","btnGreen","fontSize","lineHeight","fontWeight","letterSpacing","color"],"mappings":"qDAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wPAEA,MAAOC,CAAAA,MAAP,8BAEA,cAAe,SAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CAClC,GACIC,CAAAA,OADJ,CAOID,KAPJ,CACIC,OADJ,cAOID,KAPJ,CAEIE,KAFJ,CAEIA,KAFJ,uBAEY,QAFZ,2BAOIF,KAPJ,CAGIG,KAHJ,CAGIA,KAHJ,uBAGW,EAHX,iCAOIH,KAPJ,CAIII,WAJJ,CAIIA,WAJJ,6BAIkB,EAJlB,qCAOIJ,KAPJ,CAKIK,SALJ,CAKIA,SALJ,2BAKgB,EALhB,kBAMIC,QANJ,CAOIN,KAPJ,CAMIM,QANJ,CASA,GAAIC,CAAAA,SAAS,CAAG,CACZC,MAAM,CAACC,MADK,CAEZH,QAAQ,CAAEE,MAAM,CAACE,aAAT,CAAyB,EAFrB,CAGZN,WAHY,CAIZD,KAJY,CAAhB,CAOA,GAAIQ,CAAAA,UAAU,CAAG,CACbH,MAAM,CAACI,IADM,CAEbN,QAAQ,CAAEE,MAAM,CAACF,QAAT,CAAoB,EAFf,CAGbD,SAHa,CAAjB,CAMA,MACI,qBAAC,gBAAD,aAAsBL,KAAtB,EACI,KAAK,CAAEO,SADX,CAEI,OAAO,CAAEN,OAFb,GAGI,oBAAC,IAAD,aAAUD,KAAV,EAAiB,KAAK,CAAEW,UAAxB,GAAsCT,KAAtC,CAHJ,CADJ,CAOH,CAED,GAAMM,CAAAA,MAAM,CAAGK,UAAU,CAACC,MAAX,CAAkB,CAC7BL,MAAM,CAAE,CACJM,UAAU,CAAE,QADR,CAEJC,cAAc,CAAE,QAFZ,CAGJC,eAAe,CAAE,EAHb,CAIJC,iBAAiB,CAAE,EAJf,CAKJC,YAAY,CAAE,CALV,CAMJC,SAAS,CAAE,CANP,CAOJC,WAAW,CAAE,CAPT,CAQJC,WAAW,CAAExB,MAAM,CAACyB,SARhB,CASJC,eAAe,CAAE1B,MAAM,CAAC2B,QATpB,CADqB,CAY7Bb,IAAI,CAAE,CACFc,QAAQ,CAAE,EADR,CAEFC,UAAU,CAAE,EAFV,CAGFC,UAAU,CAAE,QAHV,CAIFC,aAAa,CAAE,IAJb,CAKFC,KAAK,CAAE,OALL,CAZuB,CAmB7BxB,QAAQ,CAAE,CACNwB,KAAK,CAAEhC,MAAM,CAAC2B,QADR,CAENC,QAAQ,CAAE,EAFJ,CAnBmB,CAuB7BhB,aAAa,CAAC,CACVU,SAAS,CAAE,CADD,CAEVC,WAAW,CAAE,CAFH,CAGVC,WAAW,CAAG,aAHJ,CAIVE,eAAe,CAAE,aAJP,CAKVR,cAAc,CAAE,eALN,CAvBe,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity  } from 'react-native';\nimport colors from '../../config/colors.js'\n\nexport default function Button(props) {\n    const { \n        onPress, \n        title = 'button', \n        style= {},\n        styleButton = {}, \n        styleText = {},\n        onlyText,\n    } = props;\n\n    let btnStyles = [ \n        styles.button,  \n        onlyText? styles.tranparentBtn : {} ,\n        styleButton,\n        style,\n    ];\n\n    let textStyles = [ \n        styles.text, \n        onlyText? styles.onlyText : {},\n        styleText,\n    ];\n\n    return (\n        <TouchableOpacity {...props} \n            style={btnStyles} \n            onPress={onPress} >\n            <Text {...props} style={textStyles} >{title}</Text>\n        </TouchableOpacity>\n    );\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 10,\n        paddingHorizontal: 30,\n        borderRadius: 8,\n        elevation: 5,\n        borderWidth: 1,\n        borderColor: colors.btnBorder,\n        backgroundColor: colors.btnGreen,\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'normal',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    onlyText: {\n        color: colors.btnGreen,\n        fontSize: 14,\n    },\n    tranparentBtn:{\n        elevation: 0,\n        borderWidth: 0,\n        borderColor:  'transparent',\n        backgroundColor: 'transparent',\n        justifyContent: \"space-between\",\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}