{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import React from'react';import{AnimatedContainer}from\"./components/AnimatedContainer\";import{ErrorToast}from\"./components/ErrorToast\";import{InfoToast}from\"./components/InfoToast\";import{SuccessToast}from\"./components/SuccessToast\";var defaultToastConfig={success:function success(props){return React.createElement(SuccessToast,props);},error:function error(props){return React.createElement(ErrorToast,props);},info:function info(props){return React.createElement(InfoToast,props);}};function renderComponent(_ref){var data=_ref.data,options=_ref.options,config=_ref.config,isVisible=_ref.isVisible,show=_ref.show,hide=_ref.hide;var text1=data.text1,text2=data.text2;var type=options.type,onPress=options.onPress,position=options.position,props=options.props;var toastConfig=_objectSpread(_objectSpread({},defaultToastConfig),config);var ToastComponent=toastConfig[type];if(!ToastComponent){throw new Error(\"Toast type: '\"+type+\"' does not exist. You can add it via the 'config' prop on the Toast instance. Learn more: https://github.com/calintamas/react-native-toast-message/blob/master/README.md\");}return ToastComponent({position:position,type:type,isVisible:isVisible,text1:text1,text2:text2,show:show,hide:hide,onPress:onPress,props:props});}export function ToastUI(props){var isVisible=props.isVisible,options=props.options,hide=props.hide;var position=options.position,topOffset=options.topOffset,bottomOffset=options.bottomOffset,keyboardOffset=options.keyboardOffset;return React.createElement(AnimatedContainer,{isVisible:isVisible,position:position,topOffset:topOffset,bottomOffset:bottomOffset,keyboardOffset:keyboardOffset,onHide:hide},renderComponent(props));}","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/node_modules/react-native-toast-message/lib/src/ToastUI.js"],"names":["React","AnimatedContainer","ErrorToast","InfoToast","SuccessToast","defaultToastConfig","success","props","error","info","renderComponent","data","options","config","isVisible","show","hide","text1","text2","type","onPress","position","toastConfig","ToastComponent","Error","ToastUI","topOffset","bottomOffset","keyboardOffset"],"mappings":"w0BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,iBAAT,sCACA,OAASC,UAAT,+BACA,OAASC,SAAT,8BACA,OAASC,YAAT,iCACA,GAAMC,CAAAA,kBAAkB,CAAG,CACvBC,OAAO,CAAE,iBAACC,KAAD,QAAW,qBAAC,YAAD,CAAkBA,KAAlB,CAAX,EADc,CAEvBC,KAAK,CAAE,eAACD,KAAD,QAAW,qBAAC,UAAD,CAAgBA,KAAhB,CAAX,EAFgB,CAGvBE,IAAI,CAAE,cAACF,KAAD,QAAW,qBAAC,SAAD,CAAeA,KAAf,CAAX,EAHiB,CAA3B,CAKA,QAASG,CAAAA,eAAT,MAA2E,IAAhDC,CAAAA,IAAgD,MAAhDA,IAAgD,CAA1CC,OAA0C,MAA1CA,OAA0C,CAAjCC,MAAiC,MAAjCA,MAAiC,CAAzBC,SAAyB,MAAzBA,SAAyB,CAAdC,IAAc,MAAdA,IAAc,CAARC,IAAQ,MAARA,IAAQ,CACvE,GAAQC,CAAAA,KAAR,CAAyBN,IAAzB,CAAQM,KAAR,CAAeC,KAAf,CAAyBP,IAAzB,CAAeO,KAAf,CACA,GAAQC,CAAAA,IAAR,CAA2CP,OAA3C,CAAQO,IAAR,CAAcC,OAAd,CAA2CR,OAA3C,CAAcQ,OAAd,CAAuBC,QAAvB,CAA2CT,OAA3C,CAAuBS,QAAvB,CAAiCd,KAAjC,CAA2CK,OAA3C,CAAiCL,KAAjC,CACA,GAAMe,CAAAA,WAAW,gCACVjB,kBADU,EAEVQ,MAFU,CAAjB,CAIA,GAAMU,CAAAA,cAAc,CAAGD,WAAW,CAACH,IAAD,CAAlC,CACA,GAAI,CAACI,cAAL,CAAqB,CACjB,KAAM,IAAIC,CAAAA,KAAJ,iBAA0BL,IAA1B,4KAAN,CACH,CACD,MAAOI,CAAAA,cAAc,CAAC,CAClBF,QAAQ,CAARA,QADkB,CAElBF,IAAI,CAAJA,IAFkB,CAGlBL,SAAS,CAATA,SAHkB,CAIlBG,KAAK,CAALA,KAJkB,CAKlBC,KAAK,CAALA,KALkB,CAMlBH,IAAI,CAAJA,IANkB,CAOlBC,IAAI,CAAJA,IAPkB,CAQlBI,OAAO,CAAPA,OARkB,CASlBb,KAAK,CAALA,KATkB,CAAD,CAArB,CAWH,CACD,MAAO,SAASkB,CAAAA,OAAT,CAAiBlB,KAAjB,CAAwB,CAC3B,GAAQO,CAAAA,SAAR,CAAqCP,KAArC,CAAQO,SAAR,CAAmBF,OAAnB,CAAqCL,KAArC,CAAmBK,OAAnB,CAA4BI,IAA5B,CAAqCT,KAArC,CAA4BS,IAA5B,CACA,GAAQK,CAAAA,QAAR,CAA8DT,OAA9D,CAAQS,QAAR,CAAkBK,SAAlB,CAA8Dd,OAA9D,CAAkBc,SAAlB,CAA6BC,YAA7B,CAA8Df,OAA9D,CAA6Be,YAA7B,CAA2CC,cAA3C,CAA8DhB,OAA9D,CAA2CgB,cAA3C,CACA,MAAQ,qBAAC,iBAAD,EAAmB,SAAS,CAAEd,SAA9B,CAAyC,QAAQ,CAAEO,QAAnD,CAA6D,SAAS,CAAEK,SAAxE,CAAmF,YAAY,CAAEC,YAAjG,CAA+G,cAAc,CAAEC,cAA/H,CAA+I,MAAM,CAAEZ,IAAvJ,EACLN,eAAe,CAACH,KAAD,CADV,CAAR,CAGH","sourcesContent":["import React from 'react';\nimport { AnimatedContainer } from './components/AnimatedContainer';\nimport { ErrorToast } from './components/ErrorToast';\nimport { InfoToast } from './components/InfoToast';\nimport { SuccessToast } from './components/SuccessToast';\nconst defaultToastConfig = {\n    success: (props) => <SuccessToast {...props}/>,\n    error: (props) => <ErrorToast {...props}/>,\n    info: (props) => <InfoToast {...props}/>\n};\nfunction renderComponent({ data, options, config, isVisible, show, hide }) {\n    const { text1, text2 } = data;\n    const { type, onPress, position, props } = options;\n    const toastConfig = {\n        ...defaultToastConfig,\n        ...config\n    };\n    const ToastComponent = toastConfig[type];\n    if (!ToastComponent) {\n        throw new Error(`Toast type: '${type}' does not exist. You can add it via the 'config' prop on the Toast instance. Learn more: https://github.com/calintamas/react-native-toast-message/blob/master/README.md`);\n    }\n    return ToastComponent({\n        position,\n        type,\n        isVisible,\n        text1,\n        text2,\n        show,\n        hide,\n        onPress,\n        props\n    });\n}\nexport function ToastUI(props) {\n    const { isVisible, options, hide } = props;\n    const { position, topOffset, bottomOffset, keyboardOffset } = options;\n    return (<AnimatedContainer isVisible={isVisible} position={position} topOffset={topOffset} bottomOffset={bottomOffset} keyboardOffset={keyboardOffset} onHide={hide}>\n      {renderComponent(props)}\n    </AnimatedContainer>);\n}\n"]},"metadata":{},"sourceType":"module"}