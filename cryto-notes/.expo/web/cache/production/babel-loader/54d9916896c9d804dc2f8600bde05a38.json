{"ast":null,"code":"import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import TextInput from\"react-native-web/dist/exports/TextInput\";import{StatusBar}from'expo-status-bar';import React,{useEffect,useState,useCallback}from'react';import{signin}from\"../queries/auth.js\";import{SafeAreaProvider,SafeAreaView}from'react-native-safe-area-context';import{connect}from'react-redux';import{mapStateToProps,mapDispatchToProps}from\"../state/mappers.js\";import Divider from'react-native-divider';import{successToast,errorToast}from\"../components/Toaster.js\";import LoadingButton from\"../components/buttons/LoadingButton.js\";import ValidatingTextInput from\"../components/text-inputs/ValidatingTextInput.js\";import PasswordTextInput from\"../components/text-inputs/PasswordTextInput.js\";import Button from\"../components/buttons/Button.js\";import colors from\"../config/colors.js\";var LoginScreen=function LoginScreen(_ref){var setUser=_ref.setUser,navigation=_ref.navigation;var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),username=_useState2[0],onChangeUsername=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),password=_useState4[0],onChangePassword=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),failed=_useState6[0],setFailed=_useState6[1];var handleSignin=function handleSignin(){return _regeneratorRuntime.async(function handleSignin$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return _regeneratorRuntime.awrap(signin({username:username,password:password}).then(function(result){successToast({text1:\"Logined is as \"+username});setUser({username:username,cookie:result.cookie});}).catch(function(err){console.log(err);if(err.response)errorToast({text1:err.response.data});else if(err.message)errorToast({text1:err.message});setFailed(true);}));case 2:case\"end\":return _context.stop();}}},null,null,null,Promise);};return React.createElement(View,{style:styles.container},React.createElement(StatusBar,{style:\"auto\"}),React.createElement(SafeAreaView,null,React.createElement(Text,{style:styles.titleFont},\"Allin Chaskisqan Kay\"),React.createElement(Text,{style:styles.translationFont},\"( Welcome )\"),React.createElement(ValidatingTextInput,{styleTextInput:styles.inputFontSize,styleContainer:styles.input,onChangeText:onChangeUsername,validate:false,placeholder:\"username\",autoCapitalize:\"none\",value:username}),React.createElement(PasswordTextInput,{styleTextInput:styles.inputFontSize,styleContainer:styles.input,onChangeText:onChangePassword,value:password}),React.createElement(LoadingButton,{title:\"Login\",styleButton:styles.horizontalMargin,onPress:handleSignin}),failed?React.createElement(Button,{onlyText:true,styleText:styles.recoveryFont,title:\"forgot Password?\",onPress:function onPress(){navigation.navigate('Recovery');}}):React.createElement(React.Fragment,null),React.createElement(Divider,{style:styles.horizontalMarginDivider,orientation:'center'},\"or\"),React.createElement(Button,{onlyText:true,styleText:styles.signUpBtn,title:\"Create Account\",onPress:function onPress(){navigation.navigate('Signup');}}),React.createElement(View,{style:{alignText:'center',justifyContent:'center',alignItems:'center',backgroundColor:'pink'}})));};export default connect(mapStateToProps,mapDispatchToProps)(LoginScreen);var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#fff',alignItems:'center'},row:{flexDirection:'row',justifyContent:'space-around',marginBottom:10,marginTop:15},input:{alignSelf:'center',height:40,width:200,margin:12,borderRadius:10,borderWidth:1,padding:10,shadowOpacity:100,shadowRadius:2,shadowOffset:{width:200,height:-9}},inputFontSize:{fontSize:16},signUpBtn:{fontSize:17},recoveryFont:{fontSize:16},titleFont:{fontSize:25,fontWeight:'bold',color:colors.btnGreen,marginLeft:25,marginTop:30},translationFont:{fontSize:15,color:'#808080',alignSelf:'flex-end',marginRight:30,marginBottom:25},horizontalMargin:{marginBottom:30,marginTop:10},horizontalMarginDivider:{marginBottom:20,marginTop:10}});","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/screens/LoginScreen.js"],"names":["StatusBar","React","useEffect","useState","useCallback","signin","SafeAreaProvider","SafeAreaView","connect","mapStateToProps","mapDispatchToProps","Divider","successToast","errorToast","LoadingButton","ValidatingTextInput","PasswordTextInput","Button","colors","LoginScreen","setUser","navigation","username","onChangeUsername","password","onChangePassword","failed","setFailed","handleSignin","then","result","text1","cookie","catch","err","console","log","response","data","message","styles","container","titleFont","translationFont","inputFontSize","input","horizontalMargin","recoveryFont","navigate","horizontalMarginDivider","signUpBtn","alignText","justifyContent","alignItems","backgroundColor","StyleSheet","create","flex","row","flexDirection","marginBottom","marginTop","alignSelf","height","width","margin","borderRadius","borderWidth","padding","shadowOpacity","shadowRadius","shadowOffset","fontSize","fontWeight","color","btnGreen","marginLeft","marginRight"],"mappings":"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","sourcesContent":["import { StyleSheet, Text,  View, TouchableOpacity, TextInput } from 'react-native';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState, useCallback } from 'react';\nimport { signin } from '../queries/auth.js'\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport Divider from 'react-native-divider';\nimport { successToast, errorToast } from '../components/Toaster.js';\nimport LoadingButton from '../components/buttons/LoadingButton.js'\nimport ValidatingTextInput from '../components/text-inputs/ValidatingTextInput.js'\nimport PasswordTextInput from '../components/text-inputs/PasswordTextInput.js';\nimport Button from '../components/buttons/Button.js';\nimport colors from '../config/colors.js';\n\nconst LoginScreen = ({ setUser, navigation }) => {\n    const [username, onChangeUsername] = useState(\"\");\n    const [password, onChangePassword] = useState(\"\");\n    const [failed, setFailed] = useState(false);\n\n    const handleSignin = async () => {  \n        await signin({ \n            username: username,\n            password: password,\n        }).then(result => {\n            successToast({ text1: `Logined is as ${username}` });\n            setUser({\n                username: username, \n                cookie: result.cookie,\n            });\n        }).catch( err => {\n            console.log(err);\n            if(err.response)\n                errorToast({ text1: err.response.data });\n            else if(err.message)\n                errorToast({ text1: err.message });\n            setFailed(true);\n        } )\n    }\n\n    return <View style={styles.container}>\n        <StatusBar style=\"auto\"/>\n        <SafeAreaView>\n            <Text style={styles.titleFont}>Allin Chaskisqan Kay</Text>\n            <Text style={styles.translationFont}>( Welcome )</Text>\n            <ValidatingTextInput\n                styleTextInput={styles.inputFontSize}\n                styleContainer={styles.input}\n                onChangeText={onChangeUsername}\n                validate={false}\n                placeholder=\"username\"\n                autoCapitalize=\"none\"\n                value={username} />\n            <PasswordTextInput \n                styleTextInput={styles.inputFontSize}\n                styleContainer={styles.input}\n                onChangeText={onChangePassword}\n                value={password} />\n            <LoadingButton title=\"Login\"\n                styleButton={styles.horizontalMargin}\n                onPress={handleSignin} />\n            { failed?\n                <Button onlyText={true}\n                    styleText={styles.recoveryFont}\n                    title=\"forgot Password?\"\n                    onPress={()=>{ navigation.navigate('Recovery') }} />\n                    : <></> }\n            <Divider style={styles.horizontalMarginDivider}\n                orientation={'center'}>or</Divider>\n            <Button onlyText={true}\n                styleText={styles.signUpBtn}\n                title=\"Create Account\"\n                onPress={()=>{ navigation.navigate('Signup') }}\n            />\n            <View style={{\n                alignText:'center',\n                justifyContent:'center',\n                alignItems: 'center', \n                backgroundColor: 'pink',\n            }}>\n            </View>\n        </SafeAreaView>\n    </View>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginScreen);\n\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n    },\n    row:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginBottom: 10,\n        marginTop: 15,\n    },\n    input: {\n        alignSelf: 'center',\n        height: 40,\n        width:  200,\n        margin: 12,\n        borderRadius: 10,\n        borderWidth: 1,\n        padding: 10,\n        shadowOpacity: 100,\n        shadowRadius: 2,\n        shadowOffset: {\n            width: 200,\n            height: -9,\n        },\n    },\n    inputFontSize: {\n        fontSize: 16,\n    },\n    signUpBtn:{\n        fontSize: 17,\n    },\n    recoveryFont:{\n        fontSize: 16,\n    },\n    titleFont: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        color: colors.btnGreen,\n        marginLeft: 25,\n        marginTop: 30,\n    },\n    translationFont: {\n        fontSize: 15,\n        color: '#808080', // gray\n        alignSelf: 'flex-end',\n        marginRight: 30,\n        marginBottom: 25,\n    },\n    horizontalMargin:{\n        marginBottom: 30,\n        marginTop: 10,\n    },\n    horizontalMarginDivider:{\n        marginBottom: 20,\n        marginTop: 10,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}