{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import PlatformPressable from\"./PlatformPressable\";var DEFAULT_ACTIVE_COLOR='rgba(255, 255, 255, 1)';var DEFAULT_INACTIVE_COLOR='rgba(255, 255, 255, 0.7)';var TabBarItem=function(_React$Component){_inherits(TabBarItem,_React$Component);var _super=_createSuper(TabBarItem);function TabBarItem(){var _this;_classCallCheck(this,TabBarItem);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"getActiveOpacity\",function(position,routes,tabIndex){if(routes.length>1){var inputRange=routes.map(function(_,i){return i;});return position.interpolate({inputRange:inputRange,outputRange:inputRange.map(function(i){return i===tabIndex?1:0;})});}else{return 1;}});_defineProperty(_assertThisInitialized(_this),\"getInactiveOpacity\",function(position,routes,tabIndex){if(routes.length>1){var inputRange=routes.map(function(_,i){return i;});return position.interpolate({inputRange:inputRange,outputRange:inputRange.map(function(i){return i===tabIndex?0:1;})});}else{return 0;}});return _this;}_createClass(TabBarItem,[{key:\"render\",value:function render(){var _this$props=this.props,route=_this$props.route,position=_this$props.position,navigationState=_this$props.navigationState,renderLabelCustom=_this$props.renderLabel,renderIcon=_this$props.renderIcon,renderBadge=_this$props.renderBadge,getLabelText=_this$props.getLabelText,getTestID=_this$props.getTestID,getAccessibilityLabel=_this$props.getAccessibilityLabel,getAccessible=_this$props.getAccessible,activeColorCustom=_this$props.activeColor,inactiveColorCustom=_this$props.inactiveColor,pressColor=_this$props.pressColor,pressOpacity=_this$props.pressOpacity,labelStyle=_this$props.labelStyle,style=_this$props.style,onLayout=_this$props.onLayout,onPress=_this$props.onPress,onLongPress=_this$props.onLongPress;var tabIndex=navigationState.routes.indexOf(route);var isFocused=navigationState.index===tabIndex;var labelColorFromStyle=StyleSheet.flatten(labelStyle||{}).color;var activeColor=activeColorCustom!==undefined?activeColorCustom:typeof labelColorFromStyle==='string'?labelColorFromStyle:DEFAULT_ACTIVE_COLOR;var inactiveColor=inactiveColorCustom!==undefined?inactiveColorCustom:typeof labelColorFromStyle==='string'?labelColorFromStyle:DEFAULT_INACTIVE_COLOR;var activeOpacity=this.getActiveOpacity(position,navigationState.routes,tabIndex);var inactiveOpacity=this.getInactiveOpacity(position,navigationState.routes,tabIndex);var icon=null;var label=null;if(renderIcon){var activeIcon=renderIcon({route:route,focused:true,color:activeColor});var inactiveIcon=renderIcon({route:route,focused:false,color:inactiveColor});if(inactiveIcon!=null&&activeIcon!=null){icon=React.createElement(View,{style:styles.icon},React.createElement(Animated.View,{style:{opacity:inactiveOpacity}},inactiveIcon),React.createElement(Animated.View,{style:[StyleSheet.absoluteFill,{opacity:activeOpacity}]},activeIcon));}}var renderLabel=renderLabelCustom!==undefined?renderLabelCustom:function(_ref){var route=_ref.route,color=_ref.color;var labelText=getLabelText({route:route});if(typeof labelText==='string'){return React.createElement(Animated.Text,{style:[styles.label,icon?{marginTop:0}:null,labelStyle,{color:color}]},labelText);}return labelText;};if(renderLabel){var activeLabel=renderLabel({route:route,focused:true,color:activeColor});var inactiveLabel=renderLabel({route:route,focused:false,color:inactiveColor});label=React.createElement(View,null,React.createElement(Animated.View,{style:{opacity:inactiveOpacity}},inactiveLabel),React.createElement(Animated.View,{style:[StyleSheet.absoluteFill,{opacity:activeOpacity}]},activeLabel));}var tabStyle=StyleSheet.flatten(style);var isWidthSet=(tabStyle===null||tabStyle===void 0?void 0:tabStyle.width)!==undefined;var tabContainerStyle=isWidthSet?null:{flex:1};var scene={route:route};var accessibilityLabel=getAccessibilityLabel(scene);accessibilityLabel=typeof accessibilityLabel!=='undefined'?accessibilityLabel:getLabelText(scene);var badge=renderBadge?renderBadge(scene):null;return React.createElement(PlatformPressable,{android_ripple:{borderless:true},testID:getTestID(scene),accessible:getAccessible(scene),accessibilityLabel:accessibilityLabel,accessibilityRole:\"tab\",accessibilityState:{selected:isFocused},accessibilityStates:isFocused?['selected']:[],pressColor:pressColor,pressOpacity:pressOpacity,delayPressIn:0,onLayout:onLayout,onPress:onPress,onLongPress:onLongPress,style:[styles.pressable,tabContainerStyle]},React.createElement(View,{pointerEvents:\"none\",style:[styles.item,tabStyle]},icon,label,badge!=null?React.createElement(View,{style:styles.badge},badge):null));}}]);return TabBarItem;}(React.Component);export{TabBarItem as default};var styles=StyleSheet.create({label:{margin:4,backgroundColor:'transparent',textTransform:'uppercase'},icon:{margin:2},item:{flex:1,alignItems:'center',justifyContent:'center',padding:10,minHeight:48},badge:{position:'absolute',top:0,right:0},pressable:{backgroundColor:'transparent'}});","map":{"version":3,"sources":["TabBarItem.tsx"],"names":["DEFAULT_ACTIVE_COLOR","DEFAULT_INACTIVE_COLOR","React","routes","inputRange","outputRange","i","render","renderLabel","activeColor","inactiveColor","onLongPress","tabIndex","navigationState","isFocused","labelColorFromStyle","StyleSheet","labelStyle","activeColorCustom","inactiveColorCustom","activeOpacity","inactiveOpacity","icon","label","activeIcon","renderIcon","route","focused","color","inactiveIcon","styles","opacity","renderLabelCustom","labelText","getLabelText","marginTop","activeLabel","inactiveLabel","tabStyle","isWidthSet","tabContainerStyle","flex","scene","accessibilityLabel","getAccessibilityLabel","badge","renderBadge","borderless","getTestID","getAccessible","selected","margin","backgroundColor","textTransform","item","alignItems","justifyContent","padding","minHeight","position","top","right","pressable"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  StyleSheet,\n  View,\n  StyleProp,\n  LayoutChangeEvent,\n  TextStyle,\n  ViewStyle,\n} from 'react-native';\nimport PlatformPressable from './PlatformPressable';\nimport type { Scene, Route, NavigationState } from './types';\n\nexport type Props<T extends Route> = {\n  position: Animated.AnimatedInterpolation;\n  route: T;\n  navigationState: NavigationState<T>;\n  activeColor?: string;\n  inactiveColor?: string;\n  pressColor?: string;\n  pressOpacity?: number;\n  getLabelText: (scene: Scene<T>) => string | undefined;\n  getAccessible: (scene: Scene<T>) => boolean | undefined;\n  getAccessibilityLabel: (scene: Scene<T>) => string | undefined;\n  getTestID: (scene: Scene<T>) => string | undefined;\n  renderLabel?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderIcon?: (scene: {\n    route: T;\n    focused: boolean;\n    color: string;\n  }) => React.ReactNode;\n  renderBadge?: (scene: Scene<T>) => React.ReactNode;\n  onLayout?: (event: LayoutChangeEvent) => void;\n  onPress: () => void;\n  onLongPress: () => void;\n  labelStyle?: StyleProp<TextStyle>;\n  style: StyleProp<ViewStyle>;\n};\n\nconst DEFAULT_ACTIVE_COLOR = 'rgba(255, 255, 255, 1)';\nconst DEFAULT_INACTIVE_COLOR = 'rgba(255, 255, 255, 0.7)';\n\nexport default class TabBarItem<T extends Route> extends React.Component<\n  Props<T>\n> {\n  private getActiveOpacity = (\n    position: Animated.AnimatedInterpolation,\n    routes: Route[],\n    tabIndex: number\n  ) => {\n    if (routes.length > 1) {\n      const inputRange = routes.map((_, i) => i);\n\n      return position.interpolate({\n        inputRange,\n        outputRange: inputRange.map((i) => (i === tabIndex ? 1 : 0)),\n      });\n    } else {\n      return 1;\n    }\n  };\n\n  private getInactiveOpacity = (\n    position: Animated.AnimatedInterpolation,\n    routes: Route[],\n    tabIndex: number\n  ) => {\n    if (routes.length > 1) {\n      const inputRange = routes.map((_: Route, i: number) => i);\n\n      return position.interpolate({\n        inputRange,\n        outputRange: inputRange.map((i: number) => (i === tabIndex ? 0 : 1)),\n      });\n    } else {\n      return 0;\n    }\n  };\n\n  render() {\n    const {\n      route,\n      position,\n      navigationState,\n      renderLabel: renderLabelCustom,\n      renderIcon,\n      renderBadge,\n      getLabelText,\n      getTestID,\n      getAccessibilityLabel,\n      getAccessible,\n      activeColor: activeColorCustom,\n      inactiveColor: inactiveColorCustom,\n      pressColor,\n      pressOpacity,\n      labelStyle,\n      style,\n      onLayout,\n      onPress,\n      onLongPress,\n    } = this.props;\n\n    const tabIndex = navigationState.routes.indexOf(route);\n    const isFocused = navigationState.index === tabIndex;\n\n    const labelColorFromStyle = StyleSheet.flatten(labelStyle || {}).color;\n\n    const activeColor =\n      activeColorCustom !== undefined\n        ? activeColorCustom\n        : typeof labelColorFromStyle === 'string'\n        ? labelColorFromStyle\n        : DEFAULT_ACTIVE_COLOR;\n    const inactiveColor =\n      inactiveColorCustom !== undefined\n        ? inactiveColorCustom\n        : typeof labelColorFromStyle === 'string'\n        ? labelColorFromStyle\n        : DEFAULT_INACTIVE_COLOR;\n\n    const activeOpacity = this.getActiveOpacity(\n      position,\n      navigationState.routes,\n      tabIndex\n    );\n    const inactiveOpacity = this.getInactiveOpacity(\n      position,\n      navigationState.routes,\n      tabIndex\n    );\n\n    let icon: React.ReactNode | null = null;\n    let label: React.ReactNode | null = null;\n\n    if (renderIcon) {\n      const activeIcon = renderIcon({\n        route,\n        focused: true,\n        color: activeColor,\n      });\n      const inactiveIcon = renderIcon({\n        route,\n        focused: false,\n        color: inactiveColor,\n      });\n\n      if (inactiveIcon != null && activeIcon != null) {\n        icon = (\n          <View style={styles.icon}>\n            <Animated.View style={{ opacity: inactiveOpacity }}>\n              {inactiveIcon}\n            </Animated.View>\n            <Animated.View\n              style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n            >\n              {activeIcon}\n            </Animated.View>\n          </View>\n        );\n      }\n    }\n\n    const renderLabel =\n      renderLabelCustom !== undefined\n        ? renderLabelCustom\n        : ({ route, color }: { route: T; color: string }) => {\n            const labelText = getLabelText({ route });\n\n            if (typeof labelText === 'string') {\n              return (\n                <Animated.Text\n                  style={[\n                    styles.label,\n                    icon ? { marginTop: 0 } : null,\n                    labelStyle,\n                    { color },\n                  ]}\n                >\n                  {labelText}\n                </Animated.Text>\n              );\n            }\n\n            return labelText;\n          };\n\n    if (renderLabel) {\n      const activeLabel = renderLabel({\n        route,\n        focused: true,\n        color: activeColor,\n      });\n      const inactiveLabel = renderLabel({\n        route,\n        focused: false,\n        color: inactiveColor,\n      });\n\n      label = (\n        <View>\n          <Animated.View style={{ opacity: inactiveOpacity }}>\n            {inactiveLabel}\n          </Animated.View>\n          <Animated.View\n            style={[StyleSheet.absoluteFill, { opacity: activeOpacity }]}\n          >\n            {activeLabel}\n          </Animated.View>\n        </View>\n      );\n    }\n\n    const tabStyle = StyleSheet.flatten(style);\n    const isWidthSet = tabStyle?.width !== undefined;\n    const tabContainerStyle: ViewStyle | null = isWidthSet ? null : { flex: 1 };\n\n    const scene = { route };\n\n    let accessibilityLabel = getAccessibilityLabel(scene);\n\n    accessibilityLabel =\n      typeof accessibilityLabel !== 'undefined'\n        ? accessibilityLabel\n        : getLabelText(scene);\n\n    const badge = renderBadge ? renderBadge(scene) : null;\n\n    return (\n      <PlatformPressable\n        android_ripple={{ borderless: true }}\n        testID={getTestID(scene)}\n        accessible={getAccessible(scene)}\n        accessibilityLabel={accessibilityLabel}\n        accessibilityRole=\"tab\"\n        accessibilityState={{ selected: isFocused }}\n        // @ts-ignore: this is to support older React Native versions\n        accessibilityStates={isFocused ? ['selected'] : []}\n        pressColor={pressColor}\n        pressOpacity={pressOpacity}\n        delayPressIn={0}\n        onLayout={onLayout}\n        onPress={onPress}\n        onLongPress={onLongPress}\n        style={[styles.pressable, tabContainerStyle]}\n      >\n        <View pointerEvents=\"none\" style={[styles.item, tabStyle]}>\n          {icon}\n          {label}\n          {badge != null ? <View style={styles.badge}>{badge}</View> : null}\n        </View>\n      </PlatformPressable>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  label: {\n    margin: 4,\n    backgroundColor: 'transparent',\n    textTransform: 'uppercase',\n  },\n  icon: {\n    margin: 2,\n  },\n  item: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 10,\n    minHeight: 48,\n  },\n  badge: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  pressable: {\n    // The label is not pressable on Windows\n    // Adding backgroundColor: 'transparent' seems to fix it\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}