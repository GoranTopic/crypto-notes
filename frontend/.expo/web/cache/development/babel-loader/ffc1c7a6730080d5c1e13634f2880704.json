{"ast":null,"code":"export var setSocket = function setSocket(store) {\n  return {\n    type: 'SET_STORE',\n    payload: store\n  };\n};\nexport var setUser = function setUser(user) {\n  return {\n    type: 'SET_USER',\n    payload: user\n  };\n};\nexport var setCookie = function setCookie(cookie) {\n  return {\n    type: 'SET_COOKIE',\n    payload: cookie\n  };\n};\nexport var setState = function setState(state) {\n  return {\n    type: 'SET_STATE',\n    payload: state\n  };\n};\nexport var setAppError = function setAppError(isError) {\n  return {\n    type: 'SET_IS_ERROR',\n    payload: isError\n  };\n};\nexport var setAppIsLoading = function setAppIsLoading(isLoading) {\n  return {\n    type: 'SET_IS_LOADING',\n    payload: isLoading\n  };\n};","map":{"version":3,"sources":["/home/telix/crypto-notes/crypto_notes/src/state/actions.js"],"names":["setSocket","store","type","payload","setUser","user","setCookie","cookie","setState","state","setAppError","isError","setAppIsLoading","isLoading"],"mappings":"AAAA,OAAO,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SAAK;AACjCC,IAAAA,IAAI,EAAE,WAD2B;AAEjCC,IAAAA,OAAO,EAAEF;AAFwB,GAAL;AAAA,CAAvB;AAKP,OAAO,IAAMG,OAAO,GAAG,SAAVA,OAAU,CAAAC,IAAI;AAAA,SAAK;AAC9BH,IAAAA,IAAI,EAAE,UADwB;AAE9BC,IAAAA,OAAO,EAAEE;AAFqB,GAAL;AAAA,CAApB;AAKP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,MAAM;AAAA,SAAK;AAClCL,IAAAA,IAAI,EAAE,YAD4B;AAElCC,IAAAA,OAAO,EAAEI;AAFyB,GAAL;AAAA,CAAxB;AAKP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAAC,KAAK;AAAA,SAAK;AAChCP,IAAAA,IAAI,EAAE,WAD0B;AAEhCC,IAAAA,OAAO,EAAEM;AAFuB,GAAL;AAAA,CAAtB;AAKP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,OAAO;AAAA,SAAK;AACrCT,IAAAA,IAAI,EAAE,cAD+B;AAErCC,IAAAA,OAAO,EAAEQ;AAF4B,GAAL;AAAA,CAA3B;AAKP,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,SAAS;AAAA,SAAK;AAC3CX,IAAAA,IAAI,EAAE,gBADqC;AAE3CC,IAAAA,OAAO,EAAEU;AAFkC,GAAL;AAAA,CAAjC","sourcesContent":["export const setSocket = store => ({\n\t\ttype: 'SET_STORE',\n\t\tpayload: store,\n});\n\nexport const setUser = user => ({\n\t\ttype: 'SET_USER',\n\t\tpayload: user,\n})\n\nexport const setCookie = cookie => ({\n\t\ttype: 'SET_COOKIE',\n\t\tpayload: cookie,\n});\n\nexport const setState = state => ({\n\t\ttype: 'SET_STATE',\n\t\tpayload: state,\n});\n\nexport const setAppError = isError => ({\n\t\ttype: 'SET_IS_ERROR',\n\t\tpayload: isError,\n});\n\nexport const setAppIsLoading = isLoading => ({\n\t\ttype: 'SET_IS_LOADING',\n\t\tpayload: isLoading,\n});\n"]},"metadata":{},"sourceType":"module"}