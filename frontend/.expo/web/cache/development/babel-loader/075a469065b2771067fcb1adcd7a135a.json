{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { faEye, faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport TextInput from \"./TextInput.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Eye = _jsx(FontAwesomeIcon, {\n  className: \"icon\",\n  icon: faEye\n});\n\nvar EyeSlash = _jsx(FontAwesomeIcon, {\n  className: \"icon\",\n  icon: faEyeSlash\n});\n\nexport default function PasswordTextInput(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showPass = _useState2[0],\n      setShowPass = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stateShowError = _useState4[0],\n      setStateShowError = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var toogleShowpass = function toogleShowpass() {\n    return setShowPass(!showPass);\n  };\n\n  var _props$styleTextInput = props.styleTextInput,\n      styleTextInput = _props$styleTextInput === void 0 ? {} : _props$styleTextInput,\n      _props$styleContainer = props.styleContainer,\n      styleContainer = _props$styleContainer === void 0 ? {} : _props$styleContainer,\n      _props$styleErrorText = props.styleErrorText,\n      styleErrorText = _props$styleErrorText === void 0 ? {} : _props$styleErrorText,\n      _props$styleErrorCont = props.styleErrorContainer,\n      styleErrorContainer = _props$styleErrorCont === void 0 ? {} : _props$styleErrorCont,\n      _props$styleIcon = props.styleIcon,\n      styleIcon = _props$styleIcon === void 0 ? {} : _props$styleIcon,\n      _props$showError = props.showError,\n      showError = _props$showError === void 0 ? false : _props$showError,\n      _props$value = props.value,\n      value = _props$value === void 0 ? '' : _props$value,\n      _props$errorMsg = props.errorMsg,\n      errorMsg = _props$errorMsg === void 0 ? 'Invalid' : _props$errorMsg,\n      _props$validate = props.validate,\n      validate = _props$validate === void 0 ? function (text) {\n    text ? true : false;\n  } : _props$validate;\n  var containerStyles = [styles.container, styleContainer];\n  var errorContainerStyles = [styles.errorContainer, styleErrorContainer];\n  var errorTextStyles = [styles.errorText, styleErrorText];\n  var textInputStyles = [styles.textInput, styleTextInput];\n  var iconStyles = [styles.icon, styleIcon];\n  var validateValue = useEffect(function () {\n    if (showError) setStateShowError(true);else if (validate(value) === false) {\n      setStateShowError(true);\n      setError(errorMsg);\n    } else setStateShowError(false);\n  }, [value, errorMsg]);\n  return _jsxs(View, {\n    style: errorContainerStyles,\n    children: [_jsxs(View, {\n      style: containerStyles,\n      children: [_jsx(TextInput, _objectSpread(_objectSpread({}, props), {}, {\n        style: textInputStyles,\n        autoCorrect: false,\n        secureTextEntry: !showPass,\n        placeholder: \"password\",\n        value: value\n      })), _jsx(TouchableOpacity, {\n        onPress: toogleShowpass,\n        style: iconStyles,\n        children: _jsx(FontAwesomeIcon, {\n          className: \"icon\",\n          size: 18,\n          icon: showPass ? faEye : faEyeSlash\n        })\n      })]\n    }), stateShowError ? _jsxs(Text, {\n      style: errorTextStyles,\n      children: [\"* \", errorMsg]\n    }) : _jsx(_Fragment, {})]\n  });\n}\nvar styles = StyleSheet.create({\n  errorContainer: {\n    alignSelf: 'center',\n    width: 200\n  },\n  errorText: {\n    color: 'red',\n    fontStyle: 'italic',\n    fontSize: 12,\n    fontWeight: '900',\n    textAlign: 'left',\n    marginLeft: '6%'\n  },\n  container: {\n    flexDirection: 'row',\n    alignSelf: 'center',\n    justifyContent: 'space-between'\n  },\n  textInput: {\n    alignSelf: 'stretch',\n    width: '85%'\n  },\n  icon: {\n    paddingRight: 2,\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["/home/telix/crypto-notes/crypto_notes/src/components/text-inputs/PasswordTextInput.js"],"names":["React","useEffect","useState","useCallback","faEye","faEyeSlash","FontAwesomeIcon","TextInput","Eye","EyeSlash","PasswordTextInput","props","showPass","setShowPass","stateShowError","setStateShowError","error","setError","toogleShowpass","styleTextInput","styleContainer","styleErrorText","styleErrorContainer","styleIcon","showError","value","errorMsg","validate","text","containerStyles","styles","container","errorContainerStyles","errorContainer","errorTextStyles","errorText","textInputStyles","textInput","iconStyles","icon","validateValue","StyleSheet","create","alignSelf","width","color","fontStyle","fontSize","fontWeight","textAlign","marginLeft","flexDirection","justifyContent","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\nimport { faEye,faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport TextInput from './TextInput.js';\n\nconst Eye = <FontAwesomeIcon className=\"icon\" icon={faEye} />;\nconst EyeSlash = <FontAwesomeIcon className=\"icon\" icon ={faEyeSlash}/>;\n\nexport default function PasswordTextInput(props){\n    const [showPass, setShowPass] = useState(false);\n    const [stateShowError, setStateShowError] = useState(false);\n    const [error, setError] = useState('');\n    const toogleShowpass = () => setShowPass(!showPass);\n\n    let {\n        styleTextInput = {},\n        styleContainer = {},\n        styleErrorText = {},\n        styleErrorContainer = {},\n        styleIcon = {},\n        showError=false,\n        value= '',\n        errorMsg = 'Invalid',\n        validate = text => { text? true : false },\n    } = props; \n\n    const containerStyles = [ styles.container,  styleContainer ];\n    const errorContainerStyles = [ styles.errorContainer, styleErrorContainer ];\n    const errorTextStyles = [ styles.errorText, styleErrorText ];\n    const textInputStyles = [ styles.textInput,  styleTextInput ];\n    const iconStyles = [ styles.icon,  styleIcon ];\n\n    const validateValue = useEffect( () => {\n        if(showError) setStateShowError(true);\n        else if(validate(value) === false){\n            setStateShowError(true);\n            setError(errorMsg);\n        }else setStateShowError(false);\n    }, [value, errorMsg]);\n\n    return(\n        <View style={errorContainerStyles}>\n            <View style={containerStyles}>\n                <TextInput\n                    {...props}\n                    style={textInputStyles}\n                    autoCorrect={false}\n                    secureTextEntry={!showPass}\n                    placeholder=\"password\"\n                    value={value} />\n                <TouchableOpacity onPress={toogleShowpass}\n                    style={iconStyles} >\n                    <FontAwesomeIcon \n                        className=\"icon\"\n                        size={18}\n                        icon ={ showPass? faEye : faEyeSlash }/>\n                </TouchableOpacity> \n            </View>\n            { stateShowError?\n                <Text style={errorTextStyles}>\n                    * {errorMsg}\n                </Text> :\n                    <></>\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    errorContainer: {\n        alignSelf:'center',\n        width: 200,\n    },\n    errorText: {\n        color: 'red',\n        fontStyle: 'italic',\n        fontSize: 12,\n        fontWeight: '900',\n        textAlign: 'left',\n        marginLeft: '6%',\n    },\n    container: {\n        flexDirection:'row',\n        alignSelf:'center',\n        justifyContent: 'space-between',\n    },\n    textInput: {\n        alignSelf: 'stretch',\n        width: '85%',\n    },\n    icon: {\n        paddingRight: 2,\n        alignSelf:'center',\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}