{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport colors from \"../../config/colors.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function Button(props) {\n  var onPress = props.onPress,\n      _props$title = props.title,\n      title = _props$title === void 0 ? 'button' : _props$title,\n      _props$style = props.style,\n      style = _props$style === void 0 ? {} : _props$style,\n      _props$styleButton = props.styleButton,\n      styleButton = _props$styleButton === void 0 ? {} : _props$styleButton,\n      _props$styleText = props.styleText,\n      styleText = _props$styleText === void 0 ? {} : _props$styleText,\n      onlyText = props.onlyText;\n  var btnStyles = [styles.button, onlyText ? styles.tranparentBtn : {}, styleButton, style];\n  var textStyles = [styles.text, onlyText ? styles.onlyText : {}, styleText];\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, props), {}, {\n    style: btnStyles,\n    onPress: onPress,\n    children: _jsx(Text, _objectSpread(_objectSpread({}, props), {}, {\n      style: textStyles,\n      children: title\n    }))\n  }));\n}\nvar styles = StyleSheet.create({\n  button: {\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 10,\n    paddingHorizontal: 30,\n    borderRadius: 8,\n    elevation: 5,\n    borderWidth: 1,\n    borderColor: colors.btnBorder,\n    backgroundColor: colors.btnGreen\n  },\n  text: {\n    fontSize: 16,\n    lineHeight: 21,\n    fontWeight: 'normal',\n    letterSpacing: 0.25,\n    color: 'white'\n  },\n  onlyText: {\n    color: colors.btnGreen,\n    fontSize: 14\n  },\n  tranparentBtn: {\n    elevation: 0,\n    borderWidth: 0,\n    borderColor: 'transparent',\n    backgroundColor: 'transparent',\n    justifyContent: \"space-between\"\n  }\n});","map":{"version":3,"sources":["/home/telix/crypto-notes/crypto_notes/src/components/buttons/Button.js"],"names":["React","colors","Button","props","onPress","title","style","styleButton","styleText","onlyText","btnStyles","styles","button","tranparentBtn","textStyles","text","StyleSheet","create","alignItems","justifyContent","paddingVertical","paddingHorizontal","borderRadius","elevation","borderWidth","borderColor","btnBorder","backgroundColor","btnGreen","fontSize","lineHeight","fontWeight","letterSpacing","color"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;AAEA,OAAOC,MAAP;;AAEA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAClC,MACIC,OADJ,GAOID,KAPJ,CACIC,OADJ;AAAA,qBAOID,KAPJ,CAEIE,KAFJ;AAAA,MAEIA,KAFJ,6BAEY,QAFZ;AAAA,qBAOIF,KAPJ,CAGIG,KAHJ;AAAA,MAGIA,KAHJ,6BAGW,EAHX;AAAA,2BAOIH,KAPJ,CAIII,WAJJ;AAAA,MAIIA,WAJJ,mCAIkB,EAJlB;AAAA,yBAOIJ,KAPJ,CAKIK,SALJ;AAAA,MAKIA,SALJ,iCAKgB,EALhB;AAAA,MAMIC,QANJ,GAOIN,KAPJ,CAMIM,QANJ;AASA,MAAIC,SAAS,GAAG,CACZC,MAAM,CAACC,MADK,EAEZH,QAAQ,GAAEE,MAAM,CAACE,aAAT,GAAyB,EAFrB,EAGZN,WAHY,EAIZD,KAJY,CAAhB;AAOA,MAAIQ,UAAU,GAAG,CACbH,MAAM,CAACI,IADM,EAEbN,QAAQ,GAAEE,MAAM,CAACF,QAAT,GAAoB,EAFf,EAGbD,SAHa,CAAjB;AAMA,SACI,KAAC,gBAAD,kCAAsBL,KAAtB;AACI,IAAA,KAAK,EAAEO,SADX;AAEI,IAAA,OAAO,EAAEN,OAFb;AAAA,cAGI,KAAC,IAAD,kCAAUD,KAAV;AAAiB,MAAA,KAAK,EAAEW,UAAxB;AAAA,gBAAsCT;AAAtC;AAHJ,KADJ;AAOH;AAED,IAAMM,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,MAAM,EAAE;AACJM,IAAAA,UAAU,EAAE,QADR;AAEJC,IAAAA,cAAc,EAAE,QAFZ;AAGJC,IAAAA,eAAe,EAAE,EAHb;AAIJC,IAAAA,iBAAiB,EAAE,EAJf;AAKJC,IAAAA,YAAY,EAAE,CALV;AAMJC,IAAAA,SAAS,EAAE,CANP;AAOJC,IAAAA,WAAW,EAAE,CAPT;AAQJC,IAAAA,WAAW,EAAExB,MAAM,CAACyB,SARhB;AASJC,IAAAA,eAAe,EAAE1B,MAAM,CAAC2B;AATpB,GADqB;AAY7Bb,EAAAA,IAAI,EAAE;AACFc,IAAAA,QAAQ,EAAE,EADR;AAEFC,IAAAA,UAAU,EAAE,EAFV;AAGFC,IAAAA,UAAU,EAAE,QAHV;AAIFC,IAAAA,aAAa,EAAE,IAJb;AAKFC,IAAAA,KAAK,EAAE;AALL,GAZuB;AAmB7BxB,EAAAA,QAAQ,EAAE;AACNwB,IAAAA,KAAK,EAAEhC,MAAM,CAAC2B,QADR;AAENC,IAAAA,QAAQ,EAAE;AAFJ,GAnBmB;AAuB7BhB,EAAAA,aAAa,EAAC;AACVU,IAAAA,SAAS,EAAE,CADD;AAEVC,IAAAA,WAAW,EAAE,CAFH;AAGVC,IAAAA,WAAW,EAAG,aAHJ;AAIVE,IAAAA,eAAe,EAAE,aAJP;AAKVR,IAAAA,cAAc,EAAE;AALN;AAvBe,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { Text, View, StyleSheet, TouchableOpacity  } from 'react-native';\nimport colors from '../../config/colors.js'\n\nexport default function Button(props) {\n    const { \n        onPress, \n        title = 'button', \n        style= {},\n        styleButton = {}, \n        styleText = {},\n        onlyText,\n    } = props;\n\n    let btnStyles = [ \n        styles.button,  \n        onlyText? styles.tranparentBtn : {} ,\n        styleButton,\n        style,\n    ];\n\n    let textStyles = [ \n        styles.text, \n        onlyText? styles.onlyText : {},\n        styleText,\n    ];\n\n    return (\n        <TouchableOpacity {...props} \n            style={btnStyles} \n            onPress={onPress} >\n            <Text {...props} style={textStyles} >{title}</Text>\n        </TouchableOpacity>\n    );\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        alignItems: 'center',\n        justifyContent: 'center',\n        paddingVertical: 10,\n        paddingHorizontal: 30,\n        borderRadius: 8,\n        elevation: 5,\n        borderWidth: 1,\n        borderColor: colors.btnBorder,\n        backgroundColor: colors.btnGreen,\n    },\n    text: {\n        fontSize: 16,\n        lineHeight: 21,\n        fontWeight: 'normal',\n        letterSpacing: 0.25,\n        color: 'white',\n    },\n    onlyText: {\n        color: colors.btnGreen,\n        fontSize: 14,\n    },\n    tranparentBtn:{\n        elevation: 0,\n        borderWidth: 0,\n        borderColor:  'transparent',\n        backgroundColor: 'transparent',\n        justifyContent: \"space-between\",\n    }\n});\n\n"]},"metadata":{},"sourceType":"module"}