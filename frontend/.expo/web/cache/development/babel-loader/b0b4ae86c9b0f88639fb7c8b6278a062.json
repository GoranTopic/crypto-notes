{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from \"../animated/AnimatedCircle\";\nimport { color } from \"../const\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar BubblesLoader = function (_React$PureComponent) {\n  _inherits(BubblesLoader, _React$PureComponent);\n\n  var _super = _createSuper(BubblesLoader);\n\n  function BubblesLoader() {\n    var _this;\n\n    _classCallCheck(this, BubblesLoader);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      opacities: [new Animated.Value(1), new Animated.Value(1), new Animated.Value(1), new Animated.Value(1), new Animated.Value(1), new Animated.Value(1), new Animated.Value(1), new Animated.Value(1)]\n    };\n    _this.eachDegree = 360 / _this.state.opacities.length;\n    _this.timers = [];\n\n    _this._animation = function (i) {\n      Animated.sequence([Animated.timing(_this.state.opacities[i], {\n        toValue: 0.2,\n        duration: 600,\n        useNativeDriver: false\n      }), Animated.timing(_this.state.opacities[i], {\n        toValue: 1,\n        duration: 600,\n        useNativeDriver: false\n      })]).start(function () {\n        !_this.unmounted && _this._animation(i);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(BubblesLoader, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.state.opacities.forEach(function (item, i) {\n        var id = setTimeout(function () {\n          _this2._animation(i);\n        }, i * 150);\n\n        _this2.timers.push(id);\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.unmounted = true;\n      this.timers.forEach(function (id) {\n        clearTimeout(id);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$props = this.props,\n          size = _this$props.size,\n          dotRadius = _this$props.dotRadius,\n          color = _this$props.color;\n      var opacities = this.state.opacities;\n      return _jsx(Surface, {\n        width: size + dotRadius,\n        height: size + dotRadius,\n        children: opacities.map(function (item, i) {\n          var radian = i * _this3.eachDegree * Math.PI / 180;\n          var x = Math.round(size / 2 * Math.cos(radian)) + size / 2 + dotRadius / 2;\n          var y = Math.round(size / 2 * Math.sin(radian)) + size / 2 + dotRadius / 2;\n          return _jsx(AnimatedCircle, {\n            radius: dotRadius,\n            fill: color,\n            x: x,\n            y: y,\n            scale: opacities[i]\n          }, i);\n        })\n      });\n    }\n  }]);\n\n  return BubblesLoader;\n}(React.PureComponent);\n\nBubblesLoader.propTypes = {\n  color: PropTypes.string,\n  dotRadius: PropTypes.number,\n  size: PropTypes.number\n};\nBubblesLoader.defaultProps = {\n  color: color,\n  dotRadius: 10,\n  size: 40\n};\nexport { BubblesLoader as default };","map":{"version":3,"sources":["/home/telix/crypto-notes/crypto_notes/node_modules/react-native-indicator/lib/loader/BubblesLoader.js"],"names":["React","PropTypes","Surface","AnimatedCircle","color","BubblesLoader","state","opacities","Animated","Value","eachDegree","length","timers","_animation","i","sequence","timing","toValue","duration","useNativeDriver","start","unmounted","forEach","item","id","setTimeout","push","clearTimeout","props","size","dotRadius","map","radian","Math","PI","x","round","cos","y","sin","PureComponent","propTypes","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class BubblesLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    dotRadius: PropTypes.number,\n    size: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    dotRadius: 10,\n    size: 40,\n  };\n\n  state = {\n    opacities: [\n      new Animated.Value(1),\n      new Animated.Value(1),\n      new Animated.Value(1),\n      new Animated.Value(1),\n      new Animated.Value(1),\n      new Animated.Value(1),\n      new Animated.Value(1),\n      new Animated.Value(1),\n    ],\n  };\n  eachDegree = 360 / this.state.opacities.length;\n  timers = [];\n\n  componentDidMount() {\n    this.state.opacities.forEach((item, i) => {\n      const id = setTimeout(() => {\n        this._animation(i);\n      }, i * 150);\n      this.timers.push(id);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.timers.forEach((id) => {\n      clearTimeout(id);\n    });\n  }\n\n  _animation = (i) => {\n    Animated.sequence([\n      Animated.timing(this.state.opacities[i], {\n        toValue: 0.2,\n        duration: 600,\n        useNativeDriver: false,\n      }),\n      Animated.timing(this.state.opacities[i], {\n        toValue: 1,\n        duration: 600,\n        useNativeDriver: false,\n      }),\n    ]).start(() => {\n      !this.unmounted && this._animation(i);\n    });\n  };\n\n  render() {\n    const { size, dotRadius, color } = this.props;\n    const { opacities } = this.state;\n    return (\n      <Surface width={size + dotRadius} height={size + dotRadius}>\n        {opacities.map((item, i) => {\n          let radian = (i * this.eachDegree * Math.PI) / 180;\n          let x = Math.round((size / 2) * Math.cos(radian)) + size / 2 + dotRadius / 2;\n          let y = Math.round((size / 2) * Math.sin(radian)) + size / 2 + dotRadius / 2;\n          return (\n            <AnimatedCircle\n              key={i}\n              radius={dotRadius}\n              fill={color}\n              x={x}\n              y={y}\n              scale={opacities[i]}\n            />\n          );\n        })}\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}