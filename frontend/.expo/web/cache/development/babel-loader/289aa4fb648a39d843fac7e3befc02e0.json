{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport React from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from \"../screens/HomeScreen.js\";\nimport AboutScreen from \"../screens/AboutScreen.js\";\nimport SignupScreen from \"../screens/SignupScreen.js\";\nimport LoginScreen from \"../screens/LoginScreen.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar Tab = createMaterialTopTabNavigator();\n\nvar BottomTabs = function BottomTabs() {\n  return _jsx(_Fragment, {\n    children: _jsxs(Tab.Navigator, {\n      tabBarPosition: \"bottom\",\n      initialRouteName: \"Login\",\n      children: [_jsx(Tab.Screen, {\n        name: \"Login\",\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(LoginScreen, _objectSpread({}, props));\n        }\n      }), _jsx(Tab.Screen, {\n        name: \"Home\",\n        options: {\n          headerShown: false\n        },\n        children: function children(props) {\n          return _jsx(HomeScreen, _objectSpread({}, props));\n        }\n      })]\n    })\n  });\n};\n\nvar Drawer = createDrawerNavigator();\n\nvar UserDrawer = function UserDrawer() {\n  return _jsx(_Fragment, {\n    children: _jsxs(Drawer.Navigator, {\n      initialRouteName: \"UserHome\",\n      children: [_jsx(Drawer.Screen, {\n        name: \"BottomTabs\",\n        component: BottomTabs,\n        options: {\n          title: 'Makipura'\n        }\n      }), _jsx(Drawer.Screen, {\n        name: \"About\",\n        component: AboutScreen,\n        options: {\n          title: 'Makipura',\n          drawerLabel: 'About'\n        }\n      })]\n    })\n  });\n};\n\nvar Stack = createNativeStackNavigator();\n\nvar SignInRootStack = function SignInRootStack() {\n  return _jsx(_Fragment, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: \"Drawer\",\n      children: [_jsx(Stack.Screen, {\n        name: \"Drawer\",\n        options: {\n          headerShown: false\n        },\n        component: UserDrawer\n      }), _jsx(Stack.Screen, {\n        name: \"Login\",\n        options: {\n          headerShown: true\n        },\n        children: function children(props) {\n          return _jsx(LoginScreen, _objectSpread({}, props));\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Signup\",\n        options: {\n          headerShown: true\n        },\n        children: function children(props) {\n          return _jsx(SignupScreen, _objectSpread({}, props));\n        }\n      })]\n    })\n  });\n};\n\nexport default SignInRootStack;","map":{"version":3,"sources":["/home/telix/crypto-notes/crypto_notes/src/navigation/SignInRootStack.js"],"names":["React","createNativeStackNavigator","createMaterialTopTabNavigator","createDrawerNavigator","HomeScreen","AboutScreen","SignupScreen","LoginScreen","Tab","BottomTabs","headerShown","props","Drawer","UserDrawer","title","drawerLabel","Stack","SignInRootStack"],"mappings":";;;;;;AACA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,SAASC,6BAAT,QAA8C,qCAA9C;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAOC,UAAP;AACA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,WAAP;;;;AAEA,IAAMC,GAAG,GAAGN,6BAA6B,EAAzC;;AAEA,IAAMO,UAAU,GAAG,SAAbA,UAAa;AAAA,SACjB;AAAA,cACE,MAAC,GAAD,CAAK,SAAL;AAAe,MAAA,cAAc,EAAC,QAA9B;AACE,MAAA,gBAAgB,EAAC,OADnB;AAAA,iBAEE,KAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAFX;AAAA,kBAGI,kBAAAC,KAAK;AAAA,iBAAI,KAAC,WAAD,oBAAiBA,KAAjB,EAAJ;AAAA;AAHT,QAFF,EAOE,KAAC,GAAD,CAAK,MAAL;AACE,QAAA,IAAI,EAAC,MADP;AAGE,QAAA,OAAO,EAAE;AAAED,UAAAA,WAAW,EAAE;AAAf,SAHX;AAAA,kBAII,kBAAAC,KAAK;AAAA,iBAAI,KAAC,UAAD,oBAAgBA,KAAhB,EAAJ;AAAA;AAJT,QAPF;AAAA;AADF,IADiB;AAAA,CAAnB;;AAmBA,IAAMC,MAAM,GAAGT,qBAAqB,EAApC;;AAEA,IAAMU,UAAU,GAAG,SAAbA,UAAa;AAAA,SACjB;AAAA,cACE,MAAC,MAAD,CAAQ,SAAR;AACE,MAAA,gBAAgB,EAAC,UADnB;AAAA,iBAEE,KAAC,MAAD,CAAQ,MAAR;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,SAAS,EAAEJ,UAFb;AAGE,QAAA,OAAO,EAAE;AAAEK,UAAAA,KAAK,EAAE;AAAT;AAHX,QAFF,EAOE,KAAC,MAAD,CAAQ,MAAR;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,SAAS,EAAET,WAFb;AAGE,QAAA,OAAO,EAAE;AAAES,UAAAA,KAAK,EAAE,UAAT;AACPC,UAAAA,WAAW,EAAE;AADN;AAHX,QAPF;AAAA;AADF,IADiB;AAAA,CAAnB;;AAqBA,IAAMC,KAAK,GAAGf,0BAA0B,EAAxC;;AAEA,IAAMgB,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SACtB;AAAA,cACE,MAAC,KAAD,CAAO,SAAP;AAAiB,MAAA,gBAAgB,EAAC,QAAlC;AAAA,iBACE,KAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE;AAAEP,UAAAA,WAAW,EAAE;AAAf,SAFX;AAGE,QAAA,SAAS,EAAEG;AAHb,QADF,EAME,KAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,OAAO,EAAE;AAAEH,UAAAA,WAAW,EAAE;AAAf,SAFX;AAAA,kBAGI,kBAAAC,KAAK;AAAA,iBAAI,KAAC,WAAD,oBAAiBA,KAAjB,EAAJ;AAAA;AAHT,QANF,EAWE,KAAC,KAAD,CAAO,MAAP;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,OAAO,EAAE;AAAED,UAAAA,WAAW,EAAE;AAAf,SAFX;AAAA,kBAGI,kBAAAC,KAAK;AAAA,iBAAI,KAAC,YAAD,oBAAkBA,KAAlB,EAAJ;AAAA;AAHT,QAXF;AAAA;AADF,IADsB;AAAA,CAAxB;;AAuBA,eAAeM,eAAf","sourcesContent":["// import react navigation\nimport React  from 'react';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createMaterialTopTabNavigator } from '@react-navigation/material-top-tabs';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport HomeScreen from '../screens/HomeScreen.js';\nimport AboutScreen from '../screens/AboutScreen.js';\nimport SignupScreen from '../screens/SignupScreen.js';\nimport LoginScreen from '../screens/LoginScreen.js';\n\nconst Tab = createMaterialTopTabNavigator();\n\nconst BottomTabs = () => (\n\t\t<>\n\t\t\t\t<Tab.Navigator tabBarPosition=\"bottom\"\n\t\t\t\t\t\tinitialRouteName=\"Login\">\n\t\t\t\t\t\t<Tab.Screen \n\t\t\t\t\t\t\t\tname=\"Login\"\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }} >\n\t\t\t\t\t\t\t\t{ props => <LoginScreen {...props} /> }\n\t\t\t\t\t\t</Tab.Screen>\n\t\t\t\t\t\t<Tab.Screen \n\t\t\t\t\t\t\t\tname=\"Home\"\n\t\t\t\t\t\t\t\t//component={HomeScreen}/>  \n\t\t\t\t\t\t\t\toptions={{ headerShown: false }}>\n\t\t\t\t\t\t\t\t{ props => <HomeScreen {...props} /> }\n\t\t\t\t\t\t</Tab.Screen>\n\t\t\t\t</Tab.Navigator>\n\t\t</>\n)\n\nconst Drawer = createDrawerNavigator();\n\nconst UserDrawer = () => (\n\t\t<>\n\t\t\t\t<Drawer.Navigator \n\t\t\t\t\t\tinitialRouteName=\"UserHome\">\n\t\t\t\t\t\t<Drawer.Screen \n\t\t\t\t\t\t\t\tname=\"BottomTabs\" \n\t\t\t\t\t\t\t\tcomponent={BottomTabs} \n\t\t\t\t\t\t\t\toptions={{ title: 'Makipura' }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Drawer.Screen \n\t\t\t\t\t\t\t\tname=\"About\" \n\t\t\t\t\t\t\t\tcomponent={AboutScreen}\n\t\t\t\t\t\t\t\toptions={{ title: 'Makipura', \n\t\t\t\t\t\t\t\t\t\tdrawerLabel: 'About',\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t</Drawer.Navigator>\n\t\t</>\n)\n\n\nconst Stack = createNativeStackNavigator();\n\nconst SignInRootStack = () => (\n\t\t<>\n\t\t\t\t<Stack.Navigator initialRouteName=\"Drawer\">\n\t\t\t\t\t\t<Stack.Screen \n\t\t\t\t\t\t\t\tname=\"Drawer\"\n\t\t\t\t\t\t\t\toptions={{ headerShown: false }} \n\t\t\t\t\t\t\t\tcomponent={UserDrawer}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Stack.Screen \n\t\t\t\t\t\t\t\tname=\"Login\"\n\t\t\t\t\t\t\t\toptions={{ headerShown: true }} >\n\t\t\t\t\t\t\t\t{ props => <LoginScreen {...props} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t\t\t<Stack.Screen \n\t\t\t\t\t\t\t\tname=\"Signup\"\n\t\t\t\t\t\t\t\toptions={{ headerShown: true }} >\n\t\t\t\t\t\t\t\t{ props => <SignupScreen {...props} /> }\n\t\t\t\t\t\t</Stack.Screen>\n\t\t\t\t</Stack.Navigator>  \n\n\t\t</>\n)\n\nexport default SignInRootStack;\n"]},"metadata":{},"sourceType":"module"}