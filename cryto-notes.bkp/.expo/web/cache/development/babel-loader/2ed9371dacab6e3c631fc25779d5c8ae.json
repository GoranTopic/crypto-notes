{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from \"../state/mappers.js\";\nimport { createDrawerNavigator } from 'react-navigation/drawer';\nimport { createStackNavigator } from 'react-navigation/stack';\nimport UserDrawer from \"./UserDrawer.js\";\nvar Stack = createNativeStackNavigator();\n\nvar RootStack = function RootStack(props) {\n  return React.createElement(React.Fragment, null, React.createElement(Stack.Navigator, null, React.createElement(Stack.Screen, {\n    name: \"UserDrawer\",\n    component: UserDrawer,\n    options: {\n      headerShown: false\n    }\n  })));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RootStack);","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/navigation/LoggedInRootStack.js"],"names":["React","useState","useEffect","connect","mapStateToProps","mapDispatchToProps","createDrawerNavigator","createStackNavigator","UserDrawer","Stack","createNativeStackNavigator","RootStack","props","headerShown"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,kBAA1B;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,OAAOC,UAAP;AAEA,IAAMC,KAAK,GAAGC,0BAA0B,EAAxC;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,KAAK;AAAA,SAAI,0CACzB,oBAAC,KAAD,CAAO,SAAP,QACE,oBAAC,KAAD,CAAO,MAAP;AAAc,IAAA,IAAI,EAAC,YAAnB;AACE,IAAA,SAAS,EAAEJ,UADb;AAEE,IAAA,OAAO,EAAE;AAAEK,MAAAA,WAAW,EAAE;AAAf;AAFX,IADF,CADyB,CAAJ;AAAA,CAAvB;;AAQA,eAAeV,OAAO,CAACC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CM,SAA7C,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport { createDrawerNavigator } from 'react-navigation/drawer';\nimport { createStackNavigator } from 'react-navigation/stack';\nimport UserDrawer from './UserDrawer.js';\n\nconst Stack = createNativeStackNavigator();\n\n// render this stack if user is logged In\n/* this navigator defines the routes for a logged in user, \n * it provide the user logged in context information */\nconst RootStack = props => <>\n\t\t<Stack.Navigator>\n\t\t\t\t<Stack.Screen name=\"UserDrawer\"\n\t\t\t\t\t\tcomponent={UserDrawer}\n\t\t\t\t\t\toptions={{ headerShown: false }} />  \n\t\t</Stack.Navigator>  \n</>\n \nexport default connect(mapStateToProps, mapDispatchToProps)(RootStack);\n\n"]},"metadata":{},"sourceType":"module"}