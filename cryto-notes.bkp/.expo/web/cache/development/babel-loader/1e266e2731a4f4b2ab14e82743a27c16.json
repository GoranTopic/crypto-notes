{"ast":null,"code":"import { setSocket as _setSocket, setUser as _setUser, setCookie as _setCookie, setState as _setState, setAppError as _setAppError, setAppIsLoading as _setAppIsLoading } from \"./actions.js\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    state: state\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setSocket: function setSocket(socket) {\n      dispatch(_setSocket(socket));\n    },\n    setUser: function setUser(user) {\n      dispatch(_setUser(user));\n    },\n    signupUser: function signupUser(user) {\n      dispatch(_setUser(user));\n    },\n    sign: function sign(user) {\n      dispatch(_setUser(user));\n    },\n    setCookie: function setCookie(cookie) {\n      dispatch(_setCookie(cookie));\n    },\n    setState: function setState(state) {\n      dispatch(_setState(state));\n    },\n    setAppError: function setAppError(error) {\n      dispatch(_setAppError(state));\n    },\n    setAppIsLoading: function setAppIsLoading(isLoading) {\n      dispatch(_setAppIsLoading(isLoading));\n    }\n  };\n};\n\nexport { mapStateToProps, mapDispatchToProps };","map":{"version":3,"sources":["/home/telix/crypto-note/cryto-note/src/state/mappers.js"],"names":["setSocket","setUser","setCookie","setState","setAppError","setAppIsLoading","mapStateToProps","state","mapDispatchToProps","dispatch","socket","user","signupUser","sign","cookie","error","isLoading"],"mappings":"AAAA,SACEA,SAAS,IAATA,UADF,EAEEC,OAAO,IAAPA,QAFF,EAGEC,SAAS,IAATA,UAHF,EAIEC,QAAQ,IAARA,SAJF,EAKEC,WAAW,IAAXA,YALF,EAMEC,eAAe,IAAfA,gBANF;;AASA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC7B,SAAO;AACHA,IAAAA,KAAK,EAAEA;AADJ,GAAP;AAGH,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ,EAAI;AACrC,SAAO;AACLT,IAAAA,SAAS,EAAE,mBAAAU,MAAM,EAAI;AACnBD,MAAAA,QAAQ,CAACT,UAAS,CAACU,MAAD,CAAV,CAAR;AACD,KAHI;AAILT,IAAAA,OAAO,EAAE,iBAAAU,IAAI,EAAI;AACfF,MAAAA,QAAQ,CAACR,QAAO,CAACU,IAAD,CAAR,CAAR;AACD,KANI;AAOLC,IAAAA,UAAU,EAAE,oBAAAD,IAAI,EAAI;AAClBF,MAAAA,QAAQ,CAACR,QAAO,CAACU,IAAD,CAAR,CAAR;AACD,KATI;AAULE,IAAAA,IAAI,EAAE,cAAAF,IAAI,EAAI;AACZF,MAAAA,QAAQ,CAACR,QAAO,CAACU,IAAD,CAAR,CAAR;AACD,KAZI;AAcLT,IAAAA,SAAS,EAAE,mBAAAY,MAAM,EAAI;AACnBL,MAAAA,QAAQ,CAACP,UAAS,CAACY,MAAD,CAAV,CAAR;AACD,KAhBI;AAiBLX,IAAAA,QAAQ,EAAE,kBAAAI,KAAK,EAAI;AACjBE,MAAAA,QAAQ,CAACN,SAAQ,CAACI,KAAD,CAAT,CAAR;AACD,KAnBI;AAoBLH,IAAAA,WAAW,EAAE,qBAAAW,KAAK,EAAK;AACrBN,MAAAA,QAAQ,CAACL,YAAW,CAACG,KAAD,CAAZ,CAAR;AACD,KAtBI;AAuBLF,IAAAA,eAAe,EAAE,yBAAAW,SAAS,EAAK;AAC7BP,MAAAA,QAAQ,CAACJ,gBAAe,CAACW,SAAD,CAAhB,CAAR;AACD;AAzBI,GAAP;AA2BD,CA5BD;;AA+BA,SAASV,eAAT,EAA0BE,kBAA1B","sourcesContent":["import { \n\t\tsetSocket, \n\t\tsetUser, \n\t\tsetCookie, \n\t\tsetState, \n\t\tsetAppError, \n\t\tsetAppIsLoading } from './actions.js'\n\n\nconst mapStateToProps = state => {\n    return {\n        state: state,\n    };\n}\n\nconst mapDispatchToProps = dispatch => {\n\t\treturn {\n\t\t\t\tsetSocket: socket => {\n\t\t\t\t\t\tdispatch(setSocket(socket));\n\t\t\t\t},\n\t\t\t\tsetUser: user => {\n\t\t\t\t\t\tdispatch(setUser(user));\n\t\t\t\t},\n\t\t\t\tsignupUser: user => {\n\t\t\t\t\t\tdispatch(setUser(user));\n\t\t\t\t},\n\t\t\t\tsign: user => {\n\t\t\t\t\t\tdispatch(setUser(user));\n\t\t\t\t},\n\n\t\t\t\tsetCookie: cookie => {\n\t\t\t\t\t\tdispatch(setCookie(cookie));\n\t\t\t\t},\n\t\t\t\tsetState: state => {\n\t\t\t\t\t\tdispatch(setState(state));\n\t\t\t\t},\n\t\t\t\tsetAppError: error  => {\n\t\t\t\t\t\tdispatch(setAppError(state));\n\t\t\t\t},\n\t\t\t\tsetAppIsLoading: isLoading  => {\n\t\t\t\t\t\tdispatch(setAppIsLoading(isLoading));\n\t\t\t\t},\n\t\t}\n}\n\n  \nexport { mapStateToProps, mapDispatchToProps }\n"]},"metadata":{},"sourceType":"module"}