{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport { ResponseType } from 'expo-auth-session';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Button from \"../Button.js\";\nimport { BASE_API, FACEBOOK_OATH_CLIENT_ID } from '@env';\nWebBrowser.maybeCompleteAuthSession();\nexport default function GoogleSigninButton() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      result = _useState2[0],\n      setResult = _useState2[1];\n\n  var _Google$useAuthReques = Google.useAuthRequest({\n    expoClientId: 'GOOGLE_GUID.apps.googleusercontent.com',\n    iosClientId: 'GOOGLE_GUID.apps.googleusercontent.com',\n    androidClientId: 'GOOGLE_GUID.apps.googleusercontent.com',\n    webClientId: 'GOOGLE_GUID.apps.googleusercontent.com'\n  }),\n      _Google$useAuthReques2 = _slicedToArray(_Google$useAuthReques, 3),\n      request = _Google$useAuthReques2[0],\n      response = _Google$useAuthReques2[1],\n      promptAsync = _Google$useAuthReques2[2];\n\n  React.useEffect(function () {\n    if ((response == null ? void 0 : response.type) === 'success') {\n      var authentication = response.authentication;\n    }\n  }, [response]);\n  return React.createElement(Button, {\n    style: styles.button,\n    disabled: !request,\n    title: \"Google\",\n    onPress: function onPress() {\n      promptAsync();\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: '#DB4437',\n    width: '40%',\n    paddingVertical: 11,\n    paddingHorizontal: 16\n  }\n});","map":{"version":3,"sources":["/home/telix/crypto-note/cryto-note/src/components/buttons/auth/GoogleSigninButton.js"],"names":["React","useState","useEffect","WebBrowser","Google","ResponseType","Button","BASE_API","FACEBOOK_OATH_CLIENT_ID","maybeCompleteAuthSession","GoogleSigninButton","result","setResult","useAuthRequest","expoClientId","iosClientId","androidClientId","webClientId","request","response","promptAsync","type","authentication","styles","button","StyleSheet","create","backgroundColor","width","paddingVertical","paddingHorizontal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,KAAKC,UAAZ,MAA4B,kBAA5B;AACA,OAAO,KAAKC,MAAZ,MAAwB,oCAAxB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAEA,OAAOC,MAAP;AACA,SAASC,QAAT,EAAmBC,uBAAnB,QAAkD,MAAlD;AAEAL,UAAU,CAACM,wBAAX;AAEA,eAAe,SAASC,kBAAT,GAA6B;AACxC,kBAA4BT,QAAQ,CAAC,IAAD,CAApC;AAAA;AAAA,MAAOU,MAAP;AAAA,MAAeC,SAAf;;AACA,8BAAyCR,MAAM,CAACS,cAAP,CAAsB;AAC3DC,IAAAA,YAAY,EAAE,wCAD6C;AAE3DC,IAAAA,WAAW,EAAE,wCAF8C;AAG3DC,IAAAA,eAAe,EAAE,wCAH0C;AAI3DC,IAAAA,WAAW,EAAE;AAJ8C,GAAtB,CAAzC;AAAA;AAAA,MAAOC,OAAP;AAAA,MAAgBC,QAAhB;AAAA,MAA0BC,WAA1B;;AAOApB,EAAAA,KAAK,CAACE,SAAN,CAAgB,YAAM;AAClB,QAAI,CAAAiB,QAAQ,QAAR,YAAAA,QAAQ,CAAEE,IAAV,MAAmB,SAAvB,EAAkC;AAC9B,UAAQC,cAAR,GAA2BH,QAA3B,CAAQG,cAAR;AACH;AACJ,GAJD,EAIG,CAACH,QAAD,CAJH;AAMA,SACI,oBAAC,MAAD;AACI,IAAA,KAAK,EAAEI,MAAM,CAACC,MADlB;AAEI,IAAA,QAAQ,EAAE,CAACN,OAFf;AAGI,IAAA,KAAK,EAAC,QAHV;AAII,IAAA,OAAO,EAAE,mBAAM;AACXE,MAAAA,WAAW;AACd;AANL,IADJ;AAUH;AAED,IAAMG,MAAM,GAAGE,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,MAAM,EAAE;AACJG,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,KAAK,EAAE,KAFH;AAGJC,IAAAA,eAAe,EAAE,EAHb;AAIJC,IAAAA,iBAAiB,EAAE;AAJf;AADqB,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport * as WebBrowser from 'expo-web-browser';\nimport * as Google from 'expo-auth-session/providers/google';\nimport { ResponseType } from 'expo-auth-session';\nimport { StyleSheet } from 'react-native';\nimport Button from '../Button.js';\nimport { BASE_API, FACEBOOK_OATH_CLIENT_ID } from '@env';\n\nWebBrowser.maybeCompleteAuthSession();\n\nexport default function GoogleSigninButton(){\n    const [result, setResult] = useState(null);\n    const [request, response, promptAsync] = Google.useAuthRequest({\n        expoClientId: 'GOOGLE_GUID.apps.googleusercontent.com',\n        iosClientId: 'GOOGLE_GUID.apps.googleusercontent.com',\n        androidClientId: 'GOOGLE_GUID.apps.googleusercontent.com',\n        webClientId: 'GOOGLE_GUID.apps.googleusercontent.com',\n    });\n\n    React.useEffect(() => {\n        if (response?.type === 'success') {\n            const { authentication } = response;\n        }\n    }, [response]);\n\n    return (\n        <Button\n            style={styles.button}\n            disabled={!request}\n            title=\"Google\"\n            onPress={() => { \n                promptAsync();\n            }}\n        />\n    );\n}\n\nconst styles = StyleSheet.create({\n    button: {\n        backgroundColor: '#DB4437', // Google red\n        width: '40%',\n        paddingVertical: 11,\n        paddingHorizontal: 16,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}