{"ast":null,"code":"import React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Toast from 'react-native-toast-message';\nimport { toastConfig } from \"../components/Toaster.js\";\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from \"../state/mappers.js\";\nimport LoggedInRootStack from \"./LoggedInRootStack.js\";\nimport SignInRootStack from \"./SignInRootStack.js\";\n\nvar AppNavigator = function AppNavigator(_ref) {\n  var state = _ref.state;\n  var isSignedIn = state.user.isSignedIn;\n  return React.createElement(React.Fragment, null, React.createElement(NavigationContainer, null, isSignedIn ? React.createElement(LoggedInRootStack, null) : React.createElement(SignInRootStack, null), React.createElement(Toast, null)));\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavigator);","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/navigation/AppNavigator.js"],"names":["React","NavigationContainer","Toast","toastConfig","connect","mapStateToProps","mapDispatchToProps","LoggedInRootStack","SignInRootStack","AppNavigator","state","isSignedIn","user"],"mappings":"AAAA,OAAOA,KAAP,MAAmB,OAAnB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,SAASC,WAAT;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,eAAT,EAA0BC,kBAA1B;AACA,OAAOC,iBAAP;AACA,OAAOC,eAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAbC,KAAa,QAAbA,KAAa;AACnC,MAAQC,UAAR,GAAwBD,KAAK,CAACE,IAA9B,CAAQD,UAAR;AACA,SAAO,0CACL,oBAAC,mBAAD,QACIA,UAAU,GACV,oBAAC,iBAAD,OADU,GAEV,oBAAC,eAAD,OAHJ,EAKE,oBAAC,KAAD,OALF,CADK,CAAP;AASD,CAXD;;AAaA,eAAeP,OAAO,CAACC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CG,YAA7C,CAAf","sourcesContent":["import React  from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Toast from 'react-native-toast-message'\nimport { toastConfig } from '../components/Toaster.js';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js'\nimport LoggedInRootStack from './LoggedInRootStack.js';\nimport SignInRootStack from './SignInRootStack.js';\n\nconst AppNavigator = ({ state }) =>  {  \t\n\t\tconst { isSignedIn }  = state.user; // get state of user\n\t\treturn <>\n\t\t\t\t<NavigationContainer>     \n\t\t\t\t\t\t{ isSignedIn?\n\t\t\t\t\t\t\t\t<LoggedInRootStack/> : // render if user is logged in\n\t\t\t\t\t\t\t\t<SignInRootStack/>  // render is not logged in\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<Toast/>\n\t\t\t\t</NavigationContainer>\n\t\t</>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AppNavigator);\n\n\n\n"]},"metadata":{},"sourceType":"module"}