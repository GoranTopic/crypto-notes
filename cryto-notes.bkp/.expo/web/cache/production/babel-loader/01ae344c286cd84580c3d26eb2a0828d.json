{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import{Surface}from'@react-native-community/art';import AnimatedCircle from\"../animated/AnimatedCircle\";import{color}from\"../const\";var DoubleCircleLoader=function(_React$PureComponent){_inherits(DoubleCircleLoader,_React$PureComponent);var _super=_createSuper(DoubleCircleLoader);function DoubleCircleLoader(){var _this;_classCallCheck(this,DoubleCircleLoader);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={scales:[new Animated.Value(0),new Animated.Value(0)]};_this.timers=[];_this._animation=function(i){Animated.sequence([Animated.timing(_this.state.scales[i],{toValue:1,duration:1000,useNativeDriver:false}),Animated.timing(_this.state.scales[i],{toValue:0,duration:1000,useNativeDriver:false})]).start(function(){!_this.unmounted&&_this._animation(i);});};return _this;}_createClass(DoubleCircleLoader,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;this.state.scales.forEach(function(item,i){var id=setTimeout(function(){_this2._animation(i);},i*1000);_this2.timers.push(id);});}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unmounted=true;this.timers.forEach(function(id){clearTimeout(id);});}},{key:\"render\",value:function render(){var _this$props=this.props,color=_this$props.color,size=_this$props.size;var scales=this.state.scales;return React.createElement(Surface,{width:size,height:size},React.createElement(AnimatedCircle,{radius:size,fill:color,opacity:0.5,scale:scales[0],x:size/2,y:size/2}),React.createElement(AnimatedCircle,{radius:size,fill:color,opacity:0.5,scale:scales[1],x:size/2,y:size/2}));}}]);return DoubleCircleLoader;}(React.PureComponent);DoubleCircleLoader.propTypes={color:PropTypes.string,size:PropTypes.number};DoubleCircleLoader.defaultProps={color:color,size:30};export{DoubleCircleLoader as default};","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/node_modules/react-native-indicator/lib/loader/DoubleCircleLoader.js"],"names":["React","PropTypes","Surface","AnimatedCircle","color","DoubleCircleLoader","state","scales","Animated","Value","timers","_animation","i","sequence","timing","toValue","duration","useNativeDriver","start","unmounted","forEach","item","id","setTimeout","push","clearTimeout","props","size","PureComponent","propTypes","string","number","defaultProps"],"mappings":"qgCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,6DAEA,OAASC,OAAT,KAAwB,6BAAxB,CACA,MAAOC,CAAAA,cAAP,kCACA,OAASC,KAAT,gB,GAEqBC,CAAAA,kB,kXAWnBC,K,CAAQ,CACNC,MAAM,CAAE,CAAC,GAAIC,CAAAA,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAwB,GAAID,CAAAA,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAxB,CADF,C,OAGRC,M,CAAS,E,OAkBTC,U,CAAa,SAACC,CAAD,CAAO,CAClBJ,QAAQ,CAACK,QAAT,CAAkB,CAChBL,QAAQ,CAACM,MAAT,CAAgB,MAAKR,KAAL,CAAWC,MAAX,CAAkBK,CAAlB,CAAhB,CAAsC,CAAEG,OAAO,CAAE,CAAX,CAAcC,QAAQ,CAAE,IAAxB,CAA8BC,eAAe,CAAE,KAA/C,CAAtC,CADgB,CAEhBT,QAAQ,CAACM,MAAT,CAAgB,MAAKR,KAAL,CAAWC,MAAX,CAAkBK,CAAlB,CAAhB,CAAsC,CAAEG,OAAO,CAAE,CAAX,CAAcC,QAAQ,CAAE,IAAxB,CAA8BC,eAAe,CAAE,KAA/C,CAAtC,CAFgB,CAAlB,EAGGC,KAHH,CAGS,UAAM,CACb,CAAC,MAAKC,SAAN,EAAmB,MAAKR,UAAL,CAAgBC,CAAhB,CAAnB,CACD,CALD,EAMD,C,+EAvBD,4BAAoB,iBAClB,KAAKN,KAAL,CAAWC,MAAX,CAAkBa,OAAlB,CAA0B,SAACC,IAAD,CAAOT,CAAP,CAAa,CACrC,GAAMU,CAAAA,EAAE,CAAGC,UAAU,CAAC,UAAM,CAC1B,MAAI,CAACZ,UAAL,CAAgBC,CAAhB,EACD,CAFoB,CAElBA,CAAC,CAAG,IAFc,CAArB,CAGA,MAAI,CAACF,MAAL,CAAYc,IAAZ,CAAiBF,EAAjB,EACD,CALD,EAMD,C,oCAED,+BAAuB,CACrB,KAAKH,SAAL,CAAiB,IAAjB,CACA,KAAKT,MAAL,CAAYU,OAAZ,CAAoB,SAACE,EAAD,CAAQ,CAC1BG,YAAY,CAACH,EAAD,CAAZ,CACD,CAFD,EAGD,C,sBAWD,iBAAS,CACP,gBAAwB,KAAKI,KAA7B,CAAQtB,KAAR,aAAQA,KAAR,CAAeuB,IAAf,aAAeA,IAAf,CACA,GAAQpB,CAAAA,MAAR,CAAmB,KAAKD,KAAxB,CAAQC,MAAR,CACA,MACE,qBAAC,OAAD,EAAS,KAAK,CAAEoB,IAAhB,CAAsB,MAAM,CAAEA,IAA9B,EACE,oBAAC,cAAD,EACE,MAAM,CAAEA,IADV,CAEE,IAAI,CAAEvB,KAFR,CAGE,OAAO,CAAE,GAHX,CAIE,KAAK,CAAEG,MAAM,CAAC,CAAD,CAJf,CAKE,CAAC,CAAEoB,IAAI,CAAG,CALZ,CAME,CAAC,CAAEA,IAAI,CAAG,CANZ,EADF,CASE,oBAAC,cAAD,EACE,MAAM,CAAEA,IADV,CAEE,IAAI,CAAEvB,KAFR,CAGE,OAAO,CAAE,GAHX,CAIE,KAAK,CAAEG,MAAM,CAAC,CAAD,CAJf,CAKE,CAAC,CAAEoB,IAAI,CAAG,CALZ,CAME,CAAC,CAAEA,IAAI,CAAG,CANZ,EATF,CADF,CAoBD,C,gCAhE6C3B,KAAK,CAAC4B,a,EAAjCvB,kB,CACZwB,S,CAAY,CACjBzB,KAAK,CAAEH,SAAS,CAAC6B,MADA,CAEjBH,IAAI,CAAE1B,SAAS,CAAC8B,MAFC,C,CADA1B,kB,CAMZ2B,Y,CAAe,CACpB5B,KAAK,CAALA,KADoB,CAEpBuB,IAAI,CAAE,EAFc,C,QANHtB,kB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated } from 'react-native';\nimport { Surface } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class DoubleCircleLoader extends React.PureComponent {\n  static propTypes = {\n    color: PropTypes.string,\n    size: PropTypes.number,\n  };\n\n  static defaultProps = {\n    color,\n    size: 30,\n  };\n\n  state = {\n    scales: [new Animated.Value(0), new Animated.Value(0)],\n  };\n  timers = [];\n\n  componentDidMount() {\n    this.state.scales.forEach((item, i) => {\n      const id = setTimeout(() => {\n        this._animation(i);\n      }, i * 1000);\n      this.timers.push(id);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unmounted = true;\n    this.timers.forEach((id) => {\n      clearTimeout(id);\n    });\n  }\n\n  _animation = (i) => {\n    Animated.sequence([\n      Animated.timing(this.state.scales[i], { toValue: 1, duration: 1000, useNativeDriver: false }),\n      Animated.timing(this.state.scales[i], { toValue: 0, duration: 1000, useNativeDriver: false }),\n    ]).start(() => {\n      !this.unmounted && this._animation(i);\n    });\n  };\n\n  render() {\n    const { color, size } = this.props;\n    const { scales } = this.state;\n    return (\n      <Surface width={size} height={size}>\n        <AnimatedCircle\n          radius={size}\n          fill={color}\n          opacity={0.5}\n          scale={scales[0]}\n          x={size / 2}\n          y={size / 2}\n        />\n        <AnimatedCircle\n          radius={size}\n          fill={color}\n          opacity={0.5}\n          scale={scales[1]}\n          x={size / 2}\n          y={size / 2}\n        />\n      </Surface>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}