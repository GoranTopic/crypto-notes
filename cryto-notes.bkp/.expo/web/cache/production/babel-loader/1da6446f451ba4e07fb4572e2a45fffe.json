{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"tabBar\",\"state\",\"navigation\",\"descriptors\",\"sceneContainerStyle\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{CommonActions,useTheme}from'@react-navigation/native';import*as React from'react';import{TabView}from'react-native-tab-view';import MaterialTopTabBar from\"./MaterialTopTabBar\";export default function MaterialTopTabView(_ref){var _ref$tabBar=_ref.tabBar,tabBar=_ref$tabBar===void 0?function(props){return React.createElement(MaterialTopTabBar,props);}:_ref$tabBar,state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors,sceneContainerStyle=_ref.sceneContainerStyle,rest=_objectWithoutProperties(_ref,_excluded);var _useTheme=useTheme(),colors=_useTheme.colors;var renderTabBar=function renderTabBar(props){return tabBar(_objectSpread(_objectSpread({},props),{},{state:state,navigation:navigation,descriptors:descriptors}));};var focusedOptions=descriptors[state.routes[state.index].key].options;return React.createElement(TabView,_extends({},rest,{onIndexChange:function onIndexChange(index){return navigation.dispatch(_objectSpread(_objectSpread({},CommonActions.navigate({name:state.routes[index].name,merge:true})),{},{target:state.key}));},renderScene:function renderScene(_ref2){var route=_ref2.route;return descriptors[route.key].render();},navigationState:state,renderTabBar:renderTabBar,renderLazyPlaceholder:function renderLazyPlaceholder(_ref3){var route=_ref3.route;var _descriptors$route$ke,_descriptors$route$ke2,_descriptors$route$ke3;return(_descriptors$route$ke=(_descriptors$route$ke2=(_descriptors$route$ke3=descriptors[route.key].options).lazyPlaceholder)===null||_descriptors$route$ke2===void 0?void 0:_descriptors$route$ke2.call(_descriptors$route$ke3))!==null&&_descriptors$route$ke!==void 0?_descriptors$route$ke:null;},lazy:function lazy(_ref4){var route=_ref4.route;return descriptors[route.key].options.lazy===true;},lazyPreloadDistance:focusedOptions.lazyPreloadDistance,swipeEnabled:focusedOptions.swipeEnabled,onSwipeStart:function onSwipeStart(){return navigation.emit({type:'swipeStart'});},onSwipeEnd:function onSwipeEnd(){return navigation.emit({type:'swipeEnd'});},sceneContainerStyle:[{backgroundColor:colors.background},sceneContainerStyle]}));}","map":{"version":3,"sources":["MaterialTopTabView.tsx"],"names":["tabBar","props","rest","colors","useTheme","renderTabBar","state","navigation","descriptors","focusedOptions","index","name","merge","target","key","route","type","backgroundColor","background"],"mappings":"swCAAA,OAAA,aAAA,CAAA,QAAA,KAAA,0BAAA,CAOA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,CACA,OAAA,OAAA,KAAA,uBAAA,CAQA,MAAA,CAAA,iBAAA,2BAQA,cAAe,SAAA,CAAA,kBAAA,MAOL,sBANRA,MAMQ,CANRA,MAMQ,sBANEC,SAAAA,KAAD,QAAmC,CAAA,KAAA,CAAA,aAAA,CAAA,iBAAA,CADH,KACG,CAAnC,EAMD,aAPiC,KAOjC,MAPiC,KAOjC,CAPiC,UAOjC,MAPiC,UAOjC,CAPiC,WAOjC,MAPiC,WAOjC,CAPiC,mBAOjC,MAPiC,mBAOjC,CADLC,IACK,0CACR,cAAmBE,QAAnB,EAAA,CAAQD,MAAR,WAAQA,MAAR,CAEA,GAAME,CAAAA,YAAY,CAAIJ,QAAhBI,CAAAA,YAAgBJ,CAAAA,KAAD,CAA+B,CAClD,MAAOD,CAAAA,MAAM,gCAAC,KAAD,MAEXM,KAAK,CAFO,KAAD,CAGXC,UAAU,CAHE,UAAD,CAIXC,WAAW,CAAEA,WAJF,GAAb,CADF,CAAA,CASA,GAAMC,CAAAA,cAAc,CAAGD,WAAW,CAACF,KAAK,CAALA,MAAAA,CAAaA,KAAK,CAAlBA,KAAAA,EAAZE,GAAW,CAAXA,CAAvB,OAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,OAAA,CAAA,QAAA,CAAA,EAAA,CAAA,IAAA,CAAA,CAEE,aAAa,CAAGE,uBAAAA,KAAD,QACb,CAAA,UAAU,CAAV,QAAA,gCACK,aAAa,CAAb,QAAA,CAAuB,CACxBC,IAAI,CAAEL,KAAK,CAALA,MAAAA,CAAAA,KAAAA,EADkB,IAAA,CAExBM,KAAK,CAAE,IAFiB,CAAvB,CADL,MAKEC,MAAM,CAAEP,KAAK,CAACQ,GALhB,GADa,EAFjB,CAWE,WAAW,CAAE,+BAAGC,CAAAA,KAAH,OAAGA,KAAH,OAAeP,CAAAA,WAAW,CAACO,KAAK,CAAjBP,GAAW,CAAXA,CAX9B,MAW8BA,EAAf,EAXf,CAYE,eAAe,CAZjB,KAAA,CAaE,YAAY,CAbd,YAAA,CAcE,qBAAqB,CAAE,qCAAA,IAAGO,CAAAA,KAAH,OAAGA,KAAH,CAAA,GAAA,CAAA,qBAAA,CAAA,sBAAA,CAAA,sBAAA,CAAA,MAAA,CAAA,qBAAA,CAAA,CAAA,sBAAA,CACrB,CAAA,sBAAA,CAAA,WAAW,CAACA,KAAK,CAAjB,GAAW,CAAX,CAAA,OAAA,EADqB,eAAA,IAAA,IAAA,EAAA,sBAAA,GAAA,IAAA,EAAA,CAAA,IAAA,EAAA,CACrB,sBAAA,CAAA,IAAA,CADqB,sBACrB,CADqB,IAAA,IAAA,EAAA,qBAAA,GAAA,IAAA,EAAA,CAAA,qBAAA,CAAA,IAAA,CAdzB,CAAA,CAiBE,IAAI,CAAE,wBAAGA,CAAAA,KAAH,OAAGA,KAAH,OAAeP,CAAAA,WAAW,CAACO,KAAK,CAAjBP,GAAW,CAAXA,CAAAA,OAAAA,CAAAA,IAAAA,GAjBvB,IAiBQ,EAjBR,CAkBE,mBAAmB,CAAEC,cAAc,CAlBrC,mBAAA,CAmBE,YAAY,CAAEA,cAAc,CAnB9B,YAAA,CAoBE,YAAY,CAAE,8BAAM,CAAA,UAAU,CAAV,IAAA,CAAgB,CAAEO,IAAI,CAAE,YAAR,CAAhB,CAAN,EApBhB,CAqBE,UAAU,CAAE,4BAAM,CAAA,UAAU,CAAV,IAAA,CAAgB,CAAEA,IAAI,CAAE,UAAR,CAAhB,CAAN,EArBd,CAsBE,mBAAmB,CAAE,CACnB,CAAEC,eAAe,CAAEd,MAAM,CAACe,UAA1B,CADmB,CAAA,mBAAA,CAtBvB,CAAA,CAAA,CADF,CA6BD","sourcesContent":["import {\n  CommonActions,\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { SceneRendererProps, TabView } from 'react-native-tab-view';\n\nimport type {\n  MaterialTopTabBarProps,\n  MaterialTopTabDescriptorMap,\n  MaterialTopTabNavigationConfig,\n  MaterialTopTabNavigationHelpers,\n} from '../types';\nimport MaterialTopTabBar from './MaterialTopTabBar';\n\ntype Props = MaterialTopTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: MaterialTopTabNavigationHelpers;\n  descriptors: MaterialTopTabDescriptorMap;\n};\n\nexport default function MaterialTopTabView({\n  tabBar = (props: MaterialTopTabBarProps) => <MaterialTopTabBar {...props} />,\n  state,\n  navigation,\n  descriptors,\n  sceneContainerStyle,\n  ...rest\n}: Props) {\n  const { colors } = useTheme();\n\n  const renderTabBar = (props: SceneRendererProps) => {\n    return tabBar({\n      ...props,\n      state: state,\n      navigation: navigation,\n      descriptors: descriptors,\n    });\n  };\n\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  return (\n    <TabView<Route<string>>\n      {...rest}\n      onIndexChange={(index) =>\n        navigation.dispatch({\n          ...CommonActions.navigate({\n            name: state.routes[index].name,\n            merge: true,\n          }),\n          target: state.key,\n        })\n      }\n      renderScene={({ route }) => descriptors[route.key].render()}\n      navigationState={state}\n      renderTabBar={renderTabBar}\n      renderLazyPlaceholder={({ route }) =>\n        descriptors[route.key].options.lazyPlaceholder?.() ?? null\n      }\n      lazy={({ route }) => descriptors[route.key].options.lazy === true}\n      lazyPreloadDistance={focusedOptions.lazyPreloadDistance}\n      swipeEnabled={focusedOptions.swipeEnabled}\n      onSwipeStart={() => navigation.emit({ type: 'swipeStart' })}\n      onSwipeEnd={() => navigation.emit({ type: 'swipeEnd' })}\n      sceneContainerStyle={[\n        { backgroundColor: colors.background },\n        sceneContainerStyle,\n      ]}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}