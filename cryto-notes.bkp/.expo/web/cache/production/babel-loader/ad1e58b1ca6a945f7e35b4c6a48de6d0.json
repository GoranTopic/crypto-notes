{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"state\",\"navigation\",\"descriptors\"],_excluded2=[\"navigationState\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import{useTheme}from'@react-navigation/native';import Color from'color';import*as React from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import View from\"react-native-web/dist/exports/View\";import{TabBar,TabBarIndicator}from'react-native-tab-view';export default function TabBarTop(_ref){var state=_ref.state,navigation=_ref.navigation,descriptors=_ref.descriptors,rest=_objectWithoutProperties(_ref,_excluded);var _focusedOptions$tabBa,_focusedOptions$tabBa2;var _useTheme=useTheme(),colors=_useTheme.colors;var focusedOptions=descriptors[state.routes[state.index].key].options;var activeColor=(_focusedOptions$tabBa=focusedOptions.tabBarActiveTintColor)!==null&&_focusedOptions$tabBa!==void 0?_focusedOptions$tabBa:colors.text;var inactiveColor=(_focusedOptions$tabBa2=focusedOptions.tabBarInactiveTintColor)!==null&&_focusedOptions$tabBa2!==void 0?_focusedOptions$tabBa2:Color(activeColor).alpha(0.5).rgb().string();return React.createElement(TabBar,_extends({},rest,{navigationState:state,scrollEnabled:focusedOptions.tabBarScrollEnabled,bounces:focusedOptions.tabBarBounces,activeColor:activeColor,inactiveColor:inactiveColor,pressColor:focusedOptions.tabBarPressColor,pressOpacity:focusedOptions.tabBarPressOpacity,tabStyle:focusedOptions.tabBarItemStyle,indicatorStyle:[{backgroundColor:colors.primary},focusedOptions.tabBarIndicatorStyle],indicatorContainerStyle:focusedOptions.tabBarIndicatorContainerStyle,contentContainerStyle:focusedOptions.tabBarContentContainerStyle,style:[{backgroundColor:colors.card},focusedOptions.tabBarStyle],getAccessibilityLabel:function getAccessibilityLabel(_ref2){var route=_ref2.route;return descriptors[route.key].options.tabBarAccessibilityLabel;},getTestID:function getTestID(_ref3){var route=_ref3.route;return descriptors[route.key].options.tabBarTestID;},onTabPress:function onTabPress(_ref4){var route=_ref4.route,preventDefault=_ref4.preventDefault;var event=navigation.emit({type:'tabPress',target:route.key,canPreventDefault:true});if(event.defaultPrevented){preventDefault();}},onTabLongPress:function onTabLongPress(_ref5){var route=_ref5.route;return navigation.emit({type:'tabLongPress',target:route.key});},renderIcon:function renderIcon(_ref6){var route=_ref6.route,focused=_ref6.focused,color=_ref6.color;var options=descriptors[route.key].options;if(options.tabBarShowIcon===false){return null;}if(options.tabBarIcon!==undefined){var icon=options.tabBarIcon({focused:focused,color:color});return React.createElement(View,{style:[styles.icon,options.tabBarIconStyle]},icon);}return null;},renderLabel:function renderLabel(_ref7){var route=_ref7.route,focused=_ref7.focused,color=_ref7.color;var options=descriptors[route.key].options;if(options.tabBarShowLabel===false){return null;}var label=options.tabBarLabel!==undefined?options.tabBarLabel:options.title!==undefined?options.title:route.name;if(typeof label==='string'){return React.createElement(Text,{style:[styles.label,{color:color},options.tabBarLabelStyle],allowFontScaling:options.tabBarAllowFontScaling},label);}return label({focused:focused,color:color});},renderBadge:function renderBadge(_ref8){var route=_ref8.route;var _tabBarBadge;var tabBarBadge=descriptors[route.key].options.tabBarBadge;return(_tabBarBadge=tabBarBadge===null||tabBarBadge===void 0?void 0:tabBarBadge())!==null&&_tabBarBadge!==void 0?_tabBarBadge:null;},renderIndicator:function renderIndicator(_ref9){var state=_ref9.navigationState,rest=_objectWithoutProperties(_ref9,_excluded2);return focusedOptions.tabBarIndicator?focusedOptions.tabBarIndicator(_objectSpread({state:state},rest)):React.createElement(TabBarIndicator,_extends({navigationState:state},rest));}}));}var styles=StyleSheet.create({icon:{height:24,width:24},label:{textAlign:'center',textTransform:'uppercase',fontSize:13,margin:4,backgroundColor:'transparent'}});","map":{"version":3,"sources":["MaterialTopTabBar.tsx"],"names":["rest","colors","useTheme","focusedOptions","descriptors","state","activeColor","inactiveColor","Color","backgroundColor","primary","card","route","preventDefault","event","type","target","canPreventDefault","key","color","options","icon","focused","styles","label","tabBarAllowFontScaling","tabBarBadge","navigationState","height","width","textAlign","textTransform","fontSize","margin"],"mappings":"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","sourcesContent":["import {\n  ParamListBase,\n  Route,\n  TabNavigationState,\n  useTheme,\n} from '@react-navigation/native';\nimport Color from 'color';\nimport * as React from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { TabBar, TabBarIndicator } from 'react-native-tab-view';\n\nimport type { MaterialTopTabBarProps } from '../types';\n\nexport default function TabBarTop({\n  state,\n  navigation,\n  descriptors,\n  ...rest\n}: MaterialTopTabBarProps) {\n  const { colors } = useTheme();\n\n  const focusedOptions = descriptors[state.routes[state.index].key].options;\n\n  const activeColor = focusedOptions.tabBarActiveTintColor ?? colors.text;\n  const inactiveColor =\n    focusedOptions.tabBarInactiveTintColor ??\n    Color(activeColor).alpha(0.5).rgb().string();\n\n  return (\n    <TabBar\n      {...rest}\n      navigationState={state}\n      scrollEnabled={focusedOptions.tabBarScrollEnabled}\n      bounces={focusedOptions.tabBarBounces}\n      activeColor={activeColor}\n      inactiveColor={inactiveColor}\n      pressColor={focusedOptions.tabBarPressColor}\n      pressOpacity={focusedOptions.tabBarPressOpacity}\n      tabStyle={focusedOptions.tabBarItemStyle}\n      indicatorStyle={[\n        { backgroundColor: colors.primary },\n        focusedOptions.tabBarIndicatorStyle,\n      ]}\n      indicatorContainerStyle={focusedOptions.tabBarIndicatorContainerStyle}\n      contentContainerStyle={focusedOptions.tabBarContentContainerStyle}\n      style={[{ backgroundColor: colors.card }, focusedOptions.tabBarStyle]}\n      getAccessibilityLabel={({ route }) =>\n        descriptors[route.key].options.tabBarAccessibilityLabel\n      }\n      getTestID={({ route }) => descriptors[route.key].options.tabBarTestID}\n      onTabPress={({ route, preventDefault }) => {\n        const event = navigation.emit({\n          type: 'tabPress',\n          target: route.key,\n          canPreventDefault: true,\n        });\n\n        if (event.defaultPrevented) {\n          preventDefault();\n        }\n      }}\n      onTabLongPress={({ route }) =>\n        navigation.emit({\n          type: 'tabLongPress',\n          target: route.key,\n        })\n      }\n      renderIcon={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (options.tabBarShowIcon === false) {\n          return null;\n        }\n\n        if (options.tabBarIcon !== undefined) {\n          const icon = options.tabBarIcon({ focused, color });\n\n          return (\n            <View style={[styles.icon, options.tabBarIconStyle]}>{icon}</View>\n          );\n        }\n\n        return null;\n      }}\n      renderLabel={({ route, focused, color }) => {\n        const { options } = descriptors[route.key];\n\n        if (options.tabBarShowLabel === false) {\n          return null;\n        }\n\n        const label =\n          options.tabBarLabel !== undefined\n            ? options.tabBarLabel\n            : options.title !== undefined\n            ? options.title\n            : (route as Route<string>).name;\n\n        if (typeof label === 'string') {\n          return (\n            <Text\n              style={[styles.label, { color }, options.tabBarLabelStyle]}\n              allowFontScaling={options.tabBarAllowFontScaling}\n            >\n              {label}\n            </Text>\n          );\n        }\n\n        return label({ focused, color });\n      }}\n      renderBadge={({ route }) => {\n        const { tabBarBadge } = descriptors[route.key].options;\n\n        return tabBarBadge?.() ?? null;\n      }}\n      renderIndicator={({ navigationState: state, ...rest }) => {\n        return focusedOptions.tabBarIndicator ? (\n          focusedOptions.tabBarIndicator({\n            state: state as TabNavigationState<ParamListBase>,\n            ...rest,\n          })\n        ) : (\n          <TabBarIndicator navigationState={state} {...rest} />\n        );\n      }}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    height: 24,\n    width: 24,\n  },\n  label: {\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    fontSize: 13,\n    margin: 4,\n    backgroundColor: 'transparent',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}