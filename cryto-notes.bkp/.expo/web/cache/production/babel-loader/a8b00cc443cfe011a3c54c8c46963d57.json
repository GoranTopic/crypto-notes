{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";var _excluded=[\"timing\"];function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}function _extends(){_extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};return _extends.apply(this,arguments);}import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import PanResponder from\"react-native-web/dist/exports/PanResponder\";import Keyboard from\"react-native-web/dist/exports/Keyboard\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import I18nManager from\"react-native-web/dist/exports/I18nManager\";import View from\"react-native-web/dist/exports/View\";import useAnimatedValue from\"./useAnimatedValue\";var DEAD_ZONE=12;var DefaultTransitionSpec={timing:Animated.spring,stiffness:1000,damping:500,mass:3,overshootClamping:true};export default function PanResponderAdapter(_ref){var layout=_ref.layout,_ref$keyboardDismissM=_ref.keyboardDismissMode,keyboardDismissMode=_ref$keyboardDismissM===void 0?'auto':_ref$keyboardDismissM,_ref$swipeEnabled=_ref.swipeEnabled,swipeEnabled=_ref$swipeEnabled===void 0?true:_ref$swipeEnabled,navigationState=_ref.navigationState,onIndexChange=_ref.onIndexChange,onSwipeStart=_ref.onSwipeStart,onSwipeEnd=_ref.onSwipeEnd,children=_ref.children,style=_ref.style;var routes=navigationState.routes,index=navigationState.index;var panX=useAnimatedValue(0);var listenersRef=React.useRef([]);var navigationStateRef=React.useRef(navigationState);var layoutRef=React.useRef(layout);var onIndexChangeRef=React.useRef(onIndexChange);var currentIndexRef=React.useRef(index);var pendingIndexRef=React.useRef();var swipeVelocityThreshold=0.15;var swipeDistanceThreshold=layout.width/1.75;var jumpToIndex=React.useCallback(function(index){var offset=-index*layoutRef.current.width;var timing=DefaultTransitionSpec.timing,transitionConfig=_objectWithoutProperties(DefaultTransitionSpec,_excluded);Animated.parallel([timing(panX,_objectSpread(_objectSpread({},transitionConfig),{},{toValue:offset,useNativeDriver:false}))]).start(function(_ref2){var finished=_ref2.finished;if(finished){onIndexChangeRef.current(index);pendingIndexRef.current=undefined;}});pendingIndexRef.current=index;},[panX]);React.useEffect(function(){navigationStateRef.current=navigationState;layoutRef.current=layout;onIndexChangeRef.current=onIndexChange;});React.useEffect(function(){var offset=-navigationStateRef.current.index*layout.width;panX.setValue(offset);},[layout.width,panX]);React.useEffect(function(){if(keyboardDismissMode==='auto'){Keyboard.dismiss();}if(layout.width&&currentIndexRef.current!==index){currentIndexRef.current=index;jumpToIndex(index);}},[jumpToIndex,keyboardDismissMode,layout.width,index]);var isMovingHorizontally=function isMovingHorizontally(_,gestureState){return Math.abs(gestureState.dx)>Math.abs(gestureState.dy*2)&&Math.abs(gestureState.vx)>Math.abs(gestureState.vy*2);};var canMoveScreen=function canMoveScreen(event,gestureState){if(swipeEnabled===false){return false;}var diffX=I18nManager.isRTL?-gestureState.dx:gestureState.dx;return isMovingHorizontally(event,gestureState)&&(diffX>=DEAD_ZONE&&currentIndexRef.current>0||diffX<=-DEAD_ZONE&&currentIndexRef.current<routes.length-1);};var startGesture=function startGesture(){onSwipeStart===null||onSwipeStart===void 0?void 0:onSwipeStart();if(keyboardDismissMode==='on-drag'){Keyboard.dismiss();}panX.stopAnimation();panX.setOffset(panX._value);};var respondToGesture=function respondToGesture(_,gestureState){var diffX=I18nManager.isRTL?-gestureState.dx:gestureState.dx;if(diffX>0&&index<=0||diffX<0&&index>=routes.length-1){return;}if(layout.width){var position=(panX._offset+diffX)/-layout.width;var next=position>index?Math.ceil(position):Math.floor(position);if(next!==index){listenersRef.current.forEach(function(listener){return listener(next);});}}panX.setValue(diffX);};var finishGesture=function finishGesture(_,gestureState){panX.flattenOffset();onSwipeEnd===null||onSwipeEnd===void 0?void 0:onSwipeEnd();var currentIndex=typeof pendingIndexRef.current==='number'?pendingIndexRef.current:currentIndexRef.current;var nextIndex=currentIndex;if(Math.abs(gestureState.dx)>Math.abs(gestureState.dy)&&Math.abs(gestureState.vx)>Math.abs(gestureState.vy)&&(Math.abs(gestureState.dx)>swipeDistanceThreshold||Math.abs(gestureState.vx)>swipeVelocityThreshold)){nextIndex=Math.round(Math.min(Math.max(0,I18nManager.isRTL?currentIndex+gestureState.dx/Math.abs(gestureState.dx):currentIndex-gestureState.dx/Math.abs(gestureState.dx)),routes.length-1));currentIndexRef.current=nextIndex;}if(!isFinite(nextIndex)){nextIndex=currentIndex;}jumpToIndex(nextIndex);};var addEnterListener=React.useCallback(function(listener){listenersRef.current.push(listener);return function(){var index=listenersRef.current.indexOf(listener);if(index>-1){listenersRef.current.splice(index,1);}};},[]);var jumpTo=React.useCallback(function(key){var index=navigationStateRef.current.routes.findIndex(function(route){return route.key===key;});jumpToIndex(index);},[jumpToIndex]);var panResponder=PanResponder.create({onMoveShouldSetPanResponder:canMoveScreen,onMoveShouldSetPanResponderCapture:canMoveScreen,onPanResponderGrant:startGesture,onPanResponderMove:respondToGesture,onPanResponderTerminate:finishGesture,onPanResponderRelease:finishGesture,onPanResponderTerminationRequest:function onPanResponderTerminationRequest(){return true;}});var maxTranslate=layout.width*(routes.length-1);var translateX=Animated.multiply(panX.interpolate({inputRange:[-maxTranslate,0],outputRange:[-maxTranslate,0],extrapolate:'clamp'}),I18nManager.isRTL?-1:1);return children({position:layout.width?Animated.divide(panX,-layout.width):new Animated.Value(index),addEnterListener:addEnterListener,jumpTo:jumpTo,render:function render(children){return React.createElement(Animated.View,_extends({style:[styles.sheet,layout.width?{width:routes.length*layout.width,transform:[{translateX:translateX}]}:null,style]},panResponder.panHandlers),React.Children.map(children,function(child,i){var route=routes[i];var focused=i===index;return React.createElement(View,{key:route.key,style:layout.width?{width:layout.width}:focused?StyleSheet.absoluteFill:null},focused||layout.width?child:null);}));}});}var styles=StyleSheet.create({sheet:{flex:1,flexDirection:'row',alignItems:'stretch'}});","map":{"version":3,"sources":["PanResponderAdapter.tsx"],"names":["DEAD_ZONE","DefaultTransitionSpec","timing","Animated","stiffness","damping","mass","overshootClamping","keyboardDismissMode","swipeEnabled","style","index","panX","useAnimatedValue","listenersRef","React","navigationStateRef","layoutRef","onIndexChangeRef","currentIndexRef","pendingIndexRef","swipeVelocityThreshold","swipeDistanceThreshold","layout","jumpToIndex","offset","transitionConfig","toValue","useNativeDriver","finished","Keyboard","isMovingHorizontally","Math","gestureState","canMoveScreen","diffX","I18nManager","routes","startGesture","onSwipeStart","respondToGesture","position","next","listener","finishGesture","onSwipeEnd","currentIndex","nextIndex","isFinite","addEnterListener","jumpTo","key","route","panResponder","onMoveShouldSetPanResponder","onMoveShouldSetPanResponderCapture","onPanResponderGrant","onPanResponderMove","onPanResponderTerminate","onPanResponderRelease","onPanResponderTerminationRequest","maxTranslate","translateX","inputRange","outputRange","extrapolate","children","render","styles","width","transform","focused","i","StyleSheet","sheet","flex","flexDirection","alignItems"],"mappings":"6sCAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,wXAWA,MAAA,CAAA,gBAAA,0BA6BA,GAAMA,CAAAA,SAAS,CAAf,EAAA,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,CAC5BC,MAAM,CAAEC,QAAQ,CADY,MAAA,CAE5BC,SAAS,CAFmB,IAAA,CAG5BC,OAAO,CAHqB,GAAA,CAI5BC,IAAI,CAJwB,CAAA,CAK5BC,iBAAiB,CAAE,IALS,CAA9B,CAQA,cAAe,SAAA,CAAA,mBAAA,MAUF,IAVgD,CAAA,MAUhD,MAVgD,MAUhD,4BARXC,mBAQW,CARXA,mBAQW,gCAVgD,MAUhD,8CAPXC,YAOW,CAPXA,YAOW,4BAVgD,IAUhD,mBAVgD,eAUhD,MAVgD,eAUhD,CAVgD,aAUhD,MAVgD,aAUhD,CAVgD,YAUhD,MAVgD,YAUhD,CAVgD,UAUhD,MAVgD,UAUhD,CAVgD,QAUhD,MAVgD,QAUhD,CADXC,KACW,MADXA,KACW,CACX,GAAM,CAAA,MAAN,CAAA,eAAA,CAAM,MAAN,CAAgBC,KAAhB,CAAA,eAAA,CAAgBA,KAAhB,CAEA,GAAMC,CAAAA,IAAI,CAAGC,gBAAgB,CAA7B,CAA6B,CAA7B,CAEA,GAAMC,CAAAA,YAAY,CAAGC,KAAK,CAALA,MAAAA,CAArB,EAAqBA,CAArB,CAEA,GAAMC,CAAAA,kBAAkB,CAAGD,KAAK,CAALA,MAAAA,CAA3B,eAA2BA,CAA3B,CACA,GAAME,CAAAA,SAAS,CAAGF,KAAK,CAALA,MAAAA,CAAlB,MAAkBA,CAAlB,CACA,GAAMG,CAAAA,gBAAgB,CAAGH,KAAK,CAALA,MAAAA,CAAzB,aAAyBA,CAAzB,CAEA,GAAMI,CAAAA,eAAe,CAAGJ,KAAK,CAALA,MAAAA,CAAxB,KAAwBA,CAAxB,CACA,GAAMK,CAAAA,eAAe,CAAGL,KAAK,CAA7B,MAAwBA,EAAxB,CAEA,GAAMM,CAAAA,sBAAsB,CAA5B,IAAA,CACA,GAAMC,CAAAA,sBAAsB,CAAGC,MAAM,CAANA,KAAAA,CAA/B,IAAA,CAEA,GAAMC,CAAAA,WAAW,CAAG,KAAK,CAAL,WAAA,CACjBb,SAAAA,KAAD,CAAmB,CACjB,GAAMc,CAAAA,MAAM,CAAG,CAAA,KAAA,CAASR,SAAS,CAATA,OAAAA,CAAxB,KAAA,CAEA,GAAM,CAAA,MAAN,CAAA,qBAAA,CAAM,MAAN,CAAmBS,gBAAnB,0BAAA,qBAAA,YAEAvB,QAAQ,CAARA,QAAAA,CAAkB,CAChBD,MAAM,CAAA,IAAA,gCAAO,gBAAP,MAEJyB,OAAO,CAFI,MAAP,CAGJC,eAAe,CAAE,KAHb,GADU,CAAlBzB,EAAAA,KAAAA,CAMS,eAAkB,IAAf0B,CAAAA,QAAe,OAAfA,QAAe,CACzB,GAAA,QAAA,CAAc,CACZX,gBAAgB,CAAhBA,OAAAA,CAAAA,KAAAA,EACAE,eAAe,CAAfA,OAAAA,CAAAA,SAAAA,CACD,CAVHjB,CAAAA,EAaAiB,eAAe,CAAfA,OAAAA,CAAAA,KAAAA,CAnBgB,CAAA,CAqBlB,CArBF,IAqBE,CArBkB,CAApB,CAwBAL,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpBC,kBAAkB,CAAlBA,OAAAA,CAAAA,eAAAA,CACAC,SAAS,CAATA,OAAAA,CAAAA,MAAAA,CACAC,gBAAgB,CAAhBA,OAAAA,CAAAA,aAAAA,CAHFH,CAAAA,EAMAA,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAMU,CAAAA,MAAM,CAAG,CAACT,kBAAkB,CAAlBA,OAAAA,CAAD,KAAA,CAAoCO,MAAM,CAAzD,KAAA,CAEAX,IAAI,CAAJA,QAAAA,CAAAA,MAAAA,EAHFG,CAAAA,CAIG,CAACQ,MAAM,CAAP,KAAA,CAJHR,IAIG,CAJHA,EAMAA,KAAK,CAALA,SAAAA,CAAgB,UAAM,CACpB,GAAIP,mBAAmB,GAAvB,MAAA,CAAoC,CAClCsB,QAAQ,CAARA,OAAAA,GACD,CAED,GAAIP,MAAM,CAANA,KAAAA,EAAgBJ,eAAe,CAAfA,OAAAA,GAApB,KAAA,CAAuD,CACrDA,eAAe,CAAfA,OAAAA,CAAAA,KAAAA,CACAK,WAAW,CAAXA,KAAW,CAAXA,CACD,CARHT,CAAAA,CASG,CAAA,WAAA,CAAA,mBAAA,CAAmCQ,MAAM,CAAzC,KAAA,CATHR,KASG,CATHA,EAWA,GAAMgB,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAAA,CAAA,CAAA,YAAA,CAGxB,CACH,MACEC,CAAAA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAArBD,EAAAA,EAA4BA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAAZA,EAAAA,CAArCD,CAA4BA,CAA5BA,EACAA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAArBD,EAAAA,EAA4BA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAAZA,EAAAA,CAFvC,CAE8BD,CAF9B,CAJF,CAAA,CAUA,GAAME,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAA,KAAA,CAAA,YAAA,CAGjB,CACH,GAAIzB,YAAY,GAAhB,KAAA,CAA4B,CAC1B,MAAA,MAAA,CACD,CAED,GAAM0B,CAAAA,KAAK,CAAGC,WAAW,CAAXA,KAAAA,CAAoB,CAACH,YAAY,CAAjCG,EAAAA,CAAuCH,YAAY,CAAjE,EAAA,CAEA,MACEF,CAAAA,oBAAoB,CAAA,KAAA,CAApBA,YAAoB,CAApBA,GACEI,KAAK,EAALA,SAAAA,EAAsBhB,eAAe,CAAfA,OAAAA,CAAvB,CAACgB,EACCA,KAAK,EAAI,CAATA,SAAAA,EAAuBhB,eAAe,CAAfA,OAAAA,CAA0BkB,MAAM,CAANA,MAAAA,CAHtD,CACEN,CADF,CAVF,CAAA,CAiBA,GAAMO,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzBC,YAAY,GAAZA,IAAAA,EAAAA,YAAY,GAAA,IAAZA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,YAAY,EAAZA,CAEA,GAAI/B,mBAAmB,GAAvB,SAAA,CAAuC,CACrCsB,QAAQ,CAARA,OAAAA,GACD,CAEDlB,IAAI,CAPqB,aAOzBA,GAEAA,IAAI,CAAJA,SAAAA,CAAeA,IAAI,CAAnBA,MAAAA,EATF,CAAA,CAYA,GAAM4B,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAAA,CAAA,CAAA,YAAA,CAGpB,CACH,GAAML,CAAAA,KAAK,CAAGC,WAAW,CAAXA,KAAAA,CAAoB,CAACH,YAAY,CAAjCG,EAAAA,CAAuCH,YAAY,CAAjE,EAAA,CAEA,GAEGE,KAAK,CAALA,CAAAA,EAAaxB,KAAK,EAAnB,CAACwB,EAEAA,KAAK,CAALA,CAAAA,EAAaxB,KAAK,EAAI0B,MAAM,CAANA,MAAAA,CAJzB,CAAA,CAKE,CACA,OACD,CAED,GAAId,MAAM,CAAV,KAAA,CAAkB,CAEhB,GAAMkB,CAAAA,QAAQ,CAAG,CAAC7B,IAAI,CAAJA,OAAAA,CAAD,KAAA,EAAyB,CAACW,MAAM,CAAjD,KAAA,CACA,GAAMmB,CAAAA,IAAI,CACRD,QAAQ,CAARA,KAAAA,CAAmBT,IAAI,CAAJA,IAAAA,CAAnBS,QAAmBT,CAAnBS,CAAyCT,IAAI,CAAJA,KAAAA,CAD3C,QAC2CA,CAD3C,CAGA,GAAIU,IAAI,GAAR,KAAA,CAAoB,CAClB5B,YAAY,CAAZA,OAAAA,CAAAA,OAAAA,CAA8B6B,SAAAA,QAAD,QAAcA,CAAAA,QAAQ,CAAnD7B,IAAmD,CAAtB,EAA7BA,EACD,CACF,CAEDF,IAAI,CAAJA,QAAAA,CAAAA,KAAAA,EA1BF,CAAA,CA6BA,GAAMgC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAA,CAAA,CAAA,YAAA,CAGjB,CACHhC,IAAI,CAAJA,aAAAA,GAEAiC,UAAU,GAAVA,IAAAA,EAAAA,UAAU,GAAA,IAAVA,EAAAA,CAAAA,IAAAA,EAAAA,CAAAA,UAAU,EAAVA,CAEA,GAAMC,CAAAA,YAAY,CAChB,MAAO1B,CAAAA,eAAe,CAAtB,OAAA,GAAA,QAAA,CACIA,eAAe,CADnB,OAAA,CAEID,eAAe,CAHrB,OAAA,CAKA,GAAI4B,CAAAA,SAAS,CAAb,YAAA,CAEA,GACEf,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAArBD,EAAAA,EAA4BA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAAjDD,EAA4BA,CAA5BA,EACAA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAArBD,EAAAA,EAA4BA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CADjDD,EAC4BA,CAD5BA,GAECA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAArBD,EAAAA,EAAAA,sBAAAA,EACCA,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAArBD,EAAAA,EAJJ,sBACEA,CADF,CAKE,CACAe,SAAS,CAAGf,IAAI,CAAJA,KAAAA,CACVA,IAAI,CAAJA,GAAAA,CACEA,IAAI,CAAJA,GAAAA,CAAAA,CAAAA,CAEEI,WAAW,CAAXA,KAAAA,CACIU,YAAY,CAAGb,YAAY,CAAZA,EAAAA,CAAkBD,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAD1DG,EACqCJ,CADrCI,CAEIU,YAAY,CAAGb,YAAY,CAAZA,EAAAA,CAAkBD,IAAI,CAAJA,GAAAA,CAASC,YAAY,CAL9DD,EAKyCA,CAJvCA,CADFA,CAOEK,MAAM,CAANA,MAAAA,CARJU,CACEf,CADUA,CAAZe,CAYA5B,eAAe,CAAfA,OAAAA,CAAAA,SAAAA,CACD,CAED,GAAI,CAAC6B,QAAQ,CAAb,SAAa,CAAb,CAA0B,CACxBD,SAAS,CAATA,YAAAA,CACD,CAEDvB,WAAW,CAAXA,SAAW,CAAXA,CA5KS,CAoIX,CA4CA,GAAMyB,CAAAA,gBAAgB,CAAG,KAAK,CAAL,WAAA,CAAmBN,SAAAA,QAAD,CAAwB,CACjE7B,YAAY,CAAZA,OAAAA,CAAAA,IAAAA,CAAAA,QAAAA,EAEA,MAAO,WAAM,CACX,GAAMH,CAAAA,KAAK,CAAGG,YAAY,CAAZA,OAAAA,CAAAA,OAAAA,CAAd,QAAcA,CAAd,CAEA,GAAIH,KAAK,CAAG,CAAZ,CAAA,CAAgB,CACdG,YAAY,CAAZA,OAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,CAAAA,EACD,CALH,CAAA,CAHuB,CAAA,CAAzB,EAAyB,CAAzB,CAYA,GAAMoC,CAAAA,MAAM,CAAG,KAAK,CAAL,WAAA,CACZC,SAAAA,GAAD,CAAiB,CACf,GAAMxC,CAAAA,KAAK,CAAGK,kBAAkB,CAAlBA,OAAAA,CAAAA,MAAAA,CAAAA,SAAAA,CACXoC,SAAAA,KAAD,QAA4BA,CAAAA,KAAK,CAALA,GAAAA,GAD9B,GACE,EADYpC,CAAd,CAIAQ,WAAW,CAAXA,KAAW,CAAXA,CANW,CAAA,CAQb,CARF,WAQE,CARa,CAAf,CAWA,GAAM6B,CAAAA,YAAY,CAAG,YAAY,CAAZ,MAAA,CAAoB,CACvCC,2BAA2B,CADY,aAAA,CAEvCC,kCAAkC,CAFK,aAAA,CAGvCC,mBAAmB,CAHoB,YAAA,CAIvCC,kBAAkB,CAJqB,gBAAA,CAKvCC,uBAAuB,CALgB,aAAA,CAMvCC,qBAAqB,CANkB,aAAA,CAOvCC,gCAAgC,CAAE,kDAAM,KAAN,EAPK,CAApB,CAArB,CAUA,GAAMC,CAAAA,YAAY,CAAGtC,MAAM,CAANA,KAAAA,EAAgBc,MAAM,CAANA,MAAAA,CAArC,CAAqBd,CAArB,CACA,GAAMuC,CAAAA,UAAU,CAAG,QAAQ,CAAR,QAAA,CACjB,IAAI,CAAJ,WAAA,CAAiB,CACfC,UAAU,CAAE,CAAC,CAAD,YAAA,CADG,CACH,CADG,CAEfC,WAAW,CAAE,CAAC,CAAD,YAAA,CAFE,CAEF,CAFE,CAGfC,WAAW,CAAE,OAHE,CAAjB,CADiB,CAMjB7B,WAAW,CAAXA,KAAAA,CAAoB,CAApBA,CAAAA,CANF,CAAmB,CAAnB,CASA,MAAO8B,CAAAA,QAAQ,CAAC,CACdzB,QAAQ,CAAElB,MAAM,CAANA,KAAAA,CACNpB,QAAQ,CAARA,MAAAA,CAAAA,IAAAA,CAAsB,CAACoB,MAAM,CADvBA,KACNpB,CADMoB,CAEN,GAAIpB,CAAAA,QAAQ,CAAZ,KAAA,CAHU,KAGV,CAHU,CAId8C,gBAJc,CAIdA,gBAJc,CAKdC,MALc,CAKdA,MALc,CAMdiB,MAAM,CAAGD,gBAAAA,QAAD,QACN,CAAA,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,CAAA,QAAA,CAAA,CACE,KAAK,CAAE,CACLE,MAAM,CADD,KAAA,CAEL,MAAM,CAAN,KAAA,CACI,CACEC,KAAK,CAAEhC,MAAM,CAANA,MAAAA,CAAgBd,MAAM,CAD/B,KAAA,CAEE+C,SAAS,CAAE,CAAC,CAAER,UAAAA,CAAAA,UAAF,CAAD,CAFb,CADJ,CAFK,IAAA,CAAA,KAAA,CADT,CAAA,CAWMT,YAAY,CAXlB,WAAA,CAAA,CAaG,KAAK,CAAL,QAAA,CAAA,GAAA,CAAA,QAAA,CAA6B,SAAA,KAAA,CAAA,CAAA,CAAc,CAC1C,GAAMD,CAAAA,KAAK,CAAGf,MAAM,CAApB,CAAoB,CAApB,CACA,GAAMkC,CAAAA,OAAO,CAAGC,CAAC,GAAjB,KAAA,CAEA,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CACE,GAAG,CAAEpB,KAAK,CADZ,GAAA,CAEE,KAAK,CACH,MAAM,CAAN,KAAA,CACI,CAAEiB,KAAK,CAAE9C,MAAM,CAAC8C,KAAhB,CADJ,CAEIE,OAAO,CACPE,UAAU,CADH,YAAA,CAEP,IAPR,CAAA,CAUGF,OAAO,EAAIhD,MAAM,CAAjBgD,KAAAA,CAAAA,KAAAA,CAXL,IACE,CADF,CAjBJ,CAaG,CAbH,CADM,EANM,CAAD,CAAf,CA0CD,CAED,GAAMH,CAAAA,MAAM,CAAG,UAAU,CAAV,MAAA,CAAkB,CAC/BM,KAAK,CAAE,CACLC,IAAI,CADC,CAAA,CAELC,aAAa,CAFR,KAAA,CAGLC,UAAU,CAAE,SAHP,CADwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  PanResponder,\n  Keyboard,\n  StyleSheet,\n  GestureResponderEvent,\n  PanResponderGestureState,\n  I18nManager,\n  View,\n} from 'react-native';\nimport useAnimatedValue from './useAnimatedValue';\nimport type {\n  NavigationState,\n  Route,\n  Layout,\n  EventEmitterProps,\n  PagerProps,\n  Listener,\n} from './types';\n\ntype Props<T extends Route> = PagerProps & {\n  layout: Layout;\n  onIndexChange: (index: number) => void;\n  navigationState: NavigationState<T>;\n  children: (\n    props: EventEmitterProps & {\n      // Animated value which represents the state of current index\n      // It can include fractional digits as it represents the intermediate value\n      position: Animated.AnimatedInterpolation;\n      // Function to actually render the content of the pager\n      // The parent component takes care of rendering\n      render: (children: React.ReactNode) => React.ReactNode;\n      // Callback to call when switching the tab\n      // The tab switch animation is performed even if the index in state is unchanged\n      jumpTo: (key: string) => void;\n    }\n  ) => React.ReactElement;\n};\n\nconst DEAD_ZONE = 12;\n\nconst DefaultTransitionSpec = {\n  timing: Animated.spring,\n  stiffness: 1000,\n  damping: 500,\n  mass: 3,\n  overshootClamping: true,\n};\n\nexport default function PanResponderAdapter<T extends Route>({\n  layout,\n  keyboardDismissMode = 'auto',\n  swipeEnabled = true,\n  navigationState,\n  onIndexChange,\n  onSwipeStart,\n  onSwipeEnd,\n  children,\n  style,\n}: Props<T>) {\n  const { routes, index } = navigationState;\n\n  const panX = useAnimatedValue(0);\n\n  const listenersRef = React.useRef<Listener[]>([]);\n\n  const navigationStateRef = React.useRef(navigationState);\n  const layoutRef = React.useRef(layout);\n  const onIndexChangeRef = React.useRef(onIndexChange);\n\n  const currentIndexRef = React.useRef(index);\n  const pendingIndexRef = React.useRef<number>();\n\n  const swipeVelocityThreshold = 0.15;\n  const swipeDistanceThreshold = layout.width / 1.75;\n\n  const jumpToIndex = React.useCallback(\n    (index: number) => {\n      const offset = -index * layoutRef.current.width;\n\n      const { timing, ...transitionConfig } = DefaultTransitionSpec;\n\n      Animated.parallel([\n        timing(panX, {\n          ...transitionConfig,\n          toValue: offset,\n          useNativeDriver: false,\n        }),\n      ]).start(({ finished }) => {\n        if (finished) {\n          onIndexChangeRef.current(index);\n          pendingIndexRef.current = undefined;\n        }\n      });\n\n      pendingIndexRef.current = index;\n    },\n    [panX]\n  );\n\n  React.useEffect(() => {\n    navigationStateRef.current = navigationState;\n    layoutRef.current = layout;\n    onIndexChangeRef.current = onIndexChange;\n  });\n\n  React.useEffect(() => {\n    const offset = -navigationStateRef.current.index * layout.width;\n\n    panX.setValue(offset);\n  }, [layout.width, panX]);\n\n  React.useEffect(() => {\n    if (keyboardDismissMode === 'auto') {\n      Keyboard.dismiss();\n    }\n\n    if (layout.width && currentIndexRef.current !== index) {\n      currentIndexRef.current = index;\n      jumpToIndex(index);\n    }\n  }, [jumpToIndex, keyboardDismissMode, layout.width, index]);\n\n  const isMovingHorizontally = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    return (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy * 2) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy * 2)\n    );\n  };\n\n  const canMoveScreen = (\n    event: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    if (swipeEnabled === false) {\n      return false;\n    }\n\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    return (\n      isMovingHorizontally(event, gestureState) &&\n      ((diffX >= DEAD_ZONE && currentIndexRef.current > 0) ||\n        (diffX <= -DEAD_ZONE && currentIndexRef.current < routes.length - 1))\n    );\n  };\n\n  const startGesture = () => {\n    onSwipeStart?.();\n\n    if (keyboardDismissMode === 'on-drag') {\n      Keyboard.dismiss();\n    }\n\n    panX.stopAnimation();\n    // @ts-expect-error: _value is private, but docs use it as well\n    panX.setOffset(panX._value);\n  };\n\n  const respondToGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    const diffX = I18nManager.isRTL ? -gestureState.dx : gestureState.dx;\n\n    if (\n      // swiping left\n      (diffX > 0 && index <= 0) ||\n      // swiping right\n      (diffX < 0 && index >= routes.length - 1)\n    ) {\n      return;\n    }\n\n    if (layout.width) {\n      // @ts-expect-error: _offset is private, but docs use it as well\n      const position = (panX._offset + diffX) / -layout.width;\n      const next =\n        position > index ? Math.ceil(position) : Math.floor(position);\n\n      if (next !== index) {\n        listenersRef.current.forEach((listener) => listener(next));\n      }\n    }\n\n    panX.setValue(diffX);\n  };\n\n  const finishGesture = (\n    _: GestureResponderEvent,\n    gestureState: PanResponderGestureState\n  ) => {\n    panX.flattenOffset();\n\n    onSwipeEnd?.();\n\n    const currentIndex =\n      typeof pendingIndexRef.current === 'number'\n        ? pendingIndexRef.current\n        : currentIndexRef.current;\n\n    let nextIndex = currentIndex;\n\n    if (\n      Math.abs(gestureState.dx) > Math.abs(gestureState.dy) &&\n      Math.abs(gestureState.vx) > Math.abs(gestureState.vy) &&\n      (Math.abs(gestureState.dx) > swipeDistanceThreshold ||\n        Math.abs(gestureState.vx) > swipeVelocityThreshold)\n    ) {\n      nextIndex = Math.round(\n        Math.min(\n          Math.max(\n            0,\n            I18nManager.isRTL\n              ? currentIndex + gestureState.dx / Math.abs(gestureState.dx)\n              : currentIndex - gestureState.dx / Math.abs(gestureState.dx)\n          ),\n          routes.length - 1\n        )\n      );\n\n      currentIndexRef.current = nextIndex;\n    }\n\n    if (!isFinite(nextIndex)) {\n      nextIndex = currentIndex;\n    }\n\n    jumpToIndex(nextIndex);\n  };\n\n  // TODO: use the listeners\n  const addEnterListener = React.useCallback((listener: Listener) => {\n    listenersRef.current.push(listener);\n\n    return () => {\n      const index = listenersRef.current.indexOf(listener);\n\n      if (index > -1) {\n        listenersRef.current.splice(index, 1);\n      }\n    };\n  }, []);\n\n  const jumpTo = React.useCallback(\n    (key: string) => {\n      const index = navigationStateRef.current.routes.findIndex(\n        (route: { key: string }) => route.key === key\n      );\n\n      jumpToIndex(index);\n    },\n    [jumpToIndex]\n  );\n\n  const panResponder = PanResponder.create({\n    onMoveShouldSetPanResponder: canMoveScreen,\n    onMoveShouldSetPanResponderCapture: canMoveScreen,\n    onPanResponderGrant: startGesture,\n    onPanResponderMove: respondToGesture,\n    onPanResponderTerminate: finishGesture,\n    onPanResponderRelease: finishGesture,\n    onPanResponderTerminationRequest: () => true,\n  });\n\n  const maxTranslate = layout.width * (routes.length - 1);\n  const translateX = Animated.multiply(\n    panX.interpolate({\n      inputRange: [-maxTranslate, 0],\n      outputRange: [-maxTranslate, 0],\n      extrapolate: 'clamp',\n    }),\n    I18nManager.isRTL ? -1 : 1\n  );\n\n  return children({\n    position: layout.width\n      ? Animated.divide(panX, -layout.width)\n      : new Animated.Value(index),\n    addEnterListener,\n    jumpTo,\n    render: (children) => (\n      <Animated.View\n        style={[\n          styles.sheet,\n          layout.width\n            ? {\n                width: routes.length * layout.width,\n                transform: [{ translateX }],\n              }\n            : null,\n          style,\n        ]}\n        {...panResponder.panHandlers}\n      >\n        {React.Children.map(children, (child, i) => {\n          const route = routes[i];\n          const focused = i === index;\n\n          return (\n            <View\n              key={route.key}\n              style={\n                layout.width\n                  ? { width: layout.width }\n                  : focused\n                  ? StyleSheet.absoluteFill\n                  : null\n              }\n            >\n              {focused || layout.width ? child : null}\n            </View>\n          );\n        })}\n      </Animated.View>\n    ),\n  });\n}\n\nconst styles = StyleSheet.create({\n  sheet: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'stretch',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}