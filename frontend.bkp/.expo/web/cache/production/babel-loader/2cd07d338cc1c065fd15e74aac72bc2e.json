{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}import React from'react';import PropTypes from'prop-types';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import{Surface,Group}from'@react-native-community/art';import AnimatedCircle from\"../animated/AnimatedCircle\";import{color}from\"../const\";var RotationHoleLoader=function(_React$PureComponent){_inherits(RotationHoleLoader,_React$PureComponent);var _super=_createSuper(RotationHoleLoader);function RotationHoleLoader(){var _this;_classCallCheck(this,RotationHoleLoader);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={degree:new Animated.Value(0)};_this._animation=function(){Animated.sequence([Animated.timing(_this.state.degree,{toValue:360,duration:_this.props.rotationSpeed,easing:Easing.linear,useNativeDriver:false})]).start(function(){if(!_this.unmounted){_this.state.degree.setValue(0);_this._animation();}});};return _this;}_createClass(RotationHoleLoader,[{key:\"componentDidMount\",value:function componentDidMount(){this._animation();}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.unmounted=true;}},{key:\"render\",value:function render(){var _this$props=this.props,size=_this$props.size,color=_this$props.color,strokeWith=_this$props.strokeWith;var degree=this.state.degree.interpolate({inputRange:[0,360],outputRange:['0deg','360deg']});return React.createElement(Animated.View,{style:{transform:[{rotate:degree}],backgroundColor:'rgba(0,0,0,0)',width:size+strokeWith*2,height:size+strokeWith*2}},React.createElement(Surface,{width:size+strokeWith*2,height:size+strokeWith*2},React.createElement(Group,null,React.createElement(AnimatedCircle,{stroke:color,opacity:0.3,strokeWidth:strokeWith,radius:size,x:size/2+strokeWith,y:size/2+strokeWith}),React.createElement(AnimatedCircle,{fill:color,radius:strokeWith,x:size/2+strokeWith,y:strokeWith}))));}}]);return RotationHoleLoader;}(React.PureComponent);RotationHoleLoader.propTypes={size:PropTypes.number,color:PropTypes.string,strokeWith:PropTypes.number,rotationSpeed:PropTypes.number};RotationHoleLoader.defaultProps={size:40,color:color,rotationSpeed:800,strokeWith:8};export{RotationHoleLoader as default};","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/node_modules/react-native-indicator/lib/loader/RotationHoleLoader.js"],"names":["React","PropTypes","Surface","Group","AnimatedCircle","color","RotationHoleLoader","state","degree","Animated","Value","_animation","sequence","timing","toValue","duration","props","rotationSpeed","easing","Easing","linear","useNativeDriver","start","unmounted","setValue","size","strokeWith","interpolate","inputRange","outputRange","transform","rotate","backgroundColor","width","height","PureComponent","propTypes","number","string","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, Easing } from 'react-native';\nimport { Surface, Group } from '@react-native-community/art';\nimport AnimatedCircle from '../animated/AnimatedCircle';\nimport { color } from '../const';\n\nexport default class RotationHoleLoader extends React.PureComponent {\n\tstatic propTypes = {\n\t\tsize: PropTypes.number,\n\t\tcolor: PropTypes.string,\n\t\tstrokeWith: PropTypes.number,\n\t\trotationSpeed: PropTypes.number\n\t};\n\n\tstatic defaultProps = {\n\t\tsize: 40,\n\t\tcolor,\n\t\trotationSpeed: 800,\n\t\tstrokeWith: 8\n\t};\n\n\tstate = {\n\t\tdegree: new Animated.Value(0)\n\t};\n\n\tcomponentDidMount() {\n\t\tthis._animation();\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.unmounted = true;\n\t}\n\n\t_animation = () => {\n\t\tAnimated.sequence([\n\t\t\tAnimated.timing(this.state.degree, {\n\t\t\t\ttoValue: 360,\n\t\t\t\tduration: this.props.rotationSpeed,\n\t\t\t\teasing: Easing.linear,\n\t\t\t\tuseNativeDriver: false\n\t\t\t})\n\t\t]).start(() => {\n\t\t\tif (!this.unmounted) {\n\t\t\t\tthis.state.degree.setValue(0);\n\t\t\t\tthis._animation();\n\t\t\t}\n\t\t});\n\t};\n\n\trender() {\n\t\tconst { size, color, strokeWith } = this.props;\n\t\tconst degree = this.state.degree.interpolate({\n\t\t\tinputRange: [0, 360],\n\t\t\toutputRange: ['0deg', '360deg']\n\t\t});\n\t\treturn (\n\t\t\t<Animated.View\n\t\t\t\tstyle={{\n\t\t\t\t\ttransform: [{ rotate: degree }],\n\t\t\t\t\tbackgroundColor: 'rgba(0,0,0,0)',\n\t\t\t\t\twidth: size + strokeWith * 2,\n\t\t\t\t\theight: size + strokeWith * 2\n\t\t\t\t}}>\n\t\t\t\t<Surface width={size + strokeWith * 2} height={size + strokeWith * 2}>\n\t\t\t\t\t<Group>\n\t\t\t\t\t\t<AnimatedCircle\n\t\t\t\t\t\t\tstroke={color}\n\t\t\t\t\t\t\topacity={0.3}\n\t\t\t\t\t\t\tstrokeWidth={strokeWith}\n\t\t\t\t\t\t\tradius={size}\n\t\t\t\t\t\t\tx={size / 2 + strokeWith}\n\t\t\t\t\t\t\ty={size / 2 + strokeWith}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AnimatedCircle\n\t\t\t\t\t\t\tfill={color}\n\t\t\t\t\t\t\tradius={strokeWith}\n\t\t\t\t\t\t\tx={size / 2 + strokeWith}\n\t\t\t\t\t\t\ty={strokeWith}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Group>\n\t\t\t\t</Surface>\n\t\t\t</Animated.View>\n\t\t);\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}