{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import _regeneratorRuntime from\"@babel/runtime/regenerator\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);enumerableOnly&&(symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;})),keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=null!=arguments[i]?arguments[i]:{};i%2?ownKeys(Object(source),!0).forEach(function(key){_defineProperty(target,key,source[key]);}):Object.getOwnPropertyDescriptors?Object.defineProperties(target,Object.getOwnPropertyDescriptors(source)):ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}return target;}import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Text from\"react-native-web/dist/exports/Text\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import React,{useState}from'react';import{StatusBar}from'expo-status-bar';import{SafeAreaProvider,SafeAreaView}from'react-native-safe-area-context';import{connect}from'react-redux';import{mapStateToProps,mapDispatchToProps}from\"../state/mappers.js\";import{successToast,errorToast}from\"../components/Toaster.js\";import{signup}from\"../queries/auth\";import LoadingButton from\"../components/buttons/LoadingButton.js\";import ValidatingTextInput from\"../components/text-inputs/ValidatingTextInput.js\";import PasswordTextInput from\"../components/text-inputs/PasswordTextInput.js\";import Divider from'react-native-divider';import Button from\"../components/buttons/Button.js\";import colors from\"../config/colors.js\";var SignupScreen=function SignupScreen(_ref){var _errors$username,_errors$firstname,_errors$lastname,_errors$email,_errors$mobileNumber,_errors$password;var signupUser=_ref.signupUser,navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),errors=_useState2[0],setErrors=_useState2[1];var _useState3=useState(\"tim4\"),_useState4=_slicedToArray(_useState3,2),username=_useState4[0],setUsername=_useState4[1];var _useState5=useState(\"Timothy\"),_useState6=_slicedToArray(_useState5,2),firstname=_useState6[0],setFirstname=_useState6[1];var _useState7=useState(\"Sanchez\"),_useState8=_slicedToArray(_useState7,2),lastname=_useState8[0],setLastname=_useState8[1];var _useState9=useState(\"timothySanchez@email.com\"),_useState10=_slicedToArray(_useState9,2),email=_useState10[0],setEmail=_useState10[1];var _useState11=useState(\"17863403679\"),_useState12=_slicedToArray(_useState11,2),phone=_useState12[0],setPhone=_useState12[1];var _useState13=useState(\"SuperSecret1\"),_useState14=_slicedToArray(_useState13,2),password=_useState14[0],setPassword=_useState14[1];var _useState15=useState(\"SuperSecret1\"),_useState16=_slicedToArray(_useState15,2),confirmPassword=_useState16[0],setConfirmPassword=_useState16[1];var parseErrors=function parseErrors(errors){var parsedErros={};errors.forEach(function(err){return parsedErros[err.param]={value:err.value,msg:err.msg};});setErrors(parsedErros);return parsedErros;};var handleSubmitForm=function handleSubmitForm(){var user;return _regeneratorRuntime.async(function handleSubmitForm$(_context){while(1){switch(_context.prev=_context.next){case 0:user={username:username,firstname:firstname,lastname:lastname,email:email,mobileNumber:phone,password:password};_context.next=3;return _regeneratorRuntime.awrap(signup(user).then(function(result){successToast({text1:\"Signed up as \"+user.username});signupUser(_objectSpread(_objectSpread({},user),{},{cookie:result.cookie}));}).catch(function(err){console.log('got this error');console.log(err);if(err.response){if(err.response.data.errors)parseErrors(err.response.data.errors);}else if(err.message)errorToast({text1:err.message});}));case 3:case\"end\":return _context.stop();}}},null,null,null,Promise);};return React.createElement(ScrollView,{style:styles.container},React.createElement(StatusBar,{style:\"auto\"}),React.createElement(SafeAreaView,null,React.createElement(Text,{style:styles.titleFont},\"Join the Ayllu\"),React.createElement(Text,{style:styles.translationFont},\"( Family )\"),React.createElement(ValidatingTextInput,{styleTextInput:styles.input,styleContainer:styles.inputContainer,styleErrorText:styles.errorMsg,onChangeText:setUsername,matches:'username',placeholder:\"username\",showError:errors.username?true:false,error:((_errors$username=errors.username)==null?void 0:_errors$username.msg)||\"Invaild username\",autoCapitalize:\"none\",autoCorrect:false,autoComplete:'username',blurOnSubmit:true,value:username}),React.createElement(ValidatingTextInput,{styleTextInput:styles.input,styleContainer:styles.inputContainer,styleErrorText:styles.errorMsg,onChangeText:setFirstname,placeholder:\"firstname\",showError:errors.firstname?true:false,error:((_errors$firstname=errors.firstname)==null?void 0:_errors$firstname.msg)||\"Invaild firstname\",autoComplete:'name-given',autoCorrect:false,autoCapitalize:\"none\",value:firstname}),React.createElement(ValidatingTextInput,{styleTextInput:styles.input,styleContainer:styles.inputContainer,styleErrorText:styles.errorMsg,onChangeText:setLastname,placeholder:\"lastname\",showError:errors.lastname?true:false,error:((_errors$lastname=errors.lastname)==null?void 0:_errors$lastname.msg)||\"Invaild lastname\",autoComplete:'name-family',autoCorrect:false,autoCapitalize:\"none\",value:lastname}),React.createElement(ValidatingTextInput,{styleTextInput:styles.input,styleContainer:styles.inputContainer,styleErrorText:styles.errorMsg,onChangeText:setEmail,error:\"most be valid email\",placeholder:\"email\",showError:errors.email?true:false,error:((_errors$email=errors.email)==null?void 0:_errors$email.msg)||\"Invaild email\",keyboardType:\"email-address\",autoComplete:'email',isEmail:true,autoCapitalize:\"none\",value:email}),React.createElement(ValidatingTextInput,{styleTextInput:styles.input,styleContainer:styles.inputContainer,styleErrorText:styles.errorMsg,onChangeText:setPhone,error:'must be valid US number',placeholder:\"phone number\",showError:errors.mobileNumber?true:false,error:((_errors$mobileNumber=errors.mobileNumber)==null?void 0:_errors$mobileNumber.msg)||\"Invaild phone number\",isMobilePhone:'en-US',keyboardType:\"phone-pad\",autoComplete:'tel',autoCapitalize:\"none\",value:phone}),React.createElement(PasswordTextInput,{styleTextInput:styles.inputFontSize,styleErrorContainer:styles.inputContainer,styleContainer:styles.input,onChangeText:setPassword,autoComplete:'password',showError:errors.password?true:false,errorMsg:((_errors$password=errors.password)==null?void 0:_errors$password.msg)||\"Invaild password\",placeholder:\"Password\",value:password}),React.createElement(PasswordTextInput,{styleTextInput:styles.inputFontSize,styleErrorContainer:styles.inputContainer,styleContainer:styles.input,onChangeText:setConfirmPassword,placeholder:\"Confirm Password\",validate:function validate(text){return text===password;},errorMsg:'Must match password',value:confirmPassword}),React.createElement(Divider,{style:styles.horizontalMarginDivider,orientation:'center'}),React.createElement(LoadingButton,{title:\"Signup!\",disable:true,styleButton:styles.horizontalMargin,onPress:handleSubmitForm})));};export default connect(mapStateToProps,mapDispatchToProps)(SignupScreen);var styles=StyleSheet.create({container:{flex:1,flexDirection:'column',backgroundColor:'#fff',alignContent:'center'},row:{flexDirection:'row',justifyContent:'space-around',marginBottom:10,marginTop:15},input:{fontSize:16,width:200,margin:12,borderRadius:10,borderWidth:1,padding:6},inputContainer:{alignSelf:'center'},errorMsg:{marginLeft:'6%'},inputFontSize:{fontSize:16},signUpBtn:{fontSize:17},titleFont:{fontSize:25,fontWeight:'bold',color:colors.btnGreen,marginLeft:10,marginTop:0,textAlign:'center'},translationFont:{fontSize:15,color:'#808080',alignSelf:'flex-end',marginRight:95,textAlign:'center'},horizontalMargin:{marginBottom:30,marginTop:10},horizontalMarginDivider:{marginBottom:20,marginTop:10}});","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/screens/SignupScreen.js"],"names":["React","useState","StatusBar","SafeAreaProvider","SafeAreaView","connect","mapStateToProps","mapDispatchToProps","successToast","errorToast","signup","LoadingButton","ValidatingTextInput","PasswordTextInput","Divider","Button","colors","SignupScreen","signupUser","navigation","errors","setErrors","username","setUsername","firstname","setFirstname","lastname","setLastname","email","setEmail","phone","setPhone","password","setPassword","confirmPassword","setConfirmPassword","parseErrors","parsedErros","forEach","err","param","value","msg","handleSubmitForm","user","mobileNumber","then","result","text1","cookie","catch","console","log","response","data","message","styles","container","titleFont","translationFont","input","inputContainer","errorMsg","inputFontSize","text","horizontalMarginDivider","horizontalMargin","StyleSheet","create","flex","flexDirection","backgroundColor","alignContent","row","justifyContent","marginBottom","marginTop","fontSize","width","margin","borderRadius","borderWidth","padding","alignSelf","marginLeft","signUpBtn","fontWeight","color","btnGreen","textAlign","marginRight"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, ScrollView } from 'react-native';\nimport React, { useState } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider, SafeAreaView } from 'react-native-safe-area-context';\nimport { connect } from 'react-redux';\nimport { mapStateToProps, mapDispatchToProps } from '../state/mappers.js';\nimport { successToast, errorToast } from '../components/Toaster.js';\nimport { signup } from '../queries/auth';\nimport LoadingButton from '../components/buttons/LoadingButton.js'\nimport ValidatingTextInput from '../components/text-inputs/ValidatingTextInput.js'\nimport PasswordTextInput from '../components/text-inputs/PasswordTextInput.js';\nimport Divider from 'react-native-divider';\nimport Button from '../components/buttons/Button.js';\nimport colors from '../config/colors.js';\n\n\nconst SignupScreen = ({ signupUser, navigation }) => {\n    const [errors, setErrors] = useState([]);\n    const [username, setUsername] = useState(\"tim4\");\n    const [firstname, setFirstname] = useState(\"Timothy\");\n    const [lastname, setLastname] = useState(\"Sanchez\");\n    const [email, setEmail] = useState(\"timothySanchez@email.com\");\n    const [phone, setPhone] = useState(\"17863403679\");\n    const [password, setPassword] = useState(\"SuperSecret1\");\n    const [confirmPassword, setConfirmPassword] = useState(\"SuperSecret1\");\n\n    const parseErrors = errors => { // parse Errors\n        let parsedErros = {};\n        errors.forEach( err => parsedErros[err.param] = {\n            value: err.value,\n            msg: err.msg,\n        });\n        setErrors(parsedErros);\n        return parsedErros;\n    }\n\n    const handleSubmitForm = async () => {\n        let user = { username, firstname, lastname,\n            email, mobileNumber: phone, password };\n        await signup(user)\n            .then(result => {\n            successToast({ text1: `Signed up as ${user.username}` });\n            signupUser({\n                ...user,\n                cookie: result.cookie,\n            });\n        }).catch( err => {\n            console.log('got this error');\n            console.log(err);\n            if(err.response){\n                //errorToast({ text1: \"Failed to sign up\" });\n                if(err.response.data.errors)\n                    parseErrors(err.response.data.errors);\n            }else if(err.message)\n                errorToast({ text1: err.message });\n        })\n    }\n\n    return <ScrollView style={styles.container}>\n        <StatusBar style=\"auto\"/>\n        <SafeAreaView>\n            <Text style={styles.titleFont}>Join the Ayllu</Text>\n            <Text style={styles.translationFont}>( Family )</Text>\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setUsername}\n                matches={'username'}\n                placeholder=\"username\"\n                showError={ errors.username? true:false }\n                error={errors.username?.msg ||\n                        \"Invaild username\" }\n                autoCapitalize=\"none\"\n                autoCorrect={false}\n                autoComplete={'username'}\n                blurOnSubmit={true}\n                value={username}/>\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setFirstname}\n                placeholder=\"firstname\"\n                showError={ errors.firstname? true:false }\n                error={errors.firstname?.msg ||\n                        \"Invaild firstname\" }\n                autoComplete={'name-given'}\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                value={firstname}/>\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setLastname}\n                placeholder=\"lastname\"\n                showError={ errors.lastname? true:false }\n                error={errors.lastname?.msg || \"Invaild lastname\" }\n                autoComplete={'name-family'}\n                autoCorrect={false}\n                autoCapitalize=\"none\"\n                value={lastname} />\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setEmail}\n                error={\"most be valid email\"}\n                placeholder=\"email\"\n                showError={ errors.email? true:false }\n                error={errors.email?.msg || \"Invaild email\" }\n                keyboardType={\"email-address\"}\n                autoComplete={'email'}\n                isEmail\n                autoCapitalize=\"none\"\n                value={email} />\n            <ValidatingTextInput\n                styleTextInput={styles.input}\n                styleContainer={styles.inputContainer}\n                styleErrorText={styles.errorMsg}\n                onChangeText={setPhone}\n                error={'must be valid US number'}\n                placeholder=\"phone number\"\n                showError={ errors.mobileNumber? true:false }\n                error={errors.mobileNumber?.msg ||\n                        \"Invaild phone number\" }\n                isMobilePhone={'en-US'}\n                keyboardType={\"phone-pad\"}\n                autoComplete={'tel'}\n                autoCapitalize=\"none\"\n                value={phone} />\n            <PasswordTextInput\n                styleTextInput={styles.inputFontSize}\n                styleErrorContainer={styles.inputContainer}\n                styleContainer={styles.input}\n                onChangeText={setPassword}\n                autoComplete={'password'}\n                showError={ errors.password? true:false }\n                errorMsg={errors.password?.msg ||\n                        \"Invaild password\" }\n                placeholder=\"Password\"\n                value={password} />\n            <PasswordTextInput\n                styleTextInput={styles.inputFontSize}\n                styleErrorContainer={styles.inputContainer}\n                styleContainer={styles.input}\n                onChangeText={setConfirmPassword}\n                placeholder=\"Confirm Password\"\n                validate={text => text === password}\n                errorMsg={'Must match password'}\n                value={confirmPassword} />\n            <Divider style={styles.horizontalMarginDivider} orientation={'center'}/>\n            <LoadingButton title=\"Signup!\"\n                disable={true}\n                styleButton={styles.horizontalMargin}\n                onPress={handleSubmitForm} />\n        </SafeAreaView>\n    </ScrollView>\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignupScreen);\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        flexDirection: 'column',\n        backgroundColor: '#fff',\n        //alignItems: 'center',\n        alignContent: 'center',\n        //justifyContent: 'space-evenly',\n    },\n    row:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        marginBottom: 10,\n        marginTop: 15,\n    },\n    input: {\n        fontSize: 16,\n        width:  200,\n        margin: 12,\n        borderRadius: 10,\n        borderWidth: 1,\n        padding: 6,\n    },\n    inputContainer: {\n        alignSelf: 'center',\n    },\n    errorMsg:{\n        //alignSelf: 'center',\n        marginLeft: '6%',\n    },\n    inputFontSize: {\n        fontSize: 16,\n    },\n    signUpBtn:{\n        fontSize: 17,\n    },\n    titleFont: {\n        fontSize: 25,\n        fontWeight: 'bold',\n        color: colors.btnGreen, \n        marginLeft: 10,\n        marginTop: 0,\n        textAlign: 'center',\n    },\n    translationFont: {\n        fontSize: 15,\n        color: '#808080', // gray\n        alignSelf: 'flex-end',\n        marginRight: 95,\n        textAlign: 'center',\n    },\n    horizontalMargin:{\n        marginBottom: 30,\n        marginTop: 10,\n    },\n    horizontalMarginDivider:{\n        marginBottom: 20,\n        marginTop: 10,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}