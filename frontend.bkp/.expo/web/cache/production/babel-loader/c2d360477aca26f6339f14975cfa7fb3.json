{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";function _createSuper(Derived){var hasNativeReflectConstruct=_isNativeReflectConstruct();return function _createSuperInternal(){var Super=_getPrototypeOf(Derived),result;if(hasNativeReflectConstruct){var NewTarget=_getPrototypeOf(this).constructor;result=Reflect.construct(Super,arguments,NewTarget);}else{result=Super.apply(this,arguments);}return _possibleConstructorReturn(this,result);};}function _isNativeReflectConstruct(){if(typeof Reflect===\"undefined\"||!Reflect.construct)return false;if(Reflect.construct.sham)return false;if(typeof Proxy===\"function\")return true;try{Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){}));return true;}catch(e){return false;}}function _defineProperty(obj,key,value){if(key in obj){Object.defineProperty(obj,key,{value:value,enumerable:true,configurable:true,writable:true});}else{obj[key]=value;}return obj;}import*as React from'react';import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var SceneView=function(_React$Component){_inherits(SceneView,_React$Component);var _super=_createSuper(SceneView);function SceneView(){var _this;_classCallCheck(this,SceneView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_defineProperty(_assertThisInitialized(_this),\"state\",{loading:Math.abs(_this.props.navigationState.index-_this.props.index)>_this.props.lazyPreloadDistance});_defineProperty(_assertThisInitialized(_this),\"timerHandler\",void 0);_defineProperty(_assertThisInitialized(_this),\"unsubscribe\",null);_defineProperty(_assertThisInitialized(_this),\"handleEnter\",function(value){var index=_this.props.index;if(value===index){_this.setState(function(prevState){if(prevState.loading){return{loading:false};}return null;});}});return _this;}_createClass(SceneView,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;if(this.props.lazy){this.unsubscribe=this.props.addEnterListener(this.handleEnter);}else if(this.state.loading){this.timerHandler=setTimeout(function(){return _this2.setState({loading:false});},0);}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps,prevState){if(this.props.lazy!==prevProps.lazy||this.state.loading!==prevState.loading){if(this.props.lazy&&this.state.loading){var _this$unsubscribe;(_this$unsubscribe=this.unsubscribe)===null||_this$unsubscribe===void 0?void 0:_this$unsubscribe.call(this);this.unsubscribe=this.props.addEnterListener(this.handleEnter);}else{var _this$unsubscribe2;(_this$unsubscribe2=this.unsubscribe)===null||_this$unsubscribe2===void 0?void 0:_this$unsubscribe2.call(this);}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var _this$unsubscribe3;(_this$unsubscribe3=this.unsubscribe)===null||_this$unsubscribe3===void 0?void 0:_this$unsubscribe3.call(this);if(this.timerHandler){clearTimeout(this.timerHandler);this.timerHandler=undefined;}}},{key:\"render\",value:function render(){var _this$props=this.props,navigationState=_this$props.navigationState,index=_this$props.index,layout=_this$props.layout,style=_this$props.style;var loading=this.state.loading;var focused=navigationState.index===index;return React.createElement(View,{accessibilityElementsHidden:!focused,importantForAccessibility:focused?'auto':'no-hide-descendants',style:[styles.route,layout.width?{width:layout.width}:focused?StyleSheet.absoluteFill:null,style]},focused||layout.width?this.props.children({loading:loading}):null);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(state.loading&&Math.abs(props.navigationState.index-props.index)<=props.lazyPreloadDistance){return{loading:false};}return null;}}]);return SceneView;}(React.Component);export{SceneView as default};var styles=StyleSheet.create({route:{flex:1,overflow:'hidden'}});","map":{"version":3,"sources":["SceneView.tsx"],"names":["React","getDerivedStateFromProps","state","Math","props","loading","lazyPreloadDistance","componentDidMount","setTimeout","componentDidUpdate","prevProps","prevState","componentWillUnmount","clearTimeout","value","index","render","style","focused","navigationState","styles","layout","width","StyleSheet","route","flex","overflow"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport type {\n  SceneRendererProps,\n  EventEmitterProps,\n  NavigationState,\n  Route,\n} from './types';\n\ntype Props<T extends Route> = SceneRendererProps &\n  EventEmitterProps & {\n    navigationState: NavigationState<T>;\n    lazy: boolean;\n    lazyPreloadDistance: number;\n    index: number;\n    children: (props: { loading: boolean }) => React.ReactNode;\n    style?: StyleProp<ViewStyle>;\n  };\n\ntype State = {\n  loading: boolean;\n};\n\nexport default class SceneView<T extends Route> extends React.Component<\n  Props<T>,\n  State\n> {\n  static getDerivedStateFromProps(props: Props<Route>, state: State) {\n    if (\n      state.loading &&\n      Math.abs(props.navigationState.index - props.index) <=\n        props.lazyPreloadDistance\n    ) {\n      // Always render the route when it becomes focused\n      return { loading: false };\n    }\n\n    return null;\n  }\n\n  state = {\n    loading:\n      Math.abs(this.props.navigationState.index - this.props.index) >\n      this.props.lazyPreloadDistance,\n  };\n\n  componentDidMount() {\n    if (this.props.lazy) {\n      // If lazy mode is enabled, listen to when we enter screens\n      this.unsubscribe = this.props.addEnterListener(this.handleEnter);\n    } else if (this.state.loading) {\n      // If lazy mode is not enabled, render the scene with a delay if not loaded already\n      // This improves the initial startup time as the scene is no longer blocking\n      this.timerHandler = setTimeout(\n        () => this.setState({ loading: false }),\n        0\n      );\n    }\n  }\n\n  componentDidUpdate(prevProps: Props<T>, prevState: State) {\n    if (\n      this.props.lazy !== prevProps.lazy ||\n      this.state.loading !== prevState.loading\n    ) {\n      // We only need the listener if the tab hasn't loaded yet and lazy is enabled\n      if (this.props.lazy && this.state.loading) {\n        this.unsubscribe?.();\n        this.unsubscribe = this.props.addEnterListener(this.handleEnter);\n      } else {\n        this.unsubscribe?.();\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe?.();\n\n    if (this.timerHandler) {\n      clearTimeout(this.timerHandler);\n      this.timerHandler = undefined;\n    }\n  }\n\n  private timerHandler: NodeJS.Timeout | undefined;\n\n  private unsubscribe: (() => void) | null = null;\n\n  private handleEnter = (value: number) => {\n    const { index } = this.props;\n\n    // If we're entering the current route, we need to load it\n    if (value === index) {\n      this.setState((prevState) => {\n        if (prevState.loading) {\n          return { loading: false };\n        }\n\n        return null;\n      });\n    }\n  };\n\n  render() {\n    const { navigationState, index, layout, style } = this.props;\n    const { loading } = this.state;\n\n    const focused = navigationState.index === index;\n\n    return (\n      <View\n        accessibilityElementsHidden={!focused}\n        importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n        style={[\n          styles.route,\n          // If we don't have the layout yet, make the focused screen fill the container\n          // This avoids delay before we are able to render pages side by side\n          layout.width\n            ? { width: layout.width }\n            : focused\n            ? StyleSheet.absoluteFill\n            : null,\n          style,\n        ]}\n      >\n        {\n          // Only render the route only if it's either focused or layout is available\n          // When layout is not available, we must not render unfocused routes\n          // so that the focused route can fill the screen\n          focused || layout.width ? this.props.children({ loading }) : null\n        }\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  route: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}