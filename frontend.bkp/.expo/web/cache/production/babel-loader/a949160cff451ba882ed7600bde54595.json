{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";var checkToken=function checkToken(cookie){var username,_args=arguments;return _regeneratorRuntime.async(function checkToken$(_context){while(1){switch(_context.prev=_context.next){case 0:username=_args.length>1&&_args[1]!==undefined?_args[1]:null;_context.next=3;return _regeneratorRuntime.awrap(axios.get('/user/whoami',{},{withCredentials:false,headers:{Authorization:\"Bearer \"+cookie.value}}).then(function(res){if(username)return true;if(res.data.username===username)return true;else return false;}).catch(function(error){console.log(error);if(error.response)console.log(error.response.data);return null;}));case 3:return _context.abrupt(\"return\",_context.sent);case 4:case\"end\":return _context.stop();}}},null,null,null,Promise);};var signin=function signin(_ref){var username,password;return _regeneratorRuntime.async(function signin$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:username=_ref.username,password=_ref.password;_context2.next=3;return _regeneratorRuntime.awrap(axios.post('/auth/signin',{\"username\":username,\"password\":password},{withCredentials:false}).then(function(res){var cookie=setCookie.parse(res,{decodeValues:true,map:true});return{data:res.data.status,cookie:cookie[\"maki-cookie\"]};}).catch(function(error){throw error;}));case 3:return _context2.abrupt(\"return\",_context2.sent);case 4:case\"end\":return _context2.stop();}}},null,null,null,Promise);};var signout=function signout(){return _regeneratorRuntime.async(function signout$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return _regeneratorRuntime.awrap(axios.post('/auth/signout').then(function(res){if(res.data.status===\"success\")return true;}).catch(function(error){if(error.response)console.log(error.response.data);return false;}));case 2:return _context3.abrupt(\"return\",_context3.sent);case 3:case\"end\":return _context3.stop();}}},null,null,null,Promise);};var signup=function signup(user){return _regeneratorRuntime.async(function signup$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.next=2;return _regeneratorRuntime.awrap(axios.post('/auth/signup',user,{withCredentials:false,headers:{'content-type':'application/json'}}).then(function(res){console.log(\"got response in sign up\");console.log(res);return res;}).catch(function(error){console.log(\"got error in sign up\");console.log(error);throw error;}));case 2:return _context4.abrupt(\"return\",_context4.sent);case 3:case\"end\":return _context4.stop();}}},null,null,null,Promise);};export{signin,signup,signout,checkToken};","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/queries/auth.js"],"names":["checkToken","cookie","username","axios","get","withCredentials","headers","Authorization","value","then","res","data","catch","error","console","log","response","signin","password","post","setCookie","parse","decodeValues","map","status","signout","signup","user"],"mappings":"4DACA,GAAMA,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAOC,MAAP,mJAAeC,QAAf,+CAA0B,IAA1B,kDAETC,KAAK,CAACC,GAAN,CAAU,cAAV,CAA0B,EAA1B,CAA+B,CACjCC,eAAe,CAAE,KADgB,CAEjCC,OAAO,CAAE,CAAEC,aAAa,WAAYN,MAAM,CAACO,KAAlC,CAFwB,CAA/B,EAGHC,IAHG,CAGG,SAAAC,GAAG,CAAI,CACZ,GAAGR,QAAH,CAAa,MAAO,KAAP,CACb,GAAGQ,GAAG,CAACC,IAAJ,CAAST,QAAT,GAAsBA,QAAzB,CAAmC,MAAO,KAAP,CAAnC,IACK,OAAO,MAAP,CACR,CAPK,EAOHU,KAPG,CAOI,SAAAC,KAAK,CAAI,CACfC,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,GAAGA,KAAK,CAACG,QAAT,CACIF,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeL,IAA3B,EACJ,MAAO,KAAP,CACH,CAZK,CAFS,6HAAnB,CAgBA,GAAMM,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,gJAASf,QAAT,MAASA,QAAT,CAAmBgB,QAAnB,MAAmBA,QAAnB,mDACLf,KAAK,CACNgB,IADC,CACK,cADL,CACqB,CACnB,WAAYjB,QADO,CAEnB,WAAYgB,QAFO,CADrB,CAIC,CAAEb,eAAe,CAAE,KAAnB,CAJD,EAKDI,IALC,CAKK,SAAAC,GAAG,CAAI,CACV,GAAIT,CAAAA,MAAM,CAAGmB,SAAS,CAACC,KAAV,CAAgBX,GAAhB,CAAqB,CAC9BY,YAAY,CAAE,IADgB,CAE9BC,GAAG,CAAE,IAFyB,CAArB,CAAb,CAIA,MAAO,CACHZ,IAAI,CAAED,GAAG,CAACC,IAAJ,CAASa,MADZ,CAEHvB,MAAM,CAAEA,MAAM,CAAC,aAAD,CAFX,CAAP,CAIH,CAdC,EAeDW,KAfC,CAeM,SAAAC,KAAK,CAAI,CACb,KAAMA,CAAAA,KAAN,CAEH,CAlBC,CADK,gIAAf,CAqBA,GAAMY,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,yKACNtB,KAAK,CACNgB,IADC,CACI,eADJ,EAEDV,IAFC,CAEK,SAAAC,GAAG,CAAI,CACV,GAAGA,GAAG,CAACC,IAAJ,CAASa,MAAT,GAAoB,SAAvB,CAAkC,MAAO,KAAP,CACrC,CAJC,EAKDZ,KALC,CAKM,SAAAC,KAAK,CAAI,CACb,GAAGA,KAAK,CAACG,QAAT,CACIF,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,CAAeL,IAA3B,EACJ,MAAO,MAAP,CACH,CATC,CADM,gIAAhB,CAYA,GAAMe,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAAMC,IAAN,uKACLxB,KAAK,CACNgB,IADC,CACK,cADL,CACqBQ,IADrB,CAC4B,CAC1BtB,eAAe,CAAE,KADS,CAE1BC,OAAO,CAAE,CAEL,eAAgB,kBAFX,CAFiB,CAD5B,EAQDG,IARC,CAQK,SAAAC,GAAG,CAAI,CACVI,OAAO,CAACC,GAAR,CAAY,yBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYL,GAAZ,EACA,MAAOA,CAAAA,GAAP,CACH,CAZC,EAaDE,KAbC,CAaM,SAAAC,KAAK,CAAI,CACbC,OAAO,CAACC,GAAR,CAAY,sBAAZ,EACAD,OAAO,CAACC,GAAR,CAAYF,KAAZ,EACA,KAAMA,CAAAA,KAAN,CAEH,CAlBC,CADK,gIAAf,CAqBA,OAASI,MAAT,CAAiBS,MAAjB,CAAyBD,OAAzB,CAAkCzB,UAAlC","sourcesContent":["\nconst checkToken = async (cookie, username = null)  => \n\t\t// this function has to be changed to work with the token\n    await axios.get('/user/whoami', { }, { \n        withCredentials: false,\n        headers: { Authorization: `Bearer ${cookie.value}` },\n    }).then( res => {\n        if(username) return true;\n        if(res.data.username === username) return true;\n        else return false;\n    }).catch( error => {\n        console.log(error);\n        if(error.response) \n            console.log(error.response.data); \n        return null;\n    })\n\nconst signin = async ({ username, password }) =>\n    await axios\n        .post( '/auth/signin', {  //send query without\n            \"username\": username, //auto seting the cookie value\n            \"password\": password,\n        }, { withCredentials: false })\n        .then( res => { // this only run with status 200\n            let cookie = setCookie.parse(res, {\n                decodeValues: true,  // default: true\n                map: true\n            });\n            return { \n                data: res.data.status, \n                cookie: cookie[\"maki-cookie\"],\n            };\n        })\n        .catch( error => { // handle error\n            throw error;\n            //return { suceess: false, msg: error.response.data};\n        })\n\nconst signout = async () =>\n    await axios\n        .post('/auth/signout')\n        .then( res => {\n            if(res.data.status === \"success\") return true;\n        })\n        .catch( error => {\n            if(error.response)\n                console.log(error.response.data);\n            return false;\n        })\n\nconst signup = async user =>\n    await axios\n        .post( '/auth/signup', user , {\n            withCredentials: false,\n            headers: {\n                //'content-type': 'multipart/form-data',\n                'content-type': 'application/json',\n            },\n        })\n        .then( res => { // this only run with status 200\n            console.log(\"got response in sign up\");\n            console.log(res);\n            return res;\n        })\n        .catch( error => { // handle error\n            console.log(\"got error in sign up\");\n            console.log(error);\n            throw error;\n            //return { suceess: false, msg: error.response.data};\n        })\n\nexport { signin, signup, signout, checkToken }\n"]},"metadata":{},"sourceType":"module"}