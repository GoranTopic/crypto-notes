{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useEffect,useState,useCallback}from'react';import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import{faEye,faEyeSlash}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from'@fortawesome/react-native-fontawesome';import TextInput from\"./TextInput.js\";var Eye=React.createElement(FontAwesomeIcon,{className:\"icon\",icon:faEye});var EyeSlash=React.createElement(FontAwesomeIcon,{className:\"icon\",icon:faEyeSlash});export default function PasswordTextInput(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showPass=_useState2[0],setShowPass=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),stateShowError=_useState4[0],setStateShowError=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var toogleShowpass=function toogleShowpass(){return setShowPass(!showPass);};var _props$styleTextInput=props.styleTextInput,styleTextInput=_props$styleTextInput===void 0?{}:_props$styleTextInput,_props$styleContainer=props.styleContainer,styleContainer=_props$styleContainer===void 0?{}:_props$styleContainer,_props$styleErrorText=props.styleErrorText,styleErrorText=_props$styleErrorText===void 0?{}:_props$styleErrorText,_props$styleErrorCont=props.styleErrorContainer,styleErrorContainer=_props$styleErrorCont===void 0?{}:_props$styleErrorCont,_props$styleIcon=props.styleIcon,styleIcon=_props$styleIcon===void 0?{}:_props$styleIcon,_props$showError=props.showError,showError=_props$showError===void 0?false:_props$showError,_props$value=props.value,value=_props$value===void 0?'':_props$value,_props$errorMsg=props.errorMsg,errorMsg=_props$errorMsg===void 0?'Invalid':_props$errorMsg,_props$validate=props.validate,validate=_props$validate===void 0?function(text){text?true:false;}:_props$validate;var containerStyles=[styles.container,styleContainer];var errorContainerStyles=[styles.errorContainer,styleErrorContainer];var errorTextStyles=[styles.errorText,styleErrorText];var textInputStyles=[styles.textInput,styleTextInput];var iconStyles=[styles.icon,styleIcon];var validateValue=useEffect(function(){if(showError)setStateShowError(true);else if(validate(value)===false){setStateShowError(true);setError(errorMsg);}else setStateShowError(false);},[value,errorMsg]);return React.createElement(View,{style:errorContainerStyles},React.createElement(View,{style:containerStyles},React.createElement(TextInput,_extends({},props,{style:textInputStyles,autoCorrect:false,secureTextEntry:!showPass,placeholder:\"password\",value:value})),React.createElement(TouchableOpacity,{onPress:toogleShowpass,style:iconStyles},React.createElement(FontAwesomeIcon,{className:\"icon\",size:18,icon:showPass?faEye:faEyeSlash}))),stateShowError?React.createElement(Text,{style:errorTextStyles},\"* \",errorMsg):React.createElement(React.Fragment,null));}var styles=StyleSheet.create({errorContainer:{alignSelf:'center',width:200},errorText:{color:'red',fontStyle:'italic',fontSize:12,fontWeight:'900',textAlign:'left',marginLeft:'6%'},container:{flexDirection:'row',alignSelf:'center',justifyContent:'space-between'},textInput:{alignSelf:'stretch',width:'85%'},icon:{paddingRight:2,alignSelf:'center'}});","map":{"version":3,"sources":["/home/telix/crypto-notes/cryto-notes/src/components/text-inputs/PasswordTextInput.js"],"names":["React","useEffect","useState","useCallback","faEye","faEyeSlash","FontAwesomeIcon","TextInput","Eye","EyeSlash","PasswordTextInput","props","showPass","setShowPass","stateShowError","setStateShowError","error","setError","toogleShowpass","styleTextInput","styleContainer","styleErrorText","styleErrorContainer","styleIcon","showError","value","errorMsg","validate","text","containerStyles","styles","container","errorContainerStyles","errorContainer","errorTextStyles","errorText","textInputStyles","textInput","iconStyles","icon","validateValue","StyleSheet","create","alignSelf","width","color","fontStyle","fontSize","fontWeight","textAlign","marginLeft","flexDirection","justifyContent","paddingRight"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\nimport { StyleSheet, TouchableOpacity, View, Text } from 'react-native';\nimport { faEye,faEyeSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport TextInput from './TextInput.js';\n\nconst Eye = <FontAwesomeIcon className=\"icon\" icon={faEye} />;\nconst EyeSlash = <FontAwesomeIcon className=\"icon\" icon ={faEyeSlash}/>;\n\nexport default function PasswordTextInput(props){\n    const [showPass, setShowPass] = useState(false);\n    const [stateShowError, setStateShowError] = useState(false);\n    const [error, setError] = useState('');\n    const toogleShowpass = () => setShowPass(!showPass);\n\n    let {\n        styleTextInput = {},\n        styleContainer = {},\n        styleErrorText = {},\n        styleErrorContainer = {},\n        styleIcon = {},\n        showError=false,\n        value= '',\n        errorMsg = 'Invalid',\n        validate = text => { text? true : false },\n    } = props; \n\n    const containerStyles = [ styles.container,  styleContainer ];\n    const errorContainerStyles = [ styles.errorContainer, styleErrorContainer ];\n    const errorTextStyles = [ styles.errorText, styleErrorText ];\n    const textInputStyles = [ styles.textInput,  styleTextInput ];\n    const iconStyles = [ styles.icon,  styleIcon ];\n\n    const validateValue = useEffect( () => {\n        if(showError) setStateShowError(true);\n        else if(validate(value) === false){\n            setStateShowError(true);\n            setError(errorMsg);\n        }else setStateShowError(false);\n    }, [value, errorMsg]);\n\n    return(\n        <View style={errorContainerStyles}>\n            <View style={containerStyles}>\n                <TextInput\n                    {...props}\n                    style={textInputStyles}\n                    autoCorrect={false}\n                    secureTextEntry={!showPass}\n                    placeholder=\"password\"\n                    value={value} />\n                <TouchableOpacity onPress={toogleShowpass}\n                    style={iconStyles} >\n                    <FontAwesomeIcon \n                        className=\"icon\"\n                        size={18}\n                        icon ={ showPass? faEye : faEyeSlash }/>\n                </TouchableOpacity> \n            </View>\n            { stateShowError?\n                <Text style={errorTextStyles}>\n                    * {errorMsg}\n                </Text> :\n                    <></>\n            }\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    errorContainer: {\n        alignSelf:'center',\n        width: 200,\n    },\n    errorText: {\n        color: 'red',\n        fontStyle: 'italic',\n        fontSize: 12,\n        fontWeight: '900',\n        textAlign: 'left',\n        marginLeft: '6%',\n    },\n    container: {\n        flexDirection:'row',\n        alignSelf:'center',\n        justifyContent: 'space-between',\n    },\n    textInput: {\n        alignSelf: 'stretch',\n        width: '85%',\n    },\n    icon: {\n        paddingRight: 2,\n        alignSelf:'center',\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}